ARM GAS  C:\Users\sinow\AppData\Local\Temp\cczERXsC.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"CapSense_CSD_CSHL.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.CapSense_CSD_BaseInit,"ax",%progbits
  20              		.align	2
  21              		.global	CapSense_CSD_BaseInit
  22              		.thumb
  23              		.thumb_func
  24              		.type	CapSense_CSD_BaseInit, %function
  25              	CapSense_CSD_BaseInit:
  26              	.LFB0:
  27              		.file 1 "Generated_Source\\PSoC5\\CapSense_CSD_CSHL.c"
   1:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** /*******************************************************************************
   2:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** * File Name: CapSense_CSD_CSHL.c
   3:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** * Version 3.50
   4:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *
   5:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** * Description:
   6:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  This file provides the source code to the High Level APIs for the CapSesne
   7:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  CSD component.
   8:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *
   9:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** * Note:
  10:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *
  11:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** ********************************************************************************
  12:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** * Copyright 2008-2013, Cypress Semiconductor Corporation.  All rights reserved.
  13:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** * You may use this file only in accordance with the license, terms, conditions,
  14:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** * disclaimers, and limitations in the end user license agreement accompanying
  15:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** * the software package with which this file was provided.
  16:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *******************************************************************************/
  17:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
  18:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** #include "CapSense_CSD_CSHL.h"
  19:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
  20:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** /* Storage of filters data */
  21:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** #if ( (CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_MEDIAN_FILTER) | \
  22:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****       (CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_AVERAGING_FILTER) )
  23:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
  24:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     uint16 CapSense_CSD_rawFilterData1[CapSense_CSD_TOTAL_SENSOR_COUNT];
  25:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     uint16 CapSense_CSD_rawFilterData2[CapSense_CSD_TOTAL_SENSOR_COUNT];
  26:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
  27:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** #elif ( (CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_IIR2_FILTER)   | \
  28:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         (CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_IIR4_FILTER)   | \
  29:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         (CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_JITTER_FILTER) | \
  30:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         (CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_IIR8_FILTER)   | \
ARM GAS  C:\Users\sinow\AppData\Local\Temp\cczERXsC.s 			page 2


  31:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         (CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_IIR16_FILTER) )
  32:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         
  33:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     uint16 CapSense_CSD_rawFilterData1[CapSense_CSD_TOTAL_SENSOR_COUNT];
  34:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
  35:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** #else
  36:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     /* No Raw filters */
  37:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** #endif  /* ( (CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_MEDIAN_FILTER) || \
  38:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         *    (CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_AVERAGING_FILTER) )
  39:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         */
  40:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
  41:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** uint16 CapSense_CSD_sensorBaseline[CapSense_CSD_TOTAL_SENSOR_COUNT];
  42:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** uint8 CapSense_CSD_sensorBaselineLow[CapSense_CSD_TOTAL_SENSOR_COUNT];
  43:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** uint16 CapSense_CSD_sensorSignal[CapSense_CSD_TOTAL_SENSOR_COUNT];
  44:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** uint8 CapSense_CSD_sensorOnMask[(((CapSense_CSD_TOTAL_SENSOR_COUNT - 1u) / 8u) + 1u)];
  45:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
  46:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** uint8 CapSense_CSD_lowBaselineResetCnt[CapSense_CSD_TOTAL_SENSOR_COUNT];
  47:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
  48:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** const uint16 CYCODE CapSense_CSD_fingerThreshold[] = {
  49:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     84u, 
  50:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** };
  51:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
  52:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** const uint16 CYCODE CapSense_CSD_noiseThreshold[] = {
  53:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     42u, 
  54:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** };
  55:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
  56:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** const uint16 CYCODE CapSense_CSD_hysteresis[] = {
  57:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     0u, 
  58:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** };
  59:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
  60:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** const uint8 CYCODE CapSense_CSD_debounce[] = {
  61:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     1u, 
  62:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** };
  63:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
  64:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** uint8 CapSense_CSD_debounceCounter[] = {
  65:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     0u, 
  66:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** };
  67:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
  68:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** const uint8 CYCODE CapSense_CSD_rawDataIndex[] = {
  69:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     0u, /* LinearSlider0__LS */
  70:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
  71:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** };
  72:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
  73:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** const uint8 CYCODE CapSense_CSD_numberOfSensors[] = {
  74:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     5u, /* LinearSlider0__LS */
  75:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
  76:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** };
  77:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
  78:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** const uint16 CYCODE CapSense_CSD_centroidMult[] = {
  79:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     6400u, 
  80:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** };
  81:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
  82:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** const uint8 CYCODE CapSense_CSD_posFiltersMask[] = {
  83:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     0x8u, 
  84:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** };
  85:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
  86:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** uint8 CapSense_CSD_posFiltersData[] = {
  87:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     1u, 0u, 0u, 
ARM GAS  C:\Users\sinow\AppData\Local\Temp\cczERXsC.s 			page 3


  88:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** };
  89:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
  90:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
  91:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
  92:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
  93:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** /*******************************************************************************
  94:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** * Function Name: CapSense_CSD_BaseInit
  95:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** ********************************************************************************
  96:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *
  97:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** * Summary:
  98:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  Loads the CapSense_CSD_sensorBaseline[sensor] array element with an 
  99:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  initial value which is equal to raw count value. 
 100:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  Resets to zero CapSense_CSD_sensorBaselineLow[sensor] and 
 101:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  CapSense_CSD_sensorSignal[sensor] array element.
 102:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  Loads CapSense_CSD_debounceCounter[sensor] array element with initial 
 103:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  value equal CapSense_CSD_debounce[].
 104:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  Loads the CapSense_CSD_rawFilterData2[sensor] and 
 105:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  CapSense_CSD_rawFilterData2[sensor] array element with an 
 106:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  initial value which is equal raw count value if raw data filter is enabled.
 107:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *
 108:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** * Parameters:
 109:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  sensor:  Sensor number.
 110:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *
 111:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** * Return:
 112:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  None
 113:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *
 114:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** * Global Variables:
 115:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  CapSense_CSD_sensorBaseline[]    - used to store baseline value.
 116:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  CapSense_CSD_sensorBaselineLow[] - used to store fraction byte of 
 117:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  baseline value.
 118:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  CapSense_CSD_sensorSignal[]      - used to store diffence between 
 119:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  current value of raw data and previous value of baseline.
 120:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  CapSense_CSD_debounceCounter[]   - used to store current debounce 
 121:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  counter of sensor. Widget which has this parameter are buttons, matrix 
 122:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  buttons, proximity, guard. All other widgets haven't debounce parameter
 123:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  and use the last element of this array with value 0 (it means no debounce).
 124:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  CapSense_CSD_rawFilterData1[]    - used to store previous sample of 
 125:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  any enabled raw data filter.
 126:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  CapSense_CSD_rawFilterData2[]    - used to store before previous sample
 127:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  of enabled raw data filter. Only required for median or average filters.
 128:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *
 129:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** * Reentrant:
 130:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  No
 131:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *
 132:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *******************************************************************************/
 133:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** void CapSense_CSD_BaseInit(uint8 sensor) 
 134:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** {
  28              		.loc 1 134 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
  33              	.LVL0:
 135:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     #if ((CapSense_CSD_TOTAL_BUTTONS_COUNT) || (CapSense_CSD_TOTAL_MATRIX_BUTTONS_COUNT) || \
 136:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****          (CapSense_CSD_TOTAL_GENERICS_COUNT))
 137:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         uint8 widget = CapSense_CSD_widgetNumber[sensor];
 138:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     #endif /* ((CapSense_CSD_TOTAL_MATRIX_BUTTONS_COUNT) || (CapSense_CSD_TOTAL_MATRIX_BUTTONS_COUN
ARM GAS  C:\Users\sinow\AppData\Local\Temp\cczERXsC.s 			page 4


 139:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     
 140:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     #if (CapSense_CSD_TOTAL_MATRIX_BUTTONS_COUNT)
 141:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         uint8 debounceIndex;
 142:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     #endif  /* (CapSense_CSD_TOTAL_MATRIX_BUTTONS_COUNT) */
 143:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     
 144:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     #if (CapSense_CSD_TOTAL_GENERICS_COUNT)
 145:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         /* Exclude generic widget */
 146:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         if(widget < CapSense_CSD_END_OF_WIDGETS_INDEX)
 147:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         {
 148:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     #endif  /* CapSense_CSD_TOTAL_GENERICS_COUNT */
 149:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     
 150:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     /* Initialize Baseline */
 151:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     CapSense_CSD_sensorBaseline[sensor] = CapSense_CSD_sensorRaw[sensor];
  34              		.loc 1 151 0
  35 0000 064B     		ldr	r3, .L2
  36 0002 33F81020 		ldrh	r2, [r3, r0, lsl #1]
  37 0006 064B     		ldr	r3, .L2+4
  38 0008 23F81020 		strh	r2, [r3, r0, lsl #1]	@ movhi
 152:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     CapSense_CSD_sensorBaselineLow[sensor] = 0u;
  39              		.loc 1 152 0
  40 000c 0023     		movs	r3, #0
  41 000e 054A     		ldr	r2, .L2+8
  42 0010 1354     		strb	r3, [r2, r0]
 153:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     CapSense_CSD_sensorSignal[sensor] = 0u;
  43              		.loc 1 153 0
  44 0012 054A     		ldr	r2, .L2+12
  45 0014 22F81030 		strh	r3, [r2, r0, lsl #1]	@ movhi
  46 0018 7047     		bx	lr
  47              	.L3:
  48 001a 00BF     		.align	2
  49              	.L2:
  50 001c 00000000 		.word	CapSense_CSD_sensorRaw
  51 0020 00000000 		.word	CapSense_CSD_sensorBaseline
  52 0024 00000000 		.word	CapSense_CSD_sensorBaselineLow
  53 0028 00000000 		.word	CapSense_CSD_sensorSignal
  54              		.cfi_endproc
  55              	.LFE0:
  56              		.size	CapSense_CSD_BaseInit, .-CapSense_CSD_BaseInit
  57              		.section	.text.CapSense_CSD_InitializeSensorBaseline,"ax",%progbits
  58              		.align	2
  59              		.global	CapSense_CSD_InitializeSensorBaseline
  60              		.thumb
  61              		.thumb_func
  62              		.type	CapSense_CSD_InitializeSensorBaseline, %function
  63              	CapSense_CSD_InitializeSensorBaseline:
  64              	.LFB1:
 154:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         
 155:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
 156:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     
 157:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     #if ((CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_MEDIAN_FILTER) |\
 158:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****          (CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_AVERAGING_FILTER))
 159:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
 160:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         CapSense_CSD_rawFilterData1[sensor] = CapSense_CSD_sensorRaw[sensor];
 161:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         CapSense_CSD_rawFilterData2[sensor] = CapSense_CSD_sensorRaw[sensor];
 162:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     
 163:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     #elif ((CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_IIR2_FILTER) |\
 164:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****            (CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_IIR4_FILTER) |\
ARM GAS  C:\Users\sinow\AppData\Local\Temp\cczERXsC.s 			page 5


 165:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****            (CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_JITTER_FILTER) |\
 166:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****            (CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_IIR8_FILTER) |\
 167:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****            (CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_IIR16_FILTER))
 168:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             
 169:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         CapSense_CSD_rawFilterData1[sensor] = CapSense_CSD_sensorRaw[sensor];
 170:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     
 171:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     #else
 172:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         /* No Raw filters */
 173:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     #endif  /* ((CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_MEDIAN_FILTER) | \
 174:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             *   (CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_AVERAGING_FILTER))
 175:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             */
 176:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     
 177:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     #if (CapSense_CSD_TOTAL_GENERICS_COUNT)
 178:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         /* Exclude generic widget */
 179:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         }
 180:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     #endif  /* CapSense_CSD_TOTAL_GENERICS_COUNT */
 181:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** }
 182:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
 183:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
 184:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** /*******************************************************************************
 185:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** * Function Name: CapSense_CSD_InitializeSensorBaseline
 186:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** ********************************************************************************
 187:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *
 188:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** * Summary:
 189:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  Loads the CapSense_CSD_sensorBaseline[sensor] array element with an 
 190:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  initial value by scanning the selected sensor (one channel design) or pair 
 191:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  of sensors (two channels designs). The raw count value is copied into the 
 192:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  baseline array for each sensor. The raw data filters are initialized if 
 193:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  enabled.
 194:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *
 195:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** * Parameters:
 196:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  sensor:  Sensor number.
 197:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *
 198:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** * Return:
 199:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  None
 200:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *
 201:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** * Reentrant:
 202:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  No
 203:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *
 204:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *******************************************************************************/
 205:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** void CapSense_CSD_InitializeSensorBaseline(uint8 sensor)
 206:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                           
 207:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** {
  65              		.loc 1 207 0
  66              		.cfi_startproc
  67              		@ args = 0, pretend = 0, frame = 0
  68              		@ frame_needed = 0, uses_anonymous_args = 0
  69              	.LVL1:
  70 0000 10B5     		push	{r4, lr}
  71              		.cfi_def_cfa_offset 8
  72              		.cfi_offset 4, -8
  73              		.cfi_offset 14, -4
  74 0002 0446     		mov	r4, r0
 208:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     /* Scan sensor */
 209:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     CapSense_CSD_ScanSensor(sensor);
  75              		.loc 1 209 0
  76 0004 FFF7FEFF 		bl	CapSense_CSD_ScanSensor
ARM GAS  C:\Users\sinow\AppData\Local\Temp\cczERXsC.s 			page 6


  77              	.LVL2:
  78              	.L5:
 210:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     while(CapSense_CSD_IsBusy() != 0u)
  79              		.loc 1 210 0 discriminator 1
  80 0008 FFF7FEFF 		bl	CapSense_CSD_IsBusy
  81              	.LVL3:
  82 000c 0028     		cmp	r0, #0
  83 000e FBD1     		bne	.L5
 211:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     {
 212:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         /* Wait while busy */
 213:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     }
 214:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     
 215:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     #if (CapSense_CSD_DESIGN_TYPE == CapSense_CSD_ONE_CHANNEL_DESIGN)
 216:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         /* Initialize Baseline, Signal and debounce counters */       
 217:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         CapSense_CSD_BaseInit(sensor);
  84              		.loc 1 217 0
  85 0010 2046     		mov	r0, r4
  86 0012 FFF7FEFF 		bl	CapSense_CSD_BaseInit
  87              	.LVL4:
  88 0016 10BD     		pop	{r4, pc}
  89              		.cfi_endproc
  90              	.LFE1:
  91              		.size	CapSense_CSD_InitializeSensorBaseline, .-CapSense_CSD_InitializeSensorBaseline
  92              		.section	.text.CapSense_CSD_InitializeAllBaselines,"ax",%progbits
  93              		.align	2
  94              		.global	CapSense_CSD_InitializeAllBaselines
  95              		.thumb
  96              		.thumb_func
  97              		.type	CapSense_CSD_InitializeAllBaselines, %function
  98              	CapSense_CSD_InitializeAllBaselines:
  99              	.LFB2:
 218:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         
 219:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     #else
 220:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     
 221:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         if(sensor < CapSense_CSD_TOTAL_SENSOR_COUNT__CH0)
 222:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         {
 223:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             /* Initialize Baseline, Signal and debounce counters */ 
 224:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             CapSense_CSD_BaseInit(sensor);
 225:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         }
 226:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         
 227:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         if(sensor < CapSense_CSD_TOTAL_SENSOR_COUNT__CH1)
 228:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         {
 229:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             /* Initialize Baseline, Signal and debounce counters */
 230:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             CapSense_CSD_BaseInit(sensor + CapSense_CSD_TOTAL_SENSOR_COUNT__CH0);
 231:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         }
 232:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     
 233:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     #endif  /* (CapSense_CSD_DESIGN_TYPE == CapSense_CSD_ONE_CHANNEL_DESIGN) */
 234:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** }
 235:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
 236:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
 237:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** /*******************************************************************************
 238:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** * Function Name: CapSense_CSD_InitializeAllBaselines
 239:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** ********************************************************************************
 240:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *
 241:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** * Summary:
 242:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  Uses the CapSense_CSD_InitializeSensorBaseline function to loads the 
 243:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  CapSense_CSD_sensorBaseline[] array with an initial values by scanning 
ARM GAS  C:\Users\sinow\AppData\Local\Temp\cczERXsC.s 			page 7


 244:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  all sensors. The raw count values are copied into the baseline array for 
 245:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  all sensors. The raw data filters are initialized if enabled.
 246:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *
 247:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** * Parameters:
 248:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  None
 249:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *
 250:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** * Return:
 251:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  None
 252:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *
 253:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** * Reentrant:
 254:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  No
 255:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *
 256:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *******************************************************************************/
 257:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** void CapSense_CSD_InitializeAllBaselines(void)
 258:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                           
 259:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** {
 100              		.loc 1 259 0
 101              		.cfi_startproc
 102              		@ args = 0, pretend = 0, frame = 0
 103              		@ frame_needed = 0, uses_anonymous_args = 0
 104 0000 10B5     		push	{r4, lr}
 105              		.cfi_def_cfa_offset 8
 106              		.cfi_offset 4, -8
 107              		.cfi_offset 14, -4
 108              	.LVL5:
 260:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     uint8 i;
 261:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     
 262:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     /* The baseline initialize by sensor of sensor pair */
 263:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     for(i = 0u; i < CapSense_CSD_TOTAL_SCANSLOT_COUNT; i++)
 109              		.loc 1 263 0
 110 0002 0024     		movs	r4, #0
 111 0004 04E0     		b	.L8
 112              	.LVL6:
 113              	.L9:
 264:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     {
 265:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         CapSense_CSD_InitializeSensorBaseline(i);
 114              		.loc 1 265 0 discriminator 3
 115 0006 2046     		mov	r0, r4
 116 0008 FFF7FEFF 		bl	CapSense_CSD_InitializeSensorBaseline
 117              	.LVL7:
 263:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     {
 118              		.loc 1 263 0 discriminator 3
 119 000c 0134     		adds	r4, r4, #1
 120              	.LVL8:
 121 000e E4B2     		uxtb	r4, r4
 122              	.LVL9:
 123              	.L8:
 263:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     {
 124              		.loc 1 263 0 is_stmt 0 discriminator 1
 125 0010 042C     		cmp	r4, #4
 126 0012 F8D9     		bls	.L9
 266:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     }
 267:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** }
 127              		.loc 1 267 0 is_stmt 1
 128 0014 10BD     		pop	{r4, pc}
 129              		.cfi_endproc
 130              	.LFE2:
ARM GAS  C:\Users\sinow\AppData\Local\Temp\cczERXsC.s 			page 8


 131              		.size	CapSense_CSD_InitializeAllBaselines, .-CapSense_CSD_InitializeAllBaselines
 132 0016 00BF     		.section	.text.CapSense_CSD_InitializeEnabledBaselines,"ax",%progbits
 133              		.align	2
 134              		.global	CapSense_CSD_InitializeEnabledBaselines
 135              		.thumb
 136              		.thumb_func
 137              		.type	CapSense_CSD_InitializeEnabledBaselines, %function
 138              	CapSense_CSD_InitializeEnabledBaselines:
 139              	.LFB3:
 268:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
 269:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
 270:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** /*******************************************************************************
 271:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** * Function Name: CapSense_CSD_InitializeEnabledBaselines
 272:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** ********************************************************************************
 273:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *
 274:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** * Summary:
 275:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  Scans all enabled widgets and the raw count values are copied into the 
 276:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  baseline array for all sensors enabled in scanning process. Baselines 
 277:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  initialize with zero values for sensors disabled from scanning process. 
 278:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  The raw data filters are initialized if enabled.
 279:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *
 280:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** * Parameters:
 281:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  None
 282:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *
 283:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** * Return:
 284:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  None
 285:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *
 286:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** * Reentrant:
 287:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  No
 288:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *
 289:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *******************************************************************************/
 290:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** void CapSense_CSD_InitializeEnabledBaselines(void)
 291:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                              
 292:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** {
 140              		.loc 1 292 0
 141              		.cfi_startproc
 142              		@ args = 0, pretend = 0, frame = 0
 143              		@ frame_needed = 0, uses_anonymous_args = 0
 144 0000 10B5     		push	{r4, lr}
 145              		.cfi_def_cfa_offset 8
 146              		.cfi_offset 4, -8
 147              		.cfi_offset 14, -4
 293:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     uint8 i;
 294:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     uint8 pos;
 295:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     uint8 enMask;
 296:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     
 297:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     CapSense_CSD_ScanEnabledWidgets();
 148              		.loc 1 297 0
 149 0002 FFF7FEFF 		bl	CapSense_CSD_ScanEnabledWidgets
 150              	.LVL10:
 151              	.L12:
 298:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     while(CapSense_CSD_IsBusy() != 0u)
 152              		.loc 1 298 0 discriminator 1
 153 0006 FFF7FEFF 		bl	CapSense_CSD_IsBusy
 154              	.LVL11:
 155 000a 0028     		cmp	r0, #0
 156 000c FBD1     		bne	.L12
ARM GAS  C:\Users\sinow\AppData\Local\Temp\cczERXsC.s 			page 9


 157 000e 0024     		movs	r4, #0
 158 0010 11E0     		b	.L13
 159              	.LVL12:
 160              	.L15:
 299:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     {
 300:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         /* Wait while busy */
 301:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     }
 302:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     
 303:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     for(i = 0u; i < CapSense_CSD_TOTAL_SENSOR_COUNT; i++)
 304:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     {
 305:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         pos = (i >> 3u);
 161              		.loc 1 305 0
 162 0012 E208     		lsrs	r2, r4, #3
 306:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         enMask = 0x01u << (i & 0x07u);
 163              		.loc 1 306 0
 164 0014 04F00701 		and	r1, r4, #7
 165 0018 0123     		movs	r3, #1
 166 001a 8B40     		lsls	r3, r3, r1
 167              	.LVL13:
 307:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         
 308:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         /* Clear raw data if sensor is disabled from scanning process */
 309:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         if((CapSense_CSD_sensorEnableMask[pos] & enMask) == 0u)
 168              		.loc 1 309 0
 169 001c 0749     		ldr	r1, .L17
 170 001e 8A5C     		ldrb	r2, [r1, r2]	@ zero_extendqisi2
 171 0020 1342     		tst	r3, r2
 172 0022 03D1     		bne	.L14
 310:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         {
 311:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             CapSense_CSD_sensorRaw[i] = 0u;
 173              		.loc 1 311 0
 174 0024 0022     		movs	r2, #0
 175 0026 064B     		ldr	r3, .L17+4
 176              	.LVL14:
 177 0028 23F81420 		strh	r2, [r3, r4, lsl #1]	@ movhi
 178              	.L14:
 312:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         }
 313:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         
 314:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         /* Initialize baselines */
 315:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         CapSense_CSD_BaseInit(i);
 179              		.loc 1 315 0 discriminator 2
 180 002c 2046     		mov	r0, r4
 181 002e FFF7FEFF 		bl	CapSense_CSD_BaseInit
 182              	.LVL15:
 303:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     {
 183              		.loc 1 303 0 discriminator 2
 184 0032 0134     		adds	r4, r4, #1
 185              	.LVL16:
 186 0034 E4B2     		uxtb	r4, r4
 187              	.LVL17:
 188              	.L13:
 303:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     {
 189              		.loc 1 303 0 is_stmt 0 discriminator 1
 190 0036 042C     		cmp	r4, #4
 191 0038 EBD9     		bls	.L15
 316:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     }
 317:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** }  
 192              		.loc 1 317 0 is_stmt 1
ARM GAS  C:\Users\sinow\AppData\Local\Temp\cczERXsC.s 			page 10


 193 003a 10BD     		pop	{r4, pc}
 194              	.LVL18:
 195              	.L18:
 196              		.align	2
 197              	.L17:
 198 003c 00000000 		.word	CapSense_CSD_sensorEnableMask
 199 0040 00000000 		.word	CapSense_CSD_sensorRaw
 200              		.cfi_endproc
 201              	.LFE3:
 202              		.size	CapSense_CSD_InitializeEnabledBaselines, .-CapSense_CSD_InitializeEnabledBaselines
 203              		.section	.text.CapSense_CSD_UpdateSensorBaseline,"ax",%progbits
 204              		.align	2
 205              		.global	CapSense_CSD_UpdateSensorBaseline
 206              		.thumb
 207              		.thumb_func
 208              		.type	CapSense_CSD_UpdateSensorBaseline, %function
 209              	CapSense_CSD_UpdateSensorBaseline:
 210              	.LFB4:
 318:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
 319:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
 320:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** /*******************************************************************************
 321:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** * Function Name: CapSense_CSD_UpdateSensorBaseline
 322:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** ********************************************************************************
 323:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *
 324:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** * Summary:
 325:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  Updates the CapSense_CSD_sensorBaseline[sensor] array element using the 
 326:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  LP filter with k = 256. The signal calculates the difference of count by 
 327:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  subtracting the previous baseline from the current raw count value and stores
 328:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  it in CapSense_CSD_SensorSignal[sensor]. 
 329:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  If auto reset option is enabled the baseline updated regards noise threshold. 
 330:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  If auto reset option is disabled the baseline stops updating if signal is 
 331:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  greater that zero and baseline loads with raw count value if signal is less 
 332:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  that noise threshold.
 333:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  Raw data filters are applied to the values if enabled before baseline 
 334:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  calculation.
 335:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *
 336:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** * Parameters:
 337:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  sensor:  Sensor number.
 338:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *
 339:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** * Return:
 340:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  None
 341:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *
 342:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** * Global Variables:
 343:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  CapSense_CSD_sensorBaseline[]    - used to store baseline value.
 344:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  CapSense_CSD_sensorBaselineLow[] - used to store fraction byte of 
 345:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  baseline value.
 346:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  CapSense_CSD_sensorSignal[]      - used to store diffence between 
 347:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  current value of raw data and previous value of baseline.
 348:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  CapSense_CSD_rawFilterData1[]    - used to store previous sample of 
 349:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  any enabled raw data filter.
 350:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  CapSense_CSD_rawFilterData2[]    - used to store before previous sample
 351:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  of enabled raw data filter. Only required for median or average filters.
 352:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *
 353:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** * Reentrant:
 354:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  No
 355:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *
 356:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *******************************************************************************/
ARM GAS  C:\Users\sinow\AppData\Local\Temp\cczERXsC.s 			page 11


 357:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****  void CapSense_CSD_UpdateSensorBaseline(uint8 sensor)
 358:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                  
 359:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** {
 211              		.loc 1 359 0
 212              		.cfi_startproc
 213              		@ args = 0, pretend = 0, frame = 0
 214              		@ frame_needed = 0, uses_anonymous_args = 0
 215              	.LVL19:
 216 0000 70B5     		push	{r4, r5, r6, lr}
 217              		.cfi_def_cfa_offset 16
 218              		.cfi_offset 4, -16
 219              		.cfi_offset 5, -12
 220              		.cfi_offset 6, -8
 221              		.cfi_offset 14, -4
 222 0002 0446     		mov	r4, r0
 223              	.LVL20:
 360:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     uint32 calc;
 361:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     uint16 tempRaw;
 362:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     uint16 filteredRawData;
 363:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     uint8 widget = CapSense_CSD_widgetNumber[sensor];
 364:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     uint16 noiseThreshold = CapSense_CSD_noiseThreshold[widget];
 365:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     
 366:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     #if (CapSense_CSD_TOTAL_GENERICS_COUNT)
 367:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         /* Exclude generic widget */
 368:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         if(widget < CapSense_CSD_END_OF_WIDGETS_INDEX)
 369:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         {
 370:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     #endif  /* CapSense_CSD_TOTAL_GENERICS_COUNT */
 371:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     
 372:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     filteredRawData = CapSense_CSD_sensorRaw[sensor];
 224              		.loc 1 372 0
 225 0004 204B     		ldr	r3, .L29
 226 0006 33F81030 		ldrh	r3, [r3, r0, lsl #1]
 227              	.LVL21:
 373:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     
 374:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     #if (CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_MEDIAN_FILTER)
 375:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         tempRaw = filteredRawData;
 376:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         filteredRawData = CapSense_CSD_MedianFilter(filteredRawData, CapSense_CSD_rawFilterData1[se
 377:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                                         CapSense_CSD_rawFilterData2[sensor]);
 378:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         CapSense_CSD_rawFilterData2[sensor] = CapSense_CSD_rawFilterData1[sensor];
 379:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         CapSense_CSD_rawFilterData1[sensor] = tempRaw;
 380:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         
 381:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     #elif (CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_AVERAGING_FILTER)
 382:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         tempRaw = filteredRawData;
 383:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         filteredRawData = CapSense_CSD_AveragingFilter(filteredRawData, CapSense_CSD_rawFilterData1
 384:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                                            CapSense_CSD_rawFilterData2[sensor]);
 385:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         CapSense_CSD_rawFilterData2[sensor] = CapSense_CSD_rawFilterData1[sensor];
 386:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         CapSense_CSD_rawFilterData1[sensor] = tempRaw;
 387:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         
 388:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     #elif (CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_IIR2_FILTER)
 389:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         filteredRawData = CapSense_CSD_IIR2Filter(filteredRawData, CapSense_CSD_rawFilterData1[sens
 390:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         CapSense_CSD_rawFilterData1[sensor] = filteredRawData;
 391:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         
 392:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     #elif (CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_IIR4_FILTER)
 393:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         filteredRawData = CapSense_CSD_IIR4Filter(filteredRawData, CapSense_CSD_rawFilterData1[sens
 394:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         CapSense_CSD_rawFilterData1[sensor] = filteredRawData;
 395:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             
 396:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     #elif (CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_JITTER_FILTER)
ARM GAS  C:\Users\sinow\AppData\Local\Temp\cczERXsC.s 			page 12


 397:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         filteredRawData = CapSense_CSD_JitterFilter(filteredRawData, CapSense_CSD_rawFilterData1[se
 398:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         CapSense_CSD_rawFilterData1[sensor] = filteredRawData;
 399:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         
 400:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     #elif (CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_IIR8_FILTER)
 401:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         filteredRawData = CapSense_CSD_IIR8Filter(filteredRawData, CapSense_CSD_rawFilterData1[sens
 402:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         CapSense_CSD_rawFilterData1[sensor] = filteredRawData;
 403:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         
 404:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     #elif (CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_IIR16_FILTER)
 405:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         filteredRawData = CapSense_CSD_IIR16Filter(filteredRawData, CapSense_CSD_rawFilterData1[sen
 406:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         CapSense_CSD_rawFilterData1[sensor] = filteredRawData;
 407:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         
 408:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     #else
 409:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         /* No Raw filters */
 410:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     #endif  /* (CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_MEDIAN_FILTER) */
 411:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     
 412:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     #if (CapSense_CSD_TUNING_METHOD == CapSense_CSD_AUTO_TUNING)
 413:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         CapSense_CSD_CalculateThresholds(sensor);
 414:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     #endif /* (CapSense_CSD_TUNING_METHOD == CapSense_CSD_AUTO_TUNING) */
 415:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
 416:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
 417:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     /* Baseline calculation */
 418:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     /* Calculate difference RawData[cur] - Baseline[prev] */
 419:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     if(filteredRawData >= CapSense_CSD_sensorBaseline[sensor])
 228              		.loc 1 419 0
 229 000a 204A     		ldr	r2, .L29+4
 230 000c 32F81010 		ldrh	r1, [r2, r0, lsl #1]
 231 0010 8B42     		cmp	r3, r1
 232 0012 03D3     		bcc	.L20
 420:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     {
 421:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         tempRaw = filteredRawData - CapSense_CSD_sensorBaseline[sensor];
 233              		.loc 1 421 0
 234 0014 5D1A     		subs	r5, r3, r1
 235 0016 ADB2     		uxth	r5, r5
 236              	.LVL22:
 422:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         widget = 1u;    /* Positive difference - Calculate the Signal */
 237              		.loc 1 422 0
 238 0018 0126     		movs	r6, #1
 239 001a 02E0     		b	.L21
 240              	.LVL23:
 241              	.L20:
 423:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     }
 424:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     else
 425:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     {
 426:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         tempRaw = CapSense_CSD_sensorBaseline[sensor] - filteredRawData;
 242              		.loc 1 426 0
 243 001c CD1A     		subs	r5, r1, r3
 244 001e ADB2     		uxth	r5, r5
 245              	.LVL24:
 427:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         widget = 0u;    /* Negative difference - Do NOT calculate the Signal */
 246              		.loc 1 427 0
 247 0020 0026     		movs	r6, #0
 248              	.LVL25:
 249              	.L21:
 428:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     }
 429:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
 430:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     if((widget == 0u) && (tempRaw > (uint16) CapSense_CSD_NEGATIVE_NOISE_THRESHOLD))
 250              		.loc 1 430 0
ARM GAS  C:\Users\sinow\AppData\Local\Temp\cczERXsC.s 			page 13


 251 0022 86B9     		cbnz	r6, .L22
 252              		.loc 1 430 0 is_stmt 0 discriminator 1
 253 0024 142D     		cmp	r5, #20
 254 0026 0ED9     		bls	.L22
 431:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     {
 432:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         if(CapSense_CSD_lowBaselineResetCnt[sensor] >= CapSense_CSD_LOW_BASELINE_RESET)
 255              		.loc 1 432 0 is_stmt 1
 256 0028 194B     		ldr	r3, .L29+8
 257              	.LVL26:
 258 002a 1B5D     		ldrb	r3, [r3, r4]	@ zero_extendqisi2
 259 002c 042B     		cmp	r3, #4
 260 002e 06D9     		bls	.L23
 433:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         {
 434:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             CapSense_CSD_BaseInit(sensor);
 261              		.loc 1 434 0
 262 0030 2046     		mov	r0, r4
 263              	.LVL27:
 264 0032 FFF7FEFF 		bl	CapSense_CSD_BaseInit
 265              	.LVL28:
 435:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             CapSense_CSD_lowBaselineResetCnt[sensor] = 0u;
 266              		.loc 1 435 0
 267 0036 0022     		movs	r2, #0
 268 0038 154B     		ldr	r3, .L29+8
 269 003a 1A55     		strb	r2, [r3, r4]
 270 003c 17E0     		b	.L24
 271              	.LVL29:
 272              	.L23:
 436:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         }
 437:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         else
 438:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         {
 439:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             CapSense_CSD_lowBaselineResetCnt[sensor]++;
 273              		.loc 1 439 0
 274 003e 0133     		adds	r3, r3, #1
 275 0040 134A     		ldr	r2, .L29+8
 276 0042 1355     		strb	r3, [r2, r4]
 277 0044 13E0     		b	.L24
 278              	.LVL30:
 279              	.L22:
 440:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         }
 441:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     }
 442:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     else
 443:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     {
 444:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         #if (CapSense_CSD_AUTO_RESET == CapSense_CSD_AUTO_RESET_DISABLE)
 445:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             /* Update Baseline if lower that noiseThreshold */
 446:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             if ( (tempRaw <= (uint16) noiseThreshold) || 
 280              		.loc 1 446 0
 281 0046 2A2D     		cmp	r5, #42
 282 0048 02D9     		bls	.L25
 283              		.loc 1 446 0 is_stmt 0 discriminator 1
 284 004a 132D     		cmp	r5, #19
 285 004c 0FD8     		bhi	.L24
 447:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                  ((tempRaw < (uint16) CapSense_CSD_NEGATIVE_NOISE_THRESHOLD)
 448:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                    && (widget == 0u)))
 286              		.loc 1 448 0 is_stmt 1
 287 004e 76B9     		cbnz	r6, .L24
 288              	.L25:
 289              	.LVL31:
ARM GAS  C:\Users\sinow\AppData\Local\Temp\cczERXsC.s 			page 14


 449:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             {
 450:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         #endif /* (CapSense_CSD_AUTO_RESET == CapSense_CSD_AUTO_RESET_DISABLE) */
 451:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 /* Make full Baseline 23 bits */
 452:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 calc = (uint32) CapSense_CSD_sensorBaseline[sensor] << 8u;
 453:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 calc |= (uint32) CapSense_CSD_sensorBaselineLow[sensor];
 290              		.loc 1 453 0
 291 0050 1048     		ldr	r0, .L29+12
 292              	.LVL32:
 293 0052 025D     		ldrb	r2, [r0, r4]	@ zero_extendqisi2
 294 0054 42EA0122 		orr	r2, r2, r1, lsl #8
 295              	.LVL33:
 454:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
 455:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 /* Add Raw Data to Baseline */
 456:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 calc += filteredRawData;
 296              		.loc 1 456 0
 297 0058 1344     		add	r3, r3, r2
 298              	.LVL34:
 457:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
 458:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 /* Sub the high Baseline */
 459:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 calc -= CapSense_CSD_sensorBaseline[sensor];
 299              		.loc 1 459 0
 300 005a 5B1A     		subs	r3, r3, r1
 301              	.LVL35:
 460:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
 461:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 /* Put Baseline and BaselineLow */
 462:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 CapSense_CSD_sensorBaseline[sensor] = ((uint16) (calc >> 8u));
 302              		.loc 1 462 0
 303 005c C3F30F21 		ubfx	r1, r3, #8, #16
 304 0060 0A4A     		ldr	r2, .L29+4
 305 0062 22F81410 		strh	r1, [r2, r4, lsl #1]	@ movhi
 463:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 CapSense_CSD_sensorBaselineLow[sensor] = ((uint8) calc);
 306              		.loc 1 463 0
 307 0066 0355     		strb	r3, [r0, r4]
 464:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
 465:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 CapSense_CSD_lowBaselineResetCnt[sensor] = 0u;
 308              		.loc 1 465 0
 309 0068 0022     		movs	r2, #0
 310 006a 094B     		ldr	r3, .L29+8
 311              	.LVL36:
 312 006c 1A55     		strb	r2, [r3, r4]
 313              	.LVL37:
 314              	.L24:
 466:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         #if (CapSense_CSD_AUTO_RESET == CapSense_CSD_AUTO_RESET_DISABLE)
 467:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             }
 468:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         #endif /* (CapSense_CSD_AUTO_RESET == CapSense_CSD_AUTO_RESET_DISABLE) */
 469:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     }
 470:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
 471:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     /* Calculate Signal if possitive difference > noiseThreshold */
 472:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     if((tempRaw > (uint16) noiseThreshold) && (widget != 0u))
 315              		.loc 1 472 0
 316 006e 2A2D     		cmp	r5, #42
 317 0070 04D9     		bls	.L26
 318              		.loc 1 472 0 is_stmt 0 discriminator 1
 319 0072 1EB1     		cbz	r6, .L26
 473:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     {
 474:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         #if (CapSense_CSD_SIGNAL_SIZE == CapSense_CSD_SIGNAL_SIZE_UINT8)
 475:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             /* Over flow defence for uint8 */
ARM GAS  C:\Users\sinow\AppData\Local\Temp\cczERXsC.s 			page 15


 476:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             if (tempRaw > 0xFFu)
 477:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             {
 478:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 CapSense_CSD_sensorSignal[sensor] = 0xFFu;
 479:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             }    
 480:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             else 
 481:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             {
 482:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 CapSense_CSD_sensorSignal[sensor] = ((uint8) tempRaw);
 483:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             }
 484:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         #else
 485:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             CapSense_CSD_sensorSignal[sensor] = ((uint16) tempRaw);
 320              		.loc 1 485 0 is_stmt 1
 321 0074 084B     		ldr	r3, .L29+16
 322 0076 23F81450 		strh	r5, [r3, r4, lsl #1]	@ movhi
 323 007a 70BD     		pop	{r4, r5, r6, pc}
 324              	.LVL38:
 325              	.L26:
 486:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         #endif  /* (CapSense_CSD_SIGNAL_SIZE == CapSense_CSD_SIGNAL_SIZE_UINT8) */
 487:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     }
 488:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     else
 489:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     {
 490:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         /* Signal is zero */
 491:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         CapSense_CSD_sensorSignal[sensor] = 0u;
 326              		.loc 1 491 0
 327 007c 0022     		movs	r2, #0
 328 007e 064B     		ldr	r3, .L29+16
 329 0080 23F81420 		strh	r2, [r3, r4, lsl #1]	@ movhi
 330 0084 70BD     		pop	{r4, r5, r6, pc}
 331              	.LVL39:
 332              	.L30:
 333 0086 00BF     		.align	2
 334              	.L29:
 335 0088 00000000 		.word	CapSense_CSD_sensorRaw
 336 008c 00000000 		.word	CapSense_CSD_sensorBaseline
 337 0090 00000000 		.word	CapSense_CSD_lowBaselineResetCnt
 338 0094 00000000 		.word	CapSense_CSD_sensorBaselineLow
 339 0098 00000000 		.word	CapSense_CSD_sensorSignal
 340              		.cfi_endproc
 341              	.LFE4:
 342              		.size	CapSense_CSD_UpdateSensorBaseline, .-CapSense_CSD_UpdateSensorBaseline
 343              		.section	.text.CapSense_CSD_UpdateEnabledBaselines,"ax",%progbits
 344              		.align	2
 345              		.global	CapSense_CSD_UpdateEnabledBaselines
 346              		.thumb
 347              		.thumb_func
 348              		.type	CapSense_CSD_UpdateEnabledBaselines, %function
 349              	CapSense_CSD_UpdateEnabledBaselines:
 350              	.LFB5:
 492:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     }
 493:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
 494:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     #if (CapSense_CSD_TOTAL_GENERICS_COUNT)
 495:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         /* Exclude generic widget */
 496:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         }
 497:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     #endif  /* CapSense_CSD_TOTAL_GENERICS_COUNT */
 498:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** }
 499:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
 500:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
 501:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** /*******************************************************************************
ARM GAS  C:\Users\sinow\AppData\Local\Temp\cczERXsC.s 			page 16


 502:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** * Function Name: CapSense_CSD_UpdateEnabledBaselines
 503:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** ********************************************************************************
 504:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *
 505:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** * Summary:
 506:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  Checks CapSense_CSD_sensorEnableMask[] array and calls the 
 507:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  CapSense_CSD_UpdateSensorBaseline function to update the baselines 
 508:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  for enabled sensors.
 509:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *
 510:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** * Parameters:
 511:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  None
 512:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *
 513:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** * Return:
 514:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  None
 515:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *
 516:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** * Global Variables:
 517:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  CapSense_CSD_sensorEnableMask[] - used to store the sensor scanning 
 518:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  state.
 519:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  CapSense_CSD_sensorEnableMask[0] contains the masked bits for sensors 
 520:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *   0 through 7 (sensor 0 is bit 0, sensor 1 is bit 1).
 521:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  CapSense_CSD_sensorEnableMask[1] contains the masked bits for 
 522:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  sensors 8 through 15 (if needed), and so on.
 523:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  0 - sensor doesn't scan by CapSense_CSD_ScanEnabledWidgets().
 524:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  1 - sensor scans by CapSense_CSD_ScanEnabledWidgets().
 525:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *
 526:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** * Reentrant:
 527:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  No
 528:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *
 529:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *******************************************************************************/
 530:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****  void CapSense_CSD_UpdateEnabledBaselines(void)
 531:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                  
 532:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** {
 351              		.loc 1 532 0
 352              		.cfi_startproc
 353              		@ args = 0, pretend = 0, frame = 0
 354              		@ frame_needed = 0, uses_anonymous_args = 0
 355 0000 10B5     		push	{r4, lr}
 356              		.cfi_def_cfa_offset 8
 357              		.cfi_offset 4, -8
 358              		.cfi_offset 14, -4
 359              	.LVL40:
 533:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     uint8 i;
 534:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     uint8 pos;
 535:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     uint8 enMask;
 536:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     
 537:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     for(i = 0u; i < CapSense_CSD_TOTAL_SENSOR_COUNT; i++)
 360              		.loc 1 537 0
 361 0002 0024     		movs	r4, #0
 362 0004 0DE0     		b	.L32
 363              	.LVL41:
 364              	.L34:
 538:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     {
 539:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         pos = (i >> 3u);
 365              		.loc 1 539 0
 366 0006 E208     		lsrs	r2, r4, #3
 540:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         enMask = (uint8)(0x01u << (i & 0x07u));
 367              		.loc 1 540 0
 368 0008 04F00701 		and	r1, r4, #7
ARM GAS  C:\Users\sinow\AppData\Local\Temp\cczERXsC.s 			page 17


 369 000c 0123     		movs	r3, #1
 370 000e 8B40     		lsls	r3, r3, r1
 371              	.LVL42:
 541:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         if((CapSense_CSD_sensorEnableMask[pos] & enMask) != 0u)
 372              		.loc 1 541 0
 373 0010 0549     		ldr	r1, .L36
 374 0012 8A5C     		ldrb	r2, [r1, r2]	@ zero_extendqisi2
 375 0014 1342     		tst	r3, r2
 376 0016 02D0     		beq	.L33
 542:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         {
 543:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             CapSense_CSD_UpdateSensorBaseline(i);
 377              		.loc 1 543 0
 378 0018 2046     		mov	r0, r4
 379 001a FFF7FEFF 		bl	CapSense_CSD_UpdateSensorBaseline
 380              	.LVL43:
 381              	.L33:
 537:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     {
 382              		.loc 1 537 0 discriminator 2
 383 001e 0134     		adds	r4, r4, #1
 384              	.LVL44:
 385 0020 E4B2     		uxtb	r4, r4
 386              	.LVL45:
 387              	.L32:
 537:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     {
 388              		.loc 1 537 0 is_stmt 0 discriminator 1
 389 0022 042C     		cmp	r4, #4
 390 0024 EFD9     		bls	.L34
 544:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         }
 545:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     }
 546:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** }
 391              		.loc 1 546 0 is_stmt 1
 392 0026 10BD     		pop	{r4, pc}
 393              	.LVL46:
 394              	.L37:
 395              		.align	2
 396              	.L36:
 397 0028 00000000 		.word	CapSense_CSD_sensorEnableMask
 398              		.cfi_endproc
 399              	.LFE5:
 400              		.size	CapSense_CSD_UpdateEnabledBaselines, .-CapSense_CSD_UpdateEnabledBaselines
 401              		.section	.text.CapSense_CSD_CheckIsSensorActive,"ax",%progbits
 402              		.align	2
 403              		.global	CapSense_CSD_CheckIsSensorActive
 404              		.thumb
 405              		.thumb_func
 406              		.type	CapSense_CSD_CheckIsSensorActive, %function
 407              	CapSense_CSD_CheckIsSensorActive:
 408              	.LFB6:
 547:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
 548:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
 549:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** /*******************************************************************************
 550:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** * Function Name: CapSense_CSD_CheckIsSensorActive
 551:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** ********************************************************************************
 552:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *
 553:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** * Summary:
 554:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  Compares the CapSense_CSD_SensorSignal[sensor] array element to finger
 555:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  threshold of widget it belongs to. The hysteresis and debounce are taken into 
ARM GAS  C:\Users\sinow\AppData\Local\Temp\cczERXsC.s 			page 18


 556:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  account. The hysteresis is added or subtracted from the finger threshold 
 557:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  based on whether the sensor is currently active. 
 558:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  If the sensor is active, the threshold is lowered by the hysteresis amount.
 559:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  If the sensor is inactive, the threshold is raised by the hysteresis amount.
 560:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  The debounce counter added to the sensor active transition.
 561:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  This function updates CapSense_CSD_SensorOnMask[] array element.
 562:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *
 563:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** * Parameters:
 564:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  sensor:  Sensor number.
 565:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *
 566:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** * Return:
 567:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  Returns sensor state 1 if active, 0 if not active.
 568:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *
 569:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** * Global Variables:
 570:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  CapSense_CSD_sensorSignal[]      - used to store diffence between 
 571:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  current value of raw data and previous value of baseline.
 572:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  CapSense_CSD_debounceCounter[]   - used to store current debounce 
 573:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  counter of sensor. Widget which has this parameter are buttons, matrix 
 574:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  buttons, proximity, guard. All other widgets haven't debounce parameter
 575:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  and use the last element of this array with value 0 (it means no debounce).
 576:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  CapSense_CSD_sensorOnMask[] - used to store sensors on/off state.
 577:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  CapSense_CSD_sensorOnMask[0] contains the masked bits for sensors 
 578:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *   0 through 7 (sensor 0 is bit 0, sensor 1 is bit 1).
 579:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  CapSense_CSD_sensorEnableMask[1] contains the masked bits for 
 580:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  sensors 8 through 15 (if needed), and so on.
 581:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  0 - sensor is inactive.
 582:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  1 - sensor is active.
 583:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *
 584:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** * Reentrant:
 585:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  No
 586:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *
 587:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *******************************************************************************/
 588:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** uint8 CapSense_CSD_CheckIsSensorActive(uint8 sensor)
 589:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                   
 590:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** {
 409              		.loc 1 590 0
 410              		.cfi_startproc
 411              		@ args = 0, pretend = 0, frame = 0
 412              		@ frame_needed = 0, uses_anonymous_args = 0
 413              		@ link register save eliminated.
 414              	.LVL47:
 415 0000 10B4     		push	{r4}
 416              		.cfi_def_cfa_offset 4
 417              		.cfi_offset 4, -4
 591:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     uint8 debounceIndex;
 592:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     /* Get On/Off mask */
 593:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     uint8 pos = (sensor >> 3u);
 418              		.loc 1 593 0
 419 0002 C208     		lsrs	r2, r0, #3
 420              	.LVL48:
 594:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     uint8 onMask = 0x01u << (sensor & 0x07u);
 421              		.loc 1 594 0
 422 0004 00F00703 		and	r3, r0, #7
 423 0008 0121     		movs	r1, #1
 424 000a 01FA03F3 		lsl	r3, r1, r3
 425 000e DBB2     		uxtb	r3, r3
 426              	.LVL49:
ARM GAS  C:\Users\sinow\AppData\Local\Temp\cczERXsC.s 			page 19


 595:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     /* Prepare to find debounce counter index */
 596:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     uint8 widget = CapSense_CSD_widgetNumber[sensor];
 597:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     uint16 fingerThreshold = CapSense_CSD_fingerThreshold[widget];
 598:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     uint16 hysteresis = CapSense_CSD_hysteresis[widget];
 599:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     uint8 debounce = CapSense_CSD_debounce[widget];
 600:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     
 601:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     debounceIndex = CapSense_CSD_UNUSED_DEBOUNCE_COUNTER_INDEX;
 602:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     CapSense_CSD_debounceCounter[debounceIndex] = 1u;
 427              		.loc 1 602 0
 428 0010 104C     		ldr	r4, .L43
 429 0012 2170     		strb	r1, [r4]
 603:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
 604:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     
 605:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     /* Was on */
 606:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     if (0u != (CapSense_CSD_sensorOnMask[pos] & onMask))
 430              		.loc 1 606 0
 431 0014 1049     		ldr	r1, .L43+4
 432 0016 895C     		ldrb	r1, [r1, r2]	@ zero_extendqisi2
 433 0018 0B42     		tst	r3, r1
 434 001a 09D0     		beq	.L39
 607:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     {
 608:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         /* Hysteresis minus */
 609:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         if (CapSense_CSD_sensorSignal[sensor] < (fingerThreshold - hysteresis))
 435              		.loc 1 609 0
 436 001c 0F4C     		ldr	r4, .L43+8
 437 001e 34F81000 		ldrh	r0, [r4, r0, lsl #1]
 438              	.LVL50:
 439 0022 5328     		cmp	r0, #83
 440 0024 0FDC     		bgt	.L40
 610:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         {
 611:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             CapSense_CSD_sensorOnMask[pos] &= (uint8)~onMask;
 441              		.loc 1 611 0
 442 0026 21EA0301 		bic	r1, r1, r3
 443 002a 0B48     		ldr	r0, .L43+4
 444 002c 8154     		strb	r1, [r0, r2]
 445 002e 0AE0     		b	.L40
 446              	.LVL51:
 447              	.L39:
 612:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             CapSense_CSD_debounceCounter[debounceIndex] = debounce; 
 613:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         }
 614:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     }
 615:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     else    /* Was off */
 616:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     {
 617:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         /* Hysteresis plus */
 618:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         if (CapSense_CSD_sensorSignal[sensor] > (fingerThreshold + hysteresis))
 448              		.loc 1 618 0
 449 0030 0A4C     		ldr	r4, .L43+8
 450 0032 34F81000 		ldrh	r0, [r4, r0, lsl #1]
 451              	.LVL52:
 452 0036 5428     		cmp	r0, #84
 453 0038 05DD     		ble	.L40
 619:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         {
 620:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             /* Sensor active, decrement debounce counter */
 621:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             if (CapSense_CSD_debounceCounter[debounceIndex] <= 1u)
 622:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             {
 623:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 CapSense_CSD_sensorOnMask[pos] |= onMask; 
 454              		.loc 1 623 0
ARM GAS  C:\Users\sinow\AppData\Local\Temp\cczERXsC.s 			page 20


 455 003a 1943     		orrs	r1, r1, r3
 456 003c 0648     		ldr	r0, .L43+4
 457 003e 8154     		strb	r1, [r0, r2]
 624:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             }
 625:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             CapSense_CSD_debounceCounter[debounceIndex]--;
 458              		.loc 1 625 0
 459 0040 0020     		movs	r0, #0
 460 0042 0449     		ldr	r1, .L43
 461 0044 0870     		strb	r0, [r1]
 462              	.L40:
 626:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         }
 627:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         else
 628:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         {
 629:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             /* Sensor inactive - reset Debounce counter */
 630:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             CapSense_CSD_debounceCounter[debounceIndex] = debounce;
 631:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         }
 632:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     }
 633:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     
 634:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     return (((CapSense_CSD_sensorOnMask[pos] & onMask) != 0u) ? 1u : 0u);
 463              		.loc 1 634 0
 464 0046 0449     		ldr	r1, .L43+4
 465 0048 885C     		ldrb	r0, [r1, r2]	@ zero_extendqisi2
 466 004a 1840     		ands	r0, r3, r0
 467 004c 00D0     		beq	.L41
 468 004e 0120     		movs	r0, #1
 469              	.L41:
 635:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** }
 470              		.loc 1 635 0 discriminator 4
 471 0050 10BC     		pop	{r4}
 472              		.cfi_restore 4
 473              		.cfi_def_cfa_offset 0
 474 0052 7047     		bx	lr
 475              	.L44:
 476              		.align	2
 477              	.L43:
 478 0054 00000000 		.word	.LANCHOR0
 479 0058 00000000 		.word	CapSense_CSD_sensorOnMask
 480 005c 00000000 		.word	CapSense_CSD_sensorSignal
 481              		.cfi_endproc
 482              	.LFE6:
 483              		.size	CapSense_CSD_CheckIsSensorActive, .-CapSense_CSD_CheckIsSensorActive
 484              		.section	.text.CapSense_CSD_CheckIsWidgetActive,"ax",%progbits
 485              		.align	2
 486              		.global	CapSense_CSD_CheckIsWidgetActive
 487              		.thumb
 488              		.thumb_func
 489              		.type	CapSense_CSD_CheckIsWidgetActive, %function
 490              	CapSense_CSD_CheckIsWidgetActive:
 491              	.LFB7:
 636:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
 637:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
 638:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** /*******************************************************************************
 639:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** * Function Name: CapSense_CSD_CheckIsWidgetActive
 640:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** ********************************************************************************
 641:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *
 642:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** * Summary:
 643:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  Use function CapSense_CSD_CheckIsSensorActive() to update 
ARM GAS  C:\Users\sinow\AppData\Local\Temp\cczERXsC.s 			page 21


 644:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  CapSense_CSD_sensorOnMask[] for all sensors within the widget.
 645:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  If one of sensors within widget is active the function return that widget is 
 646:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  active.
 647:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  The touch pad and matrix buttons widgets need to have active sensor within 
 648:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  col and row to return widget active status.
 649:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *
 650:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** * Parameters:
 651:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  widget:  widget number.
 652:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *
 653:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** * Return:
 654:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  Returns widget sensor state 1 if one or more sensors within widget is/are 
 655:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  active, 0 if all sensors within widget are inactive.
 656:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *
 657:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** * Reentrant:
 658:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  No
 659:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *
 660:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *******************************************************************************/
 661:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** uint8 CapSense_CSD_CheckIsWidgetActive(uint8 widget)
 662:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                  
 663:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** {
 492              		.loc 1 663 0
 493              		.cfi_startproc
 494              		@ args = 0, pretend = 0, frame = 0
 495              		@ frame_needed = 0, uses_anonymous_args = 0
 496              	.LVL53:
 497 0000 38B5     		push	{r3, r4, r5, lr}
 498              		.cfi_def_cfa_offset 16
 499              		.cfi_offset 3, -16
 500              		.cfi_offset 4, -12
 501              		.cfi_offset 5, -8
 502              		.cfi_offset 14, -4
 503              	.LVL54:
 664:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     uint8 rawIndex = CapSense_CSD_rawDataIndex[widget];
 665:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     uint8 numberOfSensors = CapSense_CSD_numberOfSensors[widget] + rawIndex;
 666:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     uint8 state = 0u;
 504              		.loc 1 666 0
 505 0002 0025     		movs	r5, #0
 664:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     uint8 rawIndex = CapSense_CSD_rawDataIndex[widget];
 506              		.loc 1 664 0
 507 0004 2C46     		mov	r4, r5
 508              	.LVL55:
 509              	.L47:
 667:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
 668:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     /* Check all sensors of the widget */
 669:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     do
 670:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     {
 671:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         if(CapSense_CSD_CheckIsSensorActive(rawIndex) != 0u)
 510              		.loc 1 671 0
 511 0006 2046     		mov	r0, r4
 512 0008 FFF7FEFF 		bl	CapSense_CSD_CheckIsSensorActive
 513              	.LVL56:
 514 000c 00B1     		cbz	r0, .L46
 672:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         {
 673:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             state = CapSense_CSD_SENSOR_1_IS_ACTIVE;
 515              		.loc 1 673 0
 516 000e 0125     		movs	r5, #1
 517              	.LVL57:
ARM GAS  C:\Users\sinow\AppData\Local\Temp\cczERXsC.s 			page 22


 518              	.L46:
 674:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         }
 675:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         rawIndex++;
 519              		.loc 1 675 0
 520 0010 0134     		adds	r4, r4, #1
 521              	.LVL58:
 522 0012 E4B2     		uxtb	r4, r4
 523              	.LVL59:
 676:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     }
 677:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     while(rawIndex < numberOfSensors);
 524              		.loc 1 677 0
 525 0014 042C     		cmp	r4, #4
 526 0016 F6D9     		bls	.L47
 678:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     
 679:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
 680:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     
 681:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     return (state);
 682:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** }
 527              		.loc 1 682 0
 528 0018 2846     		mov	r0, r5
 529 001a 38BD     		pop	{r3, r4, r5, pc}
 530              		.cfi_endproc
 531              	.LFE7:
 532              		.size	CapSense_CSD_CheckIsWidgetActive, .-CapSense_CSD_CheckIsWidgetActive
 533              		.section	.text.CapSense_CSD_CheckIsAnyWidgetActive,"ax",%progbits
 534              		.align	2
 535              		.global	CapSense_CSD_CheckIsAnyWidgetActive
 536              		.thumb
 537              		.thumb_func
 538              		.type	CapSense_CSD_CheckIsAnyWidgetActive, %function
 539              	CapSense_CSD_CheckIsAnyWidgetActive:
 540              	.LFB8:
 683:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
 684:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
 685:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** /*******************************************************************************
 686:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** * Function Name: CapSense_CSD_CheckIsAnyWidgetActive
 687:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** ********************************************************************************
 688:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *
 689:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** * Summary:
 690:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  Compares all sensors of the CapSense_CSD_signal[] array to their finger 
 691:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  threshold. Calls CapSense_CSD_CheckIsWidgetActive() for each widget so 
 692:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  the CapSense_CSD_SensorOnMask[] array is up to date after calling this 
 693:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  function.
 694:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *
 695:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** * Parameters:
 696:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  widget:  widget number.
 697:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *
 698:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** * Return:
 699:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  Returns 1 if any widget is active, 0 none of widgets are active.
 700:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *
 701:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** * Reentrant:
 702:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  No
 703:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *
 704:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *******************************************************************************/
 705:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** uint8 CapSense_CSD_CheckIsAnyWidgetActive(void)
 706:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                  
 707:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** {
ARM GAS  C:\Users\sinow\AppData\Local\Temp\cczERXsC.s 			page 23


 541              		.loc 1 707 0
 542              		.cfi_startproc
 543              		@ args = 0, pretend = 0, frame = 0
 544              		@ frame_needed = 0, uses_anonymous_args = 0
 545 0000 38B5     		push	{r3, r4, r5, lr}
 546              		.cfi_def_cfa_offset 16
 547              		.cfi_offset 3, -16
 548              		.cfi_offset 4, -12
 549              		.cfi_offset 5, -8
 550              		.cfi_offset 14, -4
 551              	.LVL60:
 708:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     uint8 i;
 709:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     uint8 state = 0u;
 552              		.loc 1 709 0
 553 0002 0025     		movs	r5, #0
 710:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     
 711:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     for(i = 0u; i < CapSense_CSD_TOTAL_WIDGET_COUNT; i++)
 554              		.loc 1 711 0
 555 0004 2C46     		mov	r4, r5
 556 0006 06E0     		b	.L51
 557              	.LVL61:
 558              	.L53:
 712:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     {
 713:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         if (CapSense_CSD_CheckIsWidgetActive(i) != 0u)
 559              		.loc 1 713 0
 560 0008 2046     		mov	r0, r4
 561 000a FFF7FEFF 		bl	CapSense_CSD_CheckIsWidgetActive
 562              	.LVL62:
 563 000e 00B1     		cbz	r0, .L52
 714:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         {
 715:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             state = CapSense_CSD_WIDGET_IS_ACTIVE;
 564              		.loc 1 715 0
 565 0010 0125     		movs	r5, #1
 566              	.LVL63:
 567              	.L52:
 711:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     {
 568              		.loc 1 711 0 discriminator 2
 569 0012 0134     		adds	r4, r4, #1
 570              	.LVL64:
 571 0014 E4B2     		uxtb	r4, r4
 572              	.LVL65:
 573              	.L51:
 711:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     {
 574              		.loc 1 711 0 is_stmt 0 discriminator 1
 575 0016 002C     		cmp	r4, #0
 576 0018 F6D0     		beq	.L53
 716:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         }
 717:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     }
 718:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     
 719:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
 720:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     return (state);
 721:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** }
 577              		.loc 1 721 0 is_stmt 1
 578 001a 2846     		mov	r0, r5
 579 001c 38BD     		pop	{r3, r4, r5, pc}
 580              		.cfi_endproc
 581              	.LFE8:
ARM GAS  C:\Users\sinow\AppData\Local\Temp\cczERXsC.s 			page 24


 582              		.size	CapSense_CSD_CheckIsAnyWidgetActive, .-CapSense_CSD_CheckIsAnyWidgetActive
 583 001e 00BF     		.section	.text.CapSense_CSD_EnableWidget,"ax",%progbits
 584              		.align	2
 585              		.global	CapSense_CSD_EnableWidget
 586              		.thumb
 587              		.thumb_func
 588              		.type	CapSense_CSD_EnableWidget, %function
 589              	CapSense_CSD_EnableWidget:
 590              	.LFB9:
 722:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
 723:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
 724:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** /*******************************************************************************
 725:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** * Function Name: CapSense_CSD_EnableWidget
 726:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** ********************************************************************************
 727:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *
 728:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** * Summary:
 729:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  Enable all widget elements (sensors) to scanning process.
 730:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *
 731:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** * Parameters:
 732:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  widget:  widget number.
 733:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *
 734:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** * Return:
 735:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  None
 736:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *
 737:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** * Global Variables:
 738:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  CapSense_CSD_sensorEnableMask[] - used to store the sensor scanning 
 739:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  state.
 740:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  CapSense_CSD_sensorEnableMask[0] contains the masked bits for sensors 
 741:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  0 through 7 (sensor 0 is bit 0, sensor 1 is bit 1).
 742:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  CapSense_CSD_sensorEnableMask[1] contains the masked bits for 
 743:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  sensors 8 through 15 (if needed), and so on.
 744:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  0 - sensor doesn't scan by CapSense_CSD_ScanEnabledWidgets().
 745:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  1 - sensor scans by CapSense_CSD_ScanEnabledWidgets().
 746:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *
 747:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** * Reentrant:
 748:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  No
 749:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *
 750:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *******************************************************************************/
 751:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** void CapSense_CSD_EnableWidget(uint8 widget)
 752:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                    
 753:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** {
 591              		.loc 1 753 0
 592              		.cfi_startproc
 593              		@ args = 0, pretend = 0, frame = 0
 594              		@ frame_needed = 0, uses_anonymous_args = 0
 595              		@ link register save eliminated.
 596              	.LVL66:
 597 0000 10B4     		push	{r4}
 598              		.cfi_def_cfa_offset 4
 599              		.cfi_offset 4, -4
 600              	.LVL67:
 754:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     uint8 pos;
 755:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     uint8 enMask;
 756:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     uint8 rawIndex = CapSense_CSD_rawDataIndex[widget];
 601              		.loc 1 756 0
 602 0002 0023     		movs	r3, #0
 603              	.LVL68:
ARM GAS  C:\Users\sinow\AppData\Local\Temp\cczERXsC.s 			page 25


 604              	.L57:
 757:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     uint8 numberOfSensors = CapSense_CSD_numberOfSensors[widget] + rawIndex;
 758:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     
 759:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     /* Enable all sensors of the widget */
 760:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     do
 761:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     {
 762:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         pos = (rawIndex >> 3u);
 605              		.loc 1 762 0 discriminator 1
 606 0004 D808     		lsrs	r0, r3, #3
 607              	.LVL69:
 763:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         enMask = 0x01u << (rawIndex & 0x07u);
 608              		.loc 1 763 0 discriminator 1
 609 0006 03F00701 		and	r1, r3, #7
 610 000a 0122     		movs	r2, #1
 611 000c 8A40     		lsls	r2, r2, r1
 612 000e D2B2     		uxtb	r2, r2
 613              	.LVL70:
 764:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         
 765:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         CapSense_CSD_sensorEnableMask[pos] |= enMask;
 614              		.loc 1 765 0 discriminator 1
 615 0010 044C     		ldr	r4, .L59
 616 0012 215C     		ldrb	r1, [r4, r0]	@ zero_extendqisi2
 617 0014 0A43     		orrs	r2, r2, r1
 618              	.LVL71:
 619 0016 2254     		strb	r2, [r4, r0]
 766:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         rawIndex++;
 620              		.loc 1 766 0 discriminator 1
 621 0018 0133     		adds	r3, r3, #1
 622              	.LVL72:
 623 001a DBB2     		uxtb	r3, r3
 624              	.LVL73:
 767:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     }
 768:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     while(rawIndex < numberOfSensors);
 625              		.loc 1 768 0 discriminator 1
 626 001c 042B     		cmp	r3, #4
 627 001e F1D9     		bls	.L57
 769:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     
 770:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
 771:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** }
 628              		.loc 1 771 0
 629 0020 10BC     		pop	{r4}
 630              		.cfi_restore 4
 631              		.cfi_def_cfa_offset 0
 632 0022 7047     		bx	lr
 633              	.L60:
 634              		.align	2
 635              	.L59:
 636 0024 00000000 		.word	CapSense_CSD_sensorEnableMask
 637              		.cfi_endproc
 638              	.LFE9:
 639              		.size	CapSense_CSD_EnableWidget, .-CapSense_CSD_EnableWidget
 640              		.section	.text.CapSense_CSD_DisableWidget,"ax",%progbits
 641              		.align	2
 642              		.global	CapSense_CSD_DisableWidget
 643              		.thumb
 644              		.thumb_func
 645              		.type	CapSense_CSD_DisableWidget, %function
ARM GAS  C:\Users\sinow\AppData\Local\Temp\cczERXsC.s 			page 26


 646              	CapSense_CSD_DisableWidget:
 647              	.LFB10:
 772:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
 773:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
 774:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** /*******************************************************************************
 775:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** * Function Name: CapSense_CSD_DisableWidget
 776:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** ********************************************************************************
 777:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *
 778:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** * Summary:
 779:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  Disable all widget elements (sensors) from scanning process.
 780:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *
 781:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** * Parameters:
 782:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  widget:  widget number.
 783:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *
 784:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** * Return:
 785:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  None
 786:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *
 787:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** * Global Variables:
 788:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  CapSense_CSD_sensorEnableMask[] - used to store the sensor scanning 
 789:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  state.
 790:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  CapSense_CSD_sensorEnableMask[0] contains the masked bits for sensors 
 791:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  0 through 7 (sensor 0 is bit 0, sensor 1 is bit 1).
 792:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  CapSense_CSD_sensorEnableMask[1] contains the masked bits for 
 793:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  sensors 8 through 15 (if needed), and so on.
 794:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  0 - sensor doesn't scan by CapSense_CSD_ScanEnabledWidgets().
 795:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  1 - sensor scans by CapSense_CSD_ScanEnabledWidgets().
 796:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *
 797:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** * Reentrant:
 798:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  No
 799:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *
 800:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *******************************************************************************/
 801:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** void CapSense_CSD_DisableWidget(uint8 widget)
 802:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                     
 803:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** {
 648              		.loc 1 803 0
 649              		.cfi_startproc
 650              		@ args = 0, pretend = 0, frame = 0
 651              		@ frame_needed = 0, uses_anonymous_args = 0
 652              		@ link register save eliminated.
 653              	.LVL74:
 654 0000 10B4     		push	{r4}
 655              		.cfi_def_cfa_offset 4
 656              		.cfi_offset 4, -4
 657              	.LVL75:
 804:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     uint8 pos;
 805:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     uint8 enMask;
 806:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     uint8 rawIndex = CapSense_CSD_rawDataIndex[widget];
 658              		.loc 1 806 0
 659 0002 0023     		movs	r3, #0
 660              	.LVL76:
 661              	.L62:
 807:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     uint8 numberOfSensors = CapSense_CSD_numberOfSensors[widget] + rawIndex;
 808:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****    
 809:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     /* Disable all sensors of the widget */
 810:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     do
 811:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     {
 812:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         pos = (rawIndex >> 3u);
ARM GAS  C:\Users\sinow\AppData\Local\Temp\cczERXsC.s 			page 27


 662              		.loc 1 812 0 discriminator 1
 663 0004 D808     		lsrs	r0, r3, #3
 664              	.LVL77:
 813:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         enMask = 0x01u << (rawIndex & 0x07u);
 665              		.loc 1 813 0 discriminator 1
 666 0006 03F00701 		and	r1, r3, #7
 667 000a 0122     		movs	r2, #1
 668 000c 8A40     		lsls	r2, r2, r1
 669 000e D2B2     		uxtb	r2, r2
 670              	.LVL78:
 814:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         
 815:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         CapSense_CSD_sensorEnableMask[pos] &= (uint8)~enMask;
 671              		.loc 1 815 0 discriminator 1
 672 0010 054C     		ldr	r4, .L64
 673 0012 215C     		ldrb	r1, [r4, r0]	@ zero_extendqisi2
 674 0014 21EA0202 		bic	r2, r1, r2
 675              	.LVL79:
 676 0018 2254     		strb	r2, [r4, r0]
 816:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         rawIndex++;
 677              		.loc 1 816 0 discriminator 1
 678 001a 0133     		adds	r3, r3, #1
 679              	.LVL80:
 680 001c DBB2     		uxtb	r3, r3
 681              	.LVL81:
 817:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     }
 818:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     while(rawIndex < numberOfSensors);
 682              		.loc 1 818 0 discriminator 1
 683 001e 042B     		cmp	r3, #4
 684 0020 F0D9     		bls	.L62
 819:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     
 820:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
 821:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** }
 685              		.loc 1 821 0
 686 0022 10BC     		pop	{r4}
 687              		.cfi_restore 4
 688              		.cfi_def_cfa_offset 0
 689 0024 7047     		bx	lr
 690              	.L65:
 691 0026 00BF     		.align	2
 692              	.L64:
 693 0028 00000000 		.word	CapSense_CSD_sensorEnableMask
 694              		.cfi_endproc
 695              	.LFE10:
 696              		.size	CapSense_CSD_DisableWidget, .-CapSense_CSD_DisableWidget
 697              		.section	.text.CapSense_CSD_FindMaximum,"ax",%progbits
 698              		.align	2
 699              		.global	CapSense_CSD_FindMaximum
 700              		.thumb
 701              		.thumb_func
 702              		.type	CapSense_CSD_FindMaximum, %function
 703              	CapSense_CSD_FindMaximum:
 704              	.LFB11:
 822:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** #if(CapSense_CSD_TOTAL_CENTROIDS_COUNT)
 823:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     /*******************************************************************************
 824:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     * Function Name: CapSense_CSD_FindMaximum
 825:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     ********************************************************************************
 826:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *
ARM GAS  C:\Users\sinow\AppData\Local\Temp\cczERXsC.s 			page 28


 827:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     * Summary:
 828:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *  Finds index of maximum element within defined centroid. Checks 
 829:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *  CapSense_CSD_SensorSignal[] within defined cenrtoid and 
 830:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *  returns index of maximum element. The values below finger threshold are 
 831:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *  ignored.
 832:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *  The centrod defines by offset of first element and number of elements - count.
 833:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *  The diplexed centroid requires at least consecutive two elements above
 834:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *  FingerThreshold to find index of maximum element.
 835:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     * 
 836:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     * Parameters:
 837:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *  offset:  Start index of cetroid in CapSense_CSD_sensorSignal[] array.
 838:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *  count:   number of elements within centroid.
 839:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *  fingerThreshold:  Finger threshould.
 840:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *  diplex:   pointer to diplex table.
 841:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     * 
 842:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     * Return:
 843:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *  Returns index of maximum element within defined centroid.
 844:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *  If index of maximum element doesn't find the 0xFF returns.
 845:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     * 
 846:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *******************************************************************************/
 847:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     #if (CapSense_CSD_IS_DIPLEX_SLIDER)
 848:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         uint8 CapSense_CSD_FindMaximum(uint8 offset, uint8 count, uint16 fingerThreshold, const uin
 849:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 	                                       
 850:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     #else 
 851:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         uint8 CapSense_CSD_FindMaximum(uint8 offset, uint8 count, uint16 fingerThreshold)
 852:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 	                                       
 853:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     #endif /* (CapSense_CSD_IS_DIPLEX_SLIDER) */
 854:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     {
 705              		.loc 1 854 0
 706              		.cfi_startproc
 707              		@ args = 0, pretend = 0, frame = 0
 708              		@ frame_needed = 0, uses_anonymous_args = 0
 709              		@ link register save eliminated.
 710              	.LVL82:
 711 0000 70B4     		push	{r4, r5, r6}
 712              		.cfi_def_cfa_offset 12
 713              		.cfi_offset 4, -12
 714              		.cfi_offset 5, -8
 715              		.cfi_offset 6, -4
 716              	.LVL83:
 855:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         uint8 i;
 856:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         #if (CapSense_CSD_IS_DIPLEX_SLIDER)        
 857:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             uint8 curPos = 0u;
 858:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             /* No centroid at the Start */
 859:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             uint8 curCntrdSize = 0u;
 860:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             uint8 curCtrdStartPos = 0xFFu;
 861:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             /* The biggset centroid is zero */
 862:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             uint8 biggestCtrdSize = 0u;
 863:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             uint8 biggestCtrdStartPos = 0u;
 864:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         #endif /* (CapSense_CSD_IS_DIPLEX_SLIDER) */
 865:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         uint8 maximum = 0xFFu;
 866:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         uint16 temp = 0u;
 867:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         uint16 *startOfSlider = &CapSense_CSD_sensorSignal[offset]; 
 717              		.loc 1 867 0
 718 0002 0A4D     		ldr	r5, .L72
 719 0004 05EB4005 		add	r5, r5, r0, lsl #1
 720              	.LVL84:
ARM GAS  C:\Users\sinow\AppData\Local\Temp\cczERXsC.s 			page 29


 866:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         uint16 *startOfSlider = &CapSense_CSD_sensorSignal[offset]; 
 721              		.loc 1 866 0
 722 0008 0026     		movs	r6, #0
 865:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         uint16 temp = 0u;
 723              		.loc 1 865 0
 724 000a FF20     		movs	r0, #255
 725              	.LVL85:
 868:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
 869:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         #if (CapSense_CSD_IS_DIPLEX_SLIDER)        
 870:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             if(diplex != 0u)
 871:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             {
 872:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 /* Initialize */
 873:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 i = 0u;
 874:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 
 875:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 /* Make slider x2 as Diplexed */
 876:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 count <<= 1u;
 877:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 while(1u)
 878:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 { 
 879:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                     if (startOfSlider[curPos] > 0u)    /* Looking for centroids */
 880:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                     {
 881:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                         if (curCtrdStartPos == 0xFFu)
 882:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                         {
 883:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                             /* Start of centroid */
 884:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                             curCtrdStartPos = i;
 885:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                             curCntrdSize++;
 886:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                         }
 887:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                         else
 888:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                         {
 889:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                             curCntrdSize++;
 890:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                         }
 891:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                     }
 892:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                     else   /* Select the bigest and indicate zero start */
 893:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                     {          
 894:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                         if(curCntrdSize > 0u)
 895:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                         {
 896:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                             /* We are in the end of current */
 897:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                             if(curCntrdSize > biggestCtrdSize)
 898:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                             {
 899:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                 biggestCtrdSize = curCntrdSize;
 900:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                 biggestCtrdStartPos = curCtrdStartPos;
 901:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                             }
 902:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                             
 903:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                             curCntrdSize = 0u;
 904:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                             curCtrdStartPos = 0xFFu;
 905:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                         }
 906:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                     }
 907:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                     
 908:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                     i++; 
 909:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                     curPos = diplex[i];
 910:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                     if(i == count)
 911:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                     {
 912:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                         break;
 913:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                     }            
 914:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 }
 915:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                     
 916:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                     /* Find the biggest centroid if two are the same size, last one wins
 917:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                        We are in the end of current */
ARM GAS  C:\Users\sinow\AppData\Local\Temp\cczERXsC.s 			page 30


 918:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 if (curCntrdSize >= biggestCtrdSize) 
 919:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 {
 920:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                     biggestCtrdSize = curCntrdSize;
 921:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                     biggestCtrdStartPos = curCtrdStartPos;
 922:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 }
 923:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             }
 924:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             else
 925:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             {
 926:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 /* Without diplexing */ 
 927:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 biggestCtrdSize = count;
 928:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             }
 929:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                         
 930:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
 931:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             /* Check centroid size */
 932:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             #if (CapSense_CSD_IS_NON_DIPLEX_SLIDER)
 933:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 if((biggestCtrdSize >= 2u) || ((biggestCtrdSize == 1u) && (diplex == 0u)))
 934:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             #else                    
 935:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 if(biggestCtrdSize >= 2u)
 936:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             #endif /* (CapSense_CSD_IS_NON_DIPLEX_SLIDER) */
 937:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 {
 938:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                     for (i = biggestCtrdStartPos; i < (biggestCtrdStartPos + biggestCtrdSize); i++)
 939:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                     {
 940:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                         #if (CapSense_CSD_IS_DIPLEX_SLIDER && CapSense_CSD_IS_NON_DIPLEX_SLIDER)
 941:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                             if (diplex == 0u)
 942:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                             {
 943:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                 curPos = i;
 944:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                             }
 945:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                             else
 946:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                             {
 947:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                 curPos = diplex[i];
 948:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                             }                    
 949:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                         #elif (CapSense_CSD_IS_DIPLEX_SLIDER)                    
 950:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                             curPos = diplex[i];                    
 951:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                         #endif /* (CapSense_CSD_IS_DIPLEX_SLIDER && CapSense_CSD_IS_NON_DIPLEX_SLID
 952:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                         /* Looking for the grater element within centroid */
 953:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                         if(startOfSlider[curPos] > fingerThreshold)
 954:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                         {
 955:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                             if(startOfSlider[curPos] > temp)
 956:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                             {
 957:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                 maximum = i;
 958:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                 temp = startOfSlider[curPos];
 959:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                             }
 960:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                         }
 961:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                     }
 962:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 } 
 963:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         #else
 964:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             for (i = 0u; i < count; i++)
 726              		.loc 1 964 0
 727 000c 3346     		mov	r3, r6
 728 000e 09E0     		b	.L67
 729              	.LVL86:
 730              	.L69:
 965:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             {                      
 966:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 /* Looking for the grater element within centroid */
 967:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 if(startOfSlider[i] > fingerThreshold)
 731              		.loc 1 967 0
 732 0010 35F81340 		ldrh	r4, [r5, r3, lsl #1]
ARM GAS  C:\Users\sinow\AppData\Local\Temp\cczERXsC.s 			page 31


 733 0014 9442     		cmp	r4, r2
 734 0016 03D9     		bls	.L68
 968:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 {
 969:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                     if(startOfSlider[i] > temp)
 735              		.loc 1 969 0
 736 0018 A642     		cmp	r6, r4
 737 001a 01D2     		bcs	.L68
 970:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                     {
 971:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                         maximum = i;
 972:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                         temp = startOfSlider[i];
 738              		.loc 1 972 0
 739 001c 2646     		mov	r6, r4
 740              	.LVL87:
 971:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                         temp = startOfSlider[i];
 741              		.loc 1 971 0
 742 001e 1846     		mov	r0, r3
 743              	.LVL88:
 744              	.L68:
 964:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             {                      
 745              		.loc 1 964 0 discriminator 2
 746 0020 0133     		adds	r3, r3, #1
 747              	.LVL89:
 748 0022 DBB2     		uxtb	r3, r3
 749              	.LVL90:
 750              	.L67:
 964:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             {                      
 751              		.loc 1 964 0 is_stmt 0 discriminator 1
 752 0024 8B42     		cmp	r3, r1
 753 0026 F3D3     		bcc	.L69
 973:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                     }
 974:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 }
 975:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             }    
 976:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         #endif /* (CapSense_CSD_IS_DIPLEX_SLIDER) */
 977:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         return (maximum);
 978:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     }
 754              		.loc 1 978 0 is_stmt 1
 755 0028 70BC     		pop	{r4, r5, r6}
 756              		.cfi_restore 6
 757              		.cfi_restore 5
 758              		.cfi_restore 4
 759              		.cfi_def_cfa_offset 0
 760              	.LVL91:
 761 002a 7047     		bx	lr
 762              	.L73:
 763              		.align	2
 764              	.L72:
 765 002c 00000000 		.word	CapSense_CSD_sensorSignal
 766              		.cfi_endproc
 767              	.LFE11:
 768              		.size	CapSense_CSD_FindMaximum, .-CapSense_CSD_FindMaximum
 769              		.section	.text.CapSense_CSD_CalcCentroid,"ax",%progbits
 770              		.align	2
 771              		.global	CapSense_CSD_CalcCentroid
 772              		.thumb
 773              		.thumb_func
 774              		.type	CapSense_CSD_CalcCentroid, %function
 775              	CapSense_CSD_CalcCentroid:
ARM GAS  C:\Users\sinow\AppData\Local\Temp\cczERXsC.s 			page 32


 776              	.LFB12:
 979:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     
 980:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     
 981:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     /*******************************************************************************
 982:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     * Function Name: CapSense_CSD_CalcCentroid
 983:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     ********************************************************************************
 984:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *
 985:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     * Summary:
 986:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *  Returns position value calculated accoring index of maximum element and API
 987:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *  resolution.
 988:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *
 989:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     * Parameters:
 990:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *  type:  widget type.
 991:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *  diplex:  pointer to diplex table.
 992:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *  maximum:  Index of maximum element within centroid.
 993:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *  offset:   Start index of cetroid in CapSense_CSD_SensorSignal[] array.
 994:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *  count:    Number of elements within centroid.
 995:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *  resolution:  multiplicator calculated according to centroid type and
 996:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *  API resolution.
 997:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *  noiseThreshold:  Noise threshould.
 998:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     * 
 999:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     * Return:
1000:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *  Returns position value of the slider.
1001:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     * 
1002:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *
1003:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     * Reentrant:
1004:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *  No.
1005:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *
1006:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *******************************************************************************/
1007:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     uint8 CapSense_CSD_CalcCentroid(uint8 maximum, uint8 offset, 
1008:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                         uint8 count, uint16 resolution, uint16 noiseThreshold)
1009:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 	                                    
1010:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     {
 777              		.loc 1 1010 0
 778              		.cfi_startproc
 779              		@ args = 4, pretend = 0, frame = 0
 780              		@ frame_needed = 0, uses_anonymous_args = 0
 781              	.LVL92:
 782 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 783              		.cfi_def_cfa_offset 20
 784              		.cfi_offset 4, -20
 785              		.cfi_offset 5, -16
 786              		.cfi_offset 6, -12
 787              		.cfi_offset 7, -8
 788              		.cfi_offset 14, -4
 789 0002 BDF81450 		ldrh	r5, [sp, #20]
 790              	.LVL93:
1011:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         #if ((CapSense_CSD_TOTAL_LINEAR_SLIDERS_COUNT > 0u) || (CapSense_CSD_TOTAL_TOUCH_PADS_COUNT
1012:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             uint8 posPrev = 0u;
1013:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             uint8 posNext = 0u;
1014:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         #endif /* ((CapSense_CSD_TOTAL_LINEAR_SLIDERS_COUNT>0u) || (CapSense_CSD_TOTAL_TOUCH_PADS_C
1015:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                
1016:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         #if (CapSense_CSD_IS_DIPLEX_SLIDER)                
1017:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             uint8 pos;
1018:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         #endif /* (CapSense_CSD_IS_DIPLEX_SLIDER) */
1019:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         
1020:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         /* Helps while centroid calulation */
ARM GAS  C:\Users\sinow\AppData\Local\Temp\cczERXsC.s 			page 33


1021:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         static uint16 CapSense_CSD_centroid[3u];
1022:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
1023:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         uint8 position;
1024:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         uint32 numerator;
1025:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         int32 denominator;
1026:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         uint16 *startOfSlider = &CapSense_CSD_sensorSignal[offset];
 791              		.loc 1 1026 0
 792 0006 2A4C     		ldr	r4, .L85
 793 0008 04EB4101 		add	r1, r4, r1, lsl #1
 794              	.LVL94:
1027:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                     
1028:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         #if (CapSense_CSD_ADD_SLIDER_TYPE)
1029:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             if(type == CapSense_CSD_TYPE_RADIAL_SLIDER)
1030:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             {
1031:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         #endif /* (CapSense_CSD_ADD_SLIDER_TYPE) */
1032:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
1033:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             #if (CapSense_CSD_TOTAL_RADIAL_SLIDERS_COUNT > 0u)                
1034:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 /* Copy Signal for found centriod */
1035:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 CapSense_CSD_centroid[CapSense_CSD_POS] = startOfSlider[maximum];
1036:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                  
1037:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 /* Check borders for ROTARY Slider */
1038:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 if (maximum == 0u)                   /* Start of centroid */
1039:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 { 
1040:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                     CapSense_CSD_centroid[CapSense_CSD_POS_PREV] = startOfSlider[count - 1u];
1041:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                     CapSense_CSD_centroid[CapSense_CSD_POS_NEXT] = startOfSlider[1u];
1042:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 }
1043:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 else if (maximum == (count - 1u))    /* End of centroid */
1044:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 {
1045:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                     CapSense_CSD_centroid[CapSense_CSD_POS_PREV] = startOfSlider[maximum - 1u];
1046:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                     CapSense_CSD_centroid[CapSense_CSD_POS_NEXT] = startOfSlider[0u];
1047:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 }
1048:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 else                                /* Not first Not last */
1049:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 {
1050:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                     CapSense_CSD_centroid[CapSense_CSD_POS_PREV] = startOfSlider[maximum - 1u];
1051:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                     CapSense_CSD_centroid[CapSense_CSD_POS_NEXT] = startOfSlider[maximum + 1u];
1052:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 }
1053:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             #endif /* (CapSense_CSD_TOTAL_RADIAL_SLIDERS_COUNT > 0u) */
1054:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
1055:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         #if (CapSense_CSD_ADD_SLIDER_TYPE)
1056:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             }
1057:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             else
1058:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             {
1059:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         #endif /* (CapSense_CSD_ADD_SLIDER_TYPE) */
1060:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
1061:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             #if ((CapSense_CSD_TOTAL_LINEAR_SLIDERS_COUNT > 0u) || (CapSense_CSD_TOTAL_TOUCH_PADS_C
1062:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 #if (CapSense_CSD_IS_DIPLEX_SLIDER && CapSense_CSD_IS_NON_DIPLEX_SLIDER)           
1063:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                     /* Calculate next and previous near to maximum */
1064:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                     if(diplex == 0u)
1065:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                     {
1066:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                         pos     = maximum;
1067:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                         posPrev = maximum - 1u;
1068:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                         posNext = maximum + 1u; 
1069:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                     }
1070:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                     else
1071:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                     {
1072:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                         pos     = diplex[maximum];
1073:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                         posPrev = diplex[maximum - 1u];
ARM GAS  C:\Users\sinow\AppData\Local\Temp\cczERXsC.s 			page 34


1074:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                         posNext = diplex[maximum + 1u];
1075:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                         count <<= 1u;
1076:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                     }                    
1077:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 #elif (CapSense_CSD_IS_DIPLEX_SLIDER)
1078:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                     /* Calculate next and previous near to maximum */
1079:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                     pos     = diplex[maximum];
1080:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                     posPrev = diplex[maximum - 1u];
1081:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                     posNext = diplex[maximum + 1u];
1082:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                     count <<= 1u;                    
1083:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 #else                    
1084:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                     /* Calculate next and previous near to maximum */
1085:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                     if (maximum >= 1u)
 795              		.loc 1 1085 0
 796 000c 0446     		mov	r4, r0
 797 000e 10B1     		cbz	r0, .L83
1086:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                     {
1087:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                         posPrev = maximum - 1u;
 798              		.loc 1 1087 0
 799 0010 461E     		subs	r6, r0, #1
 800 0012 F6B2     		uxtb	r6, r6
 801              	.LVL95:
 802 0014 00E0     		b	.L75
 803              	.LVL96:
 804              	.L83:
1012:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             uint8 posNext = 0u;
 805              		.loc 1 1012 0
 806 0016 0026     		movs	r6, #0
 807              	.LVL97:
 808              	.L75:
1088:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                     }
1089:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                     posNext = maximum + 1u; 
 809              		.loc 1 1089 0
 810 0018 601C     		adds	r0, r4, #1
 811              	.LVL98:
 812 001a C0B2     		uxtb	r0, r0
 813              	.LVL99:
1090:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 #endif /* (CapSense_CSD_IS_DIPLEX_SLIDER && CapSense_CSD_IS_NON_DIPLEX_SLIDER) */
1091:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                         
1092:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 /* Copy Signal for found centriod */
1093:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 #if (CapSense_CSD_IS_DIPLEX_SLIDER)
1094:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                     CapSense_CSD_centroid[CapSense_CSD_POS] = startOfSlider[pos];
1095:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 #else
1096:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                     CapSense_CSD_centroid[CapSense_CSD_POS] = startOfSlider[maximum];
 814              		.loc 1 1096 0
 815 001c 31F814E0 		ldrh	lr, [r1, r4, lsl #1]
 816 0020 244F     		ldr	r7, .L85+4
 817 0022 A7F806E0 		strh	lr, [r7, #6]	@ movhi
1097:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 #endif /* (CapSense_CSD_IS_DIPLEX_SLIDER) */
1098:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                     
1099:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 /* Check borders for LINEAR Slider */
1100:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 if (maximum == 0u)                   /* Start of centroid */
 818              		.loc 1 1100 0
 819 0026 2CB9     		cbnz	r4, .L76
1101:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 { 
1102:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                     CapSense_CSD_centroid[CapSense_CSD_POS_PREV] = 0u;
 820              		.loc 1 1102 0
 821 0028 0026     		movs	r6, #0
ARM GAS  C:\Users\sinow\AppData\Local\Temp\cczERXsC.s 			page 35


 822              	.LVL100:
 823 002a BE80     		strh	r6, [r7, #4]	@ movhi
1103:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                     CapSense_CSD_centroid[CapSense_CSD_POS_NEXT] = startOfSlider[posNext];
 824              		.loc 1 1103 0
 825 002c 31F81010 		ldrh	r1, [r1, r0, lsl #1]
 826              	.LVL101:
 827 0030 3981     		strh	r1, [r7, #8]	@ movhi
 828 0032 10E0     		b	.L77
 829              	.LVL102:
 830              	.L76:
1104:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 }
1105:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 else if (maximum == ((count) - 1u)) /* End of centroid */
 831              		.loc 1 1105 0
 832 0034 013A     		subs	r2, r2, #1
 833              	.LVL103:
 834 0036 9442     		cmp	r4, r2
 835 0038 06D1     		bne	.L78
1106:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 {
1107:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                     CapSense_CSD_centroid[CapSense_CSD_POS_PREV] = startOfSlider[posPrev];
 836              		.loc 1 1107 0
 837 003a 31F81610 		ldrh	r1, [r1, r6, lsl #1]
 838              	.LVL104:
 839 003e 1D4A     		ldr	r2, .L85+4
 840 0040 9180     		strh	r1, [r2, #4]	@ movhi
1108:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                     CapSense_CSD_centroid[CapSense_CSD_POS_NEXT] = 0u;
 841              		.loc 1 1108 0
 842 0042 0021     		movs	r1, #0
 843 0044 1181     		strh	r1, [r2, #8]	@ movhi
 844 0046 06E0     		b	.L77
 845              	.LVL105:
 846              	.L78:
1109:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 }
1110:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 else                                /* Not first Not last */
1111:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 {
1112:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                     CapSense_CSD_centroid[CapSense_CSD_POS_PREV] = startOfSlider[posPrev];
 847              		.loc 1 1112 0
 848 0048 31F81660 		ldrh	r6, [r1, r6, lsl #1]
 849              	.LVL106:
 850 004c 194A     		ldr	r2, .L85+4
 851 004e 9680     		strh	r6, [r2, #4]	@ movhi
1113:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                     CapSense_CSD_centroid[CapSense_CSD_POS_NEXT] = startOfSlider[posNext];
 852              		.loc 1 1113 0
 853 0050 31F81010 		ldrh	r1, [r1, r0, lsl #1]
 854              	.LVL107:
 855 0054 1181     		strh	r1, [r2, #8]	@ movhi
 856              	.L77:
1114:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 }
1115:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             #endif /* ((CapSense_CSD_TOTAL_LINEAR_SLIDERS_COUNT>0u)||(CapSense_CSD_TOTAL_TOUCH_PADS
1116:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
1117:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         #if (CapSense_CSD_ADD_SLIDER_TYPE)
1118:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             }
1119:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         #endif /* (CapSense_CSD_ADD_SLIDER_TYPE) */
1120:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     
1121:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         /* Subtract noiseThreshold */
1122:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         if(CapSense_CSD_centroid[CapSense_CSD_POS_PREV] > noiseThreshold)
 857              		.loc 1 1122 0
 858 0056 174A     		ldr	r2, .L85+4
ARM GAS  C:\Users\sinow\AppData\Local\Temp\cczERXsC.s 			page 36


 859 0058 9288     		ldrh	r2, [r2, #4]
 860 005a AA42     		cmp	r2, r5
 861 005c 03D9     		bls	.L79
1123:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         {
1124:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             CapSense_CSD_centroid[CapSense_CSD_POS_PREV] -= noiseThreshold;
 862              		.loc 1 1124 0
 863 005e 521B     		subs	r2, r2, r5
 864 0060 1449     		ldr	r1, .L85+4
 865 0062 8A80     		strh	r2, [r1, #4]	@ movhi
 866 0064 02E0     		b	.L80
 867              	.L79:
1125:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         }
1126:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         else
1127:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         {
1128:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             CapSense_CSD_centroid[CapSense_CSD_POS_PREV] = 0u;
 868              		.loc 1 1128 0
 869 0066 0021     		movs	r1, #0
 870 0068 124A     		ldr	r2, .L85+4
 871 006a 9180     		strh	r1, [r2, #4]	@ movhi
 872              	.L80:
1129:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         }
1130:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         
1131:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         /* Maximum always grater than fingerThreshold, so grate than noiseThreshold */
1132:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         CapSense_CSD_centroid[CapSense_CSD_POS] -= noiseThreshold;
 873              		.loc 1 1132 0
 874 006c 114A     		ldr	r2, .L85+4
 875 006e D188     		ldrh	r1, [r2, #6]
 876 0070 491B     		subs	r1, r1, r5
 877 0072 89B2     		uxth	r1, r1
 878 0074 D180     		strh	r1, [r2, #6]	@ movhi
1133:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         
1134:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         /* Subtract noiseThreshold */
1135:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         if(CapSense_CSD_centroid[CapSense_CSD_POS_NEXT] > noiseThreshold)
 879              		.loc 1 1135 0
 880 0076 1289     		ldrh	r2, [r2, #8]
 881 0078 9542     		cmp	r5, r2
 882 007a 03D2     		bcs	.L81
1136:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         {
1137:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             CapSense_CSD_centroid[CapSense_CSD_POS_NEXT] -= noiseThreshold;
 883              		.loc 1 1137 0
 884 007c 551B     		subs	r5, r2, r5
 885 007e 0D4A     		ldr	r2, .L85+4
 886 0080 1581     		strh	r5, [r2, #8]	@ movhi
 887 0082 02E0     		b	.L82
 888              	.L81:
1138:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         }
1139:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         else
1140:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         {
1141:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             CapSense_CSD_centroid[CapSense_CSD_POS_NEXT] = 0u;
 889              		.loc 1 1141 0
 890 0084 0020     		movs	r0, #0
 891              	.LVL108:
 892 0086 0B4A     		ldr	r2, .L85+4
 893 0088 1081     		strh	r0, [r2, #8]	@ movhi
 894              	.L82:
1142:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         }
1143:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         
ARM GAS  C:\Users\sinow\AppData\Local\Temp\cczERXsC.s 			page 37


1144:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         
1145:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         /* Si+1 - Si-1 */
1146:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         numerator = (uint32) CapSense_CSD_centroid[CapSense_CSD_POS_NEXT] -
 895              		.loc 1 1146 0
 896 008a 0A4A     		ldr	r2, .L85+4
 897 008c 1089     		ldrh	r0, [r2, #8]
1147:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                     (uint32) CapSense_CSD_centroid[CapSense_CSD_POS_PREV];
 898              		.loc 1 1147 0
 899 008e 9588     		ldrh	r5, [r2, #4]
1146:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                     (uint32) CapSense_CSD_centroid[CapSense_CSD_POS_PREV];
 900              		.loc 1 1146 0
 901 0090 421B     		subs	r2, r0, r5
 902              	.LVL109:
1148:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
1149:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         /* Si+1 + Si + Si-1 */
1150:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         denominator = (int32) CapSense_CSD_centroid[CapSense_CSD_POS_PREV] + 
 903              		.loc 1 1150 0
 904 0092 2944     		add	r1, r1, r5
 905 0094 0844     		add	r0, r0, r1
 906              	.LVL110:
1151:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                       (int32) CapSense_CSD_centroid[CapSense_CSD_POS] + 
1152:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                       (int32) CapSense_CSD_centroid[CapSense_CSD_POS_NEXT];
1153:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         
1154:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         /* (numerator/denominator) + maximum */
1155:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         denominator = (((int32)(uint32)((uint32)numerator << 8u)/denominator) + (int32)(uint32)((ui
 907              		.loc 1 1155 0
 908 0096 1202     		lsls	r2, r2, #8
 909              	.LVL111:
 910 0098 92FBF0F0 		sdiv	r0, r2, r0
 911              	.LVL112:
 912 009c 00EB0420 		add	r0, r0, r4, lsl #8
 913              	.LVL113:
1156:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
1157:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         #if(CapSense_CSD_TOTAL_RADIAL_SLIDERS_COUNT > 0u)
1158:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             /* Only required for RADIAL Slider */
1159:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             if(denominator < 0)
1160:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             {
1161:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 denominator += (int32)((uint16)((uint16) count << 8u));
1162:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             }
1163:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         #endif /* (CapSense_CSD_TOTAL_RADIAL_SLIDERS_COUNT > 0u) */
1164:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
1165:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         denominator *= (int16)resolution;
 914              		.loc 1 1165 0
 915 00a0 1BB2     		sxth	r3, r3
 916 00a2 00FB03F0 		mul	r0, r0, r3
 917              	.LVL114:
1166:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
1167:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         /* Round the relust and put it to uint8 */
1168:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         position = ((uint8) HI16((uint32)denominator + CapSense_CSD_CENTROID_ROUND_VALUE));
 918              		.loc 1 1168 0
 919 00a6 00F5FE40 		add	r0, r0, #32512
 920              	.LVL115:
1169:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
1170:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         return (position);
1171:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     }    
 921              		.loc 1 1171 0
 922 00aa C0F30740 		ubfx	r0, r0, #16, #8
ARM GAS  C:\Users\sinow\AppData\Local\Temp\cczERXsC.s 			page 38


 923              	.LVL116:
 924 00ae F0BD     		pop	{r4, r5, r6, r7, pc}
 925              	.LVL117:
 926              	.L86:
 927              		.align	2
 928              	.L85:
 929 00b0 00000000 		.word	CapSense_CSD_sensorSignal
 930 00b4 00000000 		.word	.LANCHOR0
 931              		.cfi_endproc
 932              	.LFE12:
 933              		.size	CapSense_CSD_CalcCentroid, .-CapSense_CSD_CalcCentroid
 934              		.section	.text.CapSense_CSD_IIR4Filter,"ax",%progbits
 935              		.align	2
 936              		.global	CapSense_CSD_IIR4Filter
 937              		.thumb
 938              		.thumb_func
 939              		.type	CapSense_CSD_IIR4Filter, %function
 940              	CapSense_CSD_IIR4Filter:
 941              	.LFB14:
1172:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** #endif /* (CapSense_CSD_TOTAL_CENTROIDS_COUNT) */
1173:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
1174:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
1175:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** #if(CapSense_CSD_TOTAL_LINEAR_SLIDERS_COUNT > 0u)
1176:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     /*******************************************************************************
1177:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     * Function Name: CapSense_CSD_GetCentroidPos
1178:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     ********************************************************************************
1179:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *
1180:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     * Summary:
1181:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *  Checks the CapSense_CSD_Signal[ ] array for a centroid within
1182:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *  slider specified range. The centroid position is calculated to the resolution
1183:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *  specified in the CapSense customizer. The position filters are applied to the
1184:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *  result if enabled.
1185:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *
1186:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     * Parameters:
1187:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *  widget:  Widget number.
1188:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *  For every linear slider widget there are defines in this format:
1189:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *  #define CapSense_CSD_LS__"widget_name"            5
1190:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     * 
1191:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     * Return:
1192:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *  Returns position value of the linear slider.
1193:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *
1194:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     * Side Effects:
1195:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *  If any sensor within the slider widget is active, the function returns values
1196:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *  from zero to the API resolution value set in the CapSense customizer. If no
1197:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *  sensors are active, the function returns 0xFFFF. If an error occurs during
1198:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *  execution of the centroid/diplexing algorithm, the function returns 0xFFFF.
1199:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *  There are no checks of widget type argument provided to this function.
1200:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *  The unproper widget type provided will cause unexpected position calculations.
1201:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *
1202:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     * Note:
1203:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *  If noise counts on the slider segments are greater than the noise
1204:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *  threshold, this subroutine may generate a false centroid result. The noise
1205:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *  threshold should be set carefully (high enough above the noise level) so
1206:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *  that noise will not generate a false centroid.
1207:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *
1208:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     * Reentrant:
1209:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *  No.
ARM GAS  C:\Users\sinow\AppData\Local\Temp\cczERXsC.s 			page 39


1210:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *
1211:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *******************************************************************************/
1212:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     uint16 CapSense_CSD_GetCentroidPos(uint8 widget) 
1213:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     {
1214:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         #if (CapSense_CSD_IS_DIPLEX_SLIDER)
1215:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             const uint8 CYCODE *diplex;
1216:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         #endif /* (CapSense_CSD_IS_DIPLEX_SLIDER) */
1217:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 
1218:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         #if (0u != CapSense_CSD_LINEAR_SLIDERS_POS_FILTERS_MASK)
1219:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             uint8 posIndex;
1220:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             uint8 firstTimeIndex = CapSense_CSD_posFiltersData[widget];
1221:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             uint8 posFiltersMask = CapSense_CSD_posFiltersMask[widget];  
1222:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         #endif /* (0u != CapSense_CSD_LINEAR_SLIDERS_POS_FILTERS_MASK) */
1223:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
1224:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         #if ((0u != (CapSense_CSD_MEDIAN_FILTER & CapSense_CSD_LINEAR_SLIDERS_POS_FILTERS_MASK)) ||
1225:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****              (0u != (CapSense_CSD_AVERAGING_FILTER & CapSense_CSD_LINEAR_SLIDERS_POS_FILTERS_MASK))
1226:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             uint8 tempPos;
1227:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         #endif /* ((0u != (CapSense_CSD_MEDIAN_FILTER & CapSense_CSD_LINEAR_SLIDERS_POS_FILTERS_MAS
1228:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                *   (0u != (CapSense_CSD_AVERAGING_FILTER & CapSense_CSD_LINEAR_SLIDERS_POS_FILTERS_
1229:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                */
1230:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
1231:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         uint8 maximum;
1232:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         uint16 position;
1233:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         uint8 offset = CapSense_CSD_rawDataIndex[widget];
1234:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         uint8 count = CapSense_CSD_numberOfSensors[widget];
1235:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                         
1236:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         #if (CapSense_CSD_IS_DIPLEX_SLIDER)
1237:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             if(widget < CapSense_CSD_TOTAL_DIPLEXED_SLIDERS_COUNT)
1238:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             {
1239:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 maximum = CapSense_CSD_diplexTable[widget];
1240:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 diplex = &CapSense_CSD_diplexTable[maximum];
1241:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             }
1242:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             else
1243:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             {
1244:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 diplex = 0u;
1245:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             }
1246:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         #endif /* (CapSense_CSD_IS_DIPLEX_SLIDER) */
1247:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
1248:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         /* Find Maximum within centroid */      
1249:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         #if (CapSense_CSD_IS_DIPLEX_SLIDER)        
1250:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             maximum = CapSense_CSD_FindMaximum(offset, count, CapSense_CSD_fingerThreshold[widget],
1251:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         #else
1252:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             maximum = CapSense_CSD_FindMaximum(offset, count, CapSense_CSD_fingerThreshold[widget])
1253:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         #endif /* (CapSense_CSD_IS_DIPLEX_SLIDER) */
1254:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
1255:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         if (maximum != 0xFFu)
1256:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         {
1257:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             /* Calculate centroid */
1258:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             position = (uint16) CapSense_CSD_CalcCentroid(maximum, 
1259:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                          offset, count, CapSense_CSD_centroidMult[widget], CapSense_CSD_noiseThresh
1260:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
1261:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             #if (0u != CapSense_CSD_LINEAR_SLIDERS_POS_FILTERS_MASK)
1262:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 /* Check if this linear slider has enabled filters */
1263:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 if (0u != (posFiltersMask & CapSense_CSD_ANY_POS_FILTER))
1264:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 {
1265:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                     /* Caluclate position to store filters data */
1266:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                     posIndex  = firstTimeIndex + 1u;
ARM GAS  C:\Users\sinow\AppData\Local\Temp\cczERXsC.s 			page 40


1267:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                     
1268:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                     if (0u == CapSense_CSD_posFiltersData[firstTimeIndex])
1269:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                     {
1270:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                         /* Init filters */
1271:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                         CapSense_CSD_posFiltersData[posIndex] = (uint8) position;
1272:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                         #if ((0u != (CapSense_CSD_MEDIAN_FILTER & \
1273:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                      CapSense_CSD_LINEAR_SLIDERS_POS_FILTERS_MASK)) || \
1274:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                              (0u != (CapSense_CSD_AVERAGING_FILTER & \
1275:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                      CapSense_CSD_LINEAR_SLIDERS_POS_FILTERS_MASK)))
1276:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
1277:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                             if ( (0u != (posFiltersMask & CapSense_CSD_MEDIAN_FILTER)) || 
1278:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                  (0u != (posFiltersMask & CapSense_CSD_AVERAGING_FILTER)) )
1279:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                             {
1280:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                 CapSense_CSD_posFiltersData[posIndex + 1u] = (uint8) position;
1281:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                             }
1282:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                         #endif /* ((0u != (CapSense_CSD_MEDIAN_FILTER & \
1283:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                *           CapSense_CSD_LINEAR_SLIDERS_POS_FILTERS_MASK)) || \
1284:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                *   (0u != (CapSense_CSD_AVERAGING_FILTER & \
1285:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                *           CapSense_CSD_LINEAR_SLIDERS_POS_FILTERS_MASK)))
1286:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                */
1287:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                         
1288:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                         CapSense_CSD_posFiltersData[firstTimeIndex] = 1u;
1289:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                     }
1290:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                     else
1291:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                     {
1292:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                         /* Do filtering */
1293:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                         #if (0u != (CapSense_CSD_MEDIAN_FILTER & CapSense_CSD_LINEAR_SLIDERS_POS_FI
1294:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_CSD_MEDIAN_FILTER))
1295:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                             {
1296:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                 tempPos = (uint8) position;
1297:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                 position = CapSense_CSD_MedianFilter(position,
1298:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                                                 (uint16)CapSense_CSD_posFiltersData
1299:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                                                 (uint16)CapSense_CSD_posFiltersData
1300:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                 CapSense_CSD_posFiltersData[posIndex + 1u] =
1301:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                                                              CapSense_CSD_posFilter
1302:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                 CapSense_CSD_posFiltersData[posIndex] = tempPos;
1303:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                             }
1304:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                         #endif /*(0u != (CapSense_CSD_MEDIAN_FILTER &
1305:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                *         CapSense_CSD_LINEAR_SLIDERS_POS_FILTERS_MASK))
1306:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                */
1307:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
1308:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                         #if(0u!=(CapSense_CSD_AVERAGING_FILTER & CapSense_CSD_LINEAR_SLIDERS_POS_FI
1309:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_CSD_AVERAGING_FILTER)) 
1310:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                             {
1311:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                 tempPos = (uint8) position;
1312:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                 position = CapSense_CSD_AveragingFilter(position,
1313:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                                                 (uint16)CapSense_CSD_posFiltersData
1314:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                                                 (uint16)CapSense_CSD_posFiltersData
1315:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                 CapSense_CSD_posFiltersData[posIndex+1u]=CapSense_CSD_posFiltersDat
1316:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                 CapSense_CSD_posFiltersData[posIndex] = tempPos;
1317:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                             }
1318:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                         #endif /* (0u != (CapSense_CSD_AVERAGING_FILTER & \
1319:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                *           CapSense_CSD_LINEAR_SLIDERS_POS_FILTERS_MASK))
1320:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                */
1321:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
1322:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                         #if (0u != (CapSense_CSD_IIR2_FILTER & CapSense_CSD_LINEAR_SLIDERS_POS_FILT
1323:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_CSD_IIR2_FILTER)) 
ARM GAS  C:\Users\sinow\AppData\Local\Temp\cczERXsC.s 			page 41


1324:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                             {
1325:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                 position = CapSense_CSD_IIR2Filter(position,
1326:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                                                     (uint16)CapSense_CSD_posFilters
1327:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                 CapSense_CSD_posFiltersData[posIndex] = (uint8) position;
1328:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                             }
1329:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                         #endif /* (0u != (CapSense_CSD_IIR2_FILTER & \
1330:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                *          CapSense_CSD_LINEAR_SLIDERS_POS_FILTERS_MASK))
1331:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                */
1332:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
1333:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                         #if (0u != (CapSense_CSD_IIR4_FILTER & CapSense_CSD_LINEAR_SLIDERS_POS_FILT
1334:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_CSD_IIR4_FILTER))
1335:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                             {
1336:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                 position = CapSense_CSD_IIR4Filter(position,
1337:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                                                     (uint16)CapSense_CSD_posFilters
1338:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                 CapSense_CSD_posFiltersData[posIndex] = (uint8) position;
1339:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                             }                                
1340:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                         #endif /* (0u != (CapSense_CSD_IIR4_FILTER & \
1341:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                *          CapSense_CSD_LINEAR_SLIDERS_POS_FILTERS_MASK))
1342:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                */
1343:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
1344:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                         #if (0u != (CapSense_CSD_JITTER_FILTER & CapSense_CSD_LINEAR_SLIDERS_POS_FI
1345:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_CSD_JITTER_FILTER))
1346:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                             {
1347:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                 position = CapSense_CSD_JitterFilter(position,
1348:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                                                     (uint16)CapSense_CSD_posFilters
1349:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                 CapSense_CSD_posFiltersData[posIndex] = (uint8) position;
1350:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                             }
1351:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                         #endif /* (0u != (CapSense_CSD_JITTER_FILTER & \
1352:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                *           CapSense_CSD_LINEAR_SLIDERS_POS_FILTERS_MASK))
1353:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                */
1354:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                     }
1355:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 }
1356:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             #endif /* (0u != CapSense_CSD_LINEAR_SLIDERS_POS_FILTERS_MASK) */
1357:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
1358:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         }
1359:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         else
1360:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         {
1361:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             /* The maximum wasn't found */
1362:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             position = 0xFFFFu;
1363:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
1364:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             #if(0u != CapSense_CSD_LINEAR_SLIDERS_POS_FILTERS_MASK)
1365:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 /* Reset the filters */
1366:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 if(0u != (posFiltersMask & CapSense_CSD_ANY_POS_FILTER))
1367:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 {
1368:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                     CapSense_CSD_posFiltersData[firstTimeIndex] = 0u;
1369:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 }
1370:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             #endif /* (0u != CapSense_CSD_LINEAR_SLIDERS_POS_FILTERS_MASK) */
1371:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         }
1372:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
1373:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         
1374:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         return (position);
1375:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     }
1376:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** #endif /* (CapSense_CSD_TOTAL_LINEAR_SLIDERS_COUNT > 0u) */
1377:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
1378:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
1379:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** #if(CapSense_CSD_TOTAL_RADIAL_SLIDERS_COUNT > 0u)
1380:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     /*******************************************************************************
ARM GAS  C:\Users\sinow\AppData\Local\Temp\cczERXsC.s 			page 42


1381:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     * Function Name: CapSense_CSD_GetRadialCentroidPos
1382:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     ********************************************************************************
1383:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *
1384:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     * Summary:
1385:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *  Checks the CapSense_CSD_Signal[ ] array for a centroid within
1386:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *  slider specified range. The centroid position is calculated to the resolution
1387:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *  specified in the CapSense customizer. The position filters are applied to the
1388:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *  result if enabled.
1389:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *
1390:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     * Parameters:
1391:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *  widget:  Widget number.
1392:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *  For every radial slider widget there are defines in this format:
1393:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *  #define CapSense_CSD_RS_"widget_name"            5
1394:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     * 
1395:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     * Return:
1396:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *  Returns position value of the radial slider.
1397:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *
1398:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     * Side Effects:
1399:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *  If any sensor within the slider widget is active, the function returns values
1400:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *  from zero to the API resolution value set in the CapSense customizer. If no
1401:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *  sensors are active, the function returns 0xFFFF.
1402:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *  There are no checks of widget type argument provided to this function.
1403:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *  The unproper widget type provided will cause unexpected position calculations.
1404:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *
1405:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     * Note:
1406:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *  If noise counts on the slider segments are greater than the noise
1407:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *  threshold, this subroutine may generate a false centroid result. The noise
1408:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *  threshold should be set carefully (high enough above the noise level) so 
1409:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *  that noise will not generate a false centroid.
1410:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *
1411:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *
1412:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     * Reentrant:
1413:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *  No.
1414:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *
1415:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *******************************************************************************/
1416:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****      uint16 CapSense_CSD_GetRadialCentroidPos(uint8 widget)
1417:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 	                                       
1418:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     {
1419:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         #if (0u != CapSense_CSD_RADIAL_SLIDERS_POS_FILTERS_MASK)
1420:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             uint8 posIndex;
1421:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             uint8 firstTimeIndex = CapSense_CSD_posFiltersData[widget];
1422:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             uint8 posFiltersMask = CapSense_CSD_posFiltersMask[widget]; 
1423:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         #endif /* (0u != CapSense_CSD_RADIAL_SLIDERS_POS_FILTERS_MASK) */
1424:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
1425:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         #if ((0u != (CapSense_CSD_MEDIAN_FILTER & CapSense_CSD_RADIAL_SLIDERS_POS_FILTERS_MASK)) ||
1426:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****              (0u != (CapSense_CSD_AVERAGING_FILTER & CapSense_CSD_RADIAL_SLIDERS_POS_FILTERS_MASK))
1427:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             uint8 tempPos;
1428:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         #endif /* ((0u != (CapSense_CSD_MEDIAN_FILTER & CapSense_CSD_RADIAL_SLIDERS_POS_FILTERS_MAS
1429:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                *   (0u != (CapSense_CSD_AVERAGING_FILTER & CapSense_CSD_RADIAL_SLIDERS_POS_FILTERS_
1430:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                */
1431:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
1432:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         uint8 maximum;
1433:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         uint16 position;
1434:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         uint8 offset = CapSense_CSD_rawDataIndex[widget];
1435:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         uint8 count = CapSense_CSD_numberOfSensors[widget];
1436:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         
1437:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         /* Find Maximum within centroid */        
ARM GAS  C:\Users\sinow\AppData\Local\Temp\cczERXsC.s 			page 43


1438:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         #if (CapSense_CSD_IS_DIPLEX_SLIDER)
1439:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             maximum = CapSense_CSD_FindMaximum(offset, count, CapSense_CSD_fingerThreshold[widget],
1440:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         #else
1441:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             maximum = CapSense_CSD_FindMaximum(offset, count, CapSense_CSD_fingerThreshold[widget])
1442:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         #endif /* (CapSense_CSD_IS_DIPLEX_SLIDER) */
1443:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         
1444:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         if (maximum != 0xFFu)
1445:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         {
1446:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             /* Calculate centroid */
1447:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             position = (uint16) CapSense_CSD_CalcCentroid(maximum, 
1448:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                          offset, count, CapSense_CSD_centroidMult[widget], CapSense_CSD_noiseThresh
1449:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
1450:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             #if (0u != CapSense_CSD_RADIAL_SLIDERS_POS_FILTERS_MASK)
1451:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 /* Check if this Radial slider has enabled filters */
1452:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 if (0u != (posFiltersMask & CapSense_CSD_ANY_POS_FILTER))
1453:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 {
1454:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                     /* Caluclate position to store filters data */
1455:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                     posIndex  = firstTimeIndex + 1u;
1456:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                     
1457:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                     if (0u == CapSense_CSD_posFiltersData[firstTimeIndex])
1458:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                     {
1459:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                         /* Init filters */
1460:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                         CapSense_CSD_posFiltersData[posIndex] = (uint8) position;
1461:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                         #if ((0u != (CapSense_CSD_MEDIAN_FILTER & \
1462:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                      CapSense_CSD_RADIAL_SLIDERS_POS_FILTERS_MASK)) || \
1463:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                              (0u != (CapSense_CSD_AVERAGING_FILTER & \
1464:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                      CapSense_CSD_RADIAL_SLIDERS_POS_FILTERS_MASK)))
1465:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
1466:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                             if ( (0u != (posFiltersMask & CapSense_CSD_MEDIAN_FILTER))  || 
1467:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                  (0u != (posFiltersMask & CapSense_CSD_AVERAGING_FILTER)) )
1468:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                             {
1469:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                 CapSense_CSD_posFiltersData[posIndex + 1u] = (uint8) position;
1470:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                             }
1471:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                         #endif /* ((0u != (CapSense_CSD_MEDIAN_FILTER & \
1472:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                *           CapSense_CSD_RADIAL_SLIDERS_POS_FILTERS_MASK)) || \
1473:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                *   (0u != (CapSense_CSD_AVERAGING_FILTER & \
1474:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                *           CapSense_CSD_RADIAL_SLIDERS_POS_FILTERS_MASK)))
1475:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                */
1476:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                         
1477:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                         CapSense_CSD_posFiltersData[firstTimeIndex] = 1u;
1478:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                     }
1479:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                     else
1480:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                     {
1481:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                         /* Do filtering */
1482:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                         #if (0u != (CapSense_CSD_MEDIAN_FILTER & CapSense_CSD_RADIAL_SLIDERS_POS_FI
1483:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_CSD_MEDIAN_FILTER))
1484:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                             {
1485:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                 tempPos = (uint8) position;
1486:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                 position = CapSense_CSD_MedianFilter(position,
1487:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                                                         CapSense_CSD_posFiltersData
1488:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                                                         CapSense_CSD_posFiltersData
1489:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                 CapSense_CSD_posFiltersData[posIndex + 1u] = 
1490:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                                                               CapSense_CSD_posFilte
1491:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                 CapSense_CSD_posFiltersData[posIndex] = tempPos;
1492:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                             }
1493:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                         #endif /* (0u != (CapSense_CSD_MEDIAN_FILTER & 
1494:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                *          CapSense_CSD_RADIAL_SLIDERS_POS_FILTERS_MASK))
ARM GAS  C:\Users\sinow\AppData\Local\Temp\cczERXsC.s 			page 44


1495:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                */
1496:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
1497:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                         #if (0u != (CapSense_CSD_AVERAGING_FILTER & \
1498:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                     CapSense_CSD_RADIAL_SLIDERS_POS_FILTERS_MASK))
1499:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_CSD_AVERAGING_FILTER))
1500:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                             {
1501:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                 tempPos = (uint8) position;
1502:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                 position = CapSense_CSD_AveragingFilter(position, 
1503:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                                                        CapSense_CSD_posFiltersData[
1504:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                                                        CapSense_CSD_posFiltersData[
1505:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                 CapSense_CSD_posFiltersData[posIndex+1u]= CapSense_CSD_posFiltersDa
1506:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                 CapSense_CSD_posFiltersData[posIndex] = tempPos;
1507:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                             }
1508:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                         #endif /* (0u != (CapSense_CSD_AVERAGING_FILTER & \
1509:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                *          CapSense_CSD_RADIAL_SLIDERS_POS_FILTERS_MASK))
1510:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                */
1511:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
1512:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                         #if (0u != (CapSense_CSD_IIR2_FILTER & CapSense_CSD_RADIAL_SLIDERS_POS_FILT
1513:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_CSD_IIR2_FILTER))
1514:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                             {
1515:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                 position = CapSense_CSD_IIR2Filter(position,
1516:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                                                     (uint16)CapSense_CSD_posFilters
1517:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                 CapSense_CSD_posFiltersData[posIndex] = (uint8) position;
1518:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                             }
1519:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                         #endif /* (0u != (CapSense_CSD_IIR2_FILTER & 
1520:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                *          CapSense_CSD_RADIAL_SLIDERS_POS_FILTERS_MASK))
1521:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                */
1522:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
1523:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                         #if (0u != (CapSense_CSD_IIR4_FILTER & CapSense_CSD_RADIAL_SLIDERS_POS_FILT
1524:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_CSD_IIR4_FILTER))
1525:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                             {
1526:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                 position = CapSense_CSD_IIR4Filter(position,
1527:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                                                     (uint16)CapSense_CSD_posFilters
1528:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                 CapSense_CSD_posFiltersData[posIndex] = (uint8) position;
1529:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                             }
1530:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                         #endif /* (0u != (CapSense_CSD_IIR4_FILTER & 
1531:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                *          CapSense_CSD_RADIAL_SLIDERS_POS_FILTERS_MASK))
1532:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                */
1533:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
1534:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                         #if (0u != (CapSense_CSD_JITTER_FILTER & CapSense_CSD_RADIAL_SLIDERS_POS_FI
1535:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_CSD_JITTER_FILTER))
1536:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                             {
1537:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                 position = CapSense_CSD_JitterFilter(position, 
1538:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                                                          CapSense_CSD_posFiltersDat
1539:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                 CapSense_CSD_posFiltersData[posIndex] = (uint8) position;
1540:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                             }
1541:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                         #endif /* (0u != (CapSense_CSD_JITTER_FILTER &
1542:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                *           CapSense_CSD_RADIAL_SLIDERS_POS_FILTERS_MASK))
1543:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                */
1544:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                     }
1545:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 }
1546:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             #endif /* (0u != CapSense_CSD_RADIAL_SLIDERS_POS_FILTERS_MASK) */
1547:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
1548:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         }
1549:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         else
1550:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         {
1551:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             /* The maximum didn't find */
ARM GAS  C:\Users\sinow\AppData\Local\Temp\cczERXsC.s 			page 45


1552:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             position = 0xFFFFu;
1553:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
1554:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             #if (0u != CapSense_CSD_RADIAL_SLIDERS_POS_FILTERS_MASK)
1555:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 /* Reset the filters */
1556:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 if((posFiltersMask & CapSense_CSD_ANY_POS_FILTER) != 0u)
1557:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 {
1558:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                     CapSense_CSD_posFiltersData[firstTimeIndex] = 0u;
1559:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 }
1560:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             #endif /* (0u != CapSense_CSD_RADIAL_SLIDERS_POS_FILTERS_MASK) */
1561:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         }
1562:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         
1563:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         return (position);
1564:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     }
1565:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** #endif
1566:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
1567:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
1568:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** #if(CapSense_CSD_TOTAL_TOUCH_PADS_COUNT > 0u)
1569:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     /*******************************************************************************
1570:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     * Function Name: CapSense_CSD_GetTouchCentroidPos
1571:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     ********************************************************************************
1572:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *
1573:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     * Summary:
1574:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *  If a finger is present on touch pad, this function calculates the X and Y
1575:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *  position of the finger by calculating the centroids within touch pad specified
1576:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *  range. The X and Y positions are calculated to the API resolutions set in the
1577:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *  CapSense customizer. Returns a 1 if a finger is on the touchpad.
1578:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *  The position filter is applied to the result if enabled.
1579:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *  This function is available only if a touch pad is defined by the CapSense
1580:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *  customizer.
1581:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *
1582:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     * Parameters:
1583:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *  widget:  Widget number. 
1584:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *  For every touchpad widget there are defines in this format:
1585:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *  #define CapSense_CSD_TP_"widget_name"            5
1586:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *
1587:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *  pos:     Pointer to the array of two uint16 elements, where result
1588:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *  result of calculation of X and Y position are stored.
1589:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *  pos[0u]  - position of X
1590:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *  pos[1u]  - position of Y
1591:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *
1592:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     * Return:
1593:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *  Returns a 1 if a finger is on the touch pad, 0 - if not.
1594:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *
1595:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     * Side Effects:
1596:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *   There are no checks of widget type argument provided to this function.
1597:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *   The unproper widget type provided will cause unexpected position
1598:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *   calculations.
1599:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *
1600:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     * Reentrant:
1601:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *  No.
1602:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *
1603:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *******************************************************************************/
1604:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     uint8 CapSense_CSD_GetTouchCentroidPos(uint8 widget, uint16* pos)
1605:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 	                                    
1606:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     {
1607:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         #if (0u != CapSense_CSD_TOUCH_PADS_POS_FILTERS_MASK)
1608:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             uint8 posXIndex;
ARM GAS  C:\Users\sinow\AppData\Local\Temp\cczERXsC.s 			page 46


1609:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             uint8 posYIndex;
1610:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             uint8 firstTimeIndex = CapSense_CSD_posFiltersData[widget];
1611:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             uint8 posFiltersMask = CapSense_CSD_posFiltersMask[widget];
1612:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         #endif /* (0u != CapSense_CSD_TOUCH_PADS_POS_FILTERS_MASK) */
1613:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
1614:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         #if ((0u != (CapSense_CSD_MEDIAN_FILTER & CapSense_CSD_TOUCH_PADS_POS_FILTERS_MASK)) || \
1615:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****              (0u != (CapSense_CSD_AVERAGING_FILTER & CapSense_CSD_TOUCH_PADS_POS_FILTERS_MASK)))
1616:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             uint16 tempPos;
1617:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         #endif /* ((0u != (CapSense_CSD_MEDIAN_FILTER & CapSense_CSD_TOUCH_PADS_POS_FILTERS_MASK)) 
1618:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                *   (0u != (CapSense_CSD_AVERAGING_FILTER & CapSense_CSD_TOUCH_PADS_POS_FILTERS_MASK
1619:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                */
1620:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
1621:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         uint8 maxX;
1622:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         uint8 maxY;
1623:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         uint8 posX;
1624:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         uint8 posY;
1625:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         uint8 touch = 0u;
1626:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         uint8 offset = CapSense_CSD_rawDataIndex[widget];
1627:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         uint8 count = CapSense_CSD_numberOfSensors[widget];
1628:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         
1629:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         /* Find Maximum within X centroid */
1630:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         #if (CapSense_CSD_IS_DIPLEX_SLIDER)
1631:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             maxX = CapSense_CSD_FindMaximum(offset, count, CapSense_CSD_fingerThreshold[widget], 0u
1632:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         #else
1633:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             maxX = CapSense_CSD_FindMaximum(offset, count, CapSense_CSD_fingerThreshold[widget]);
1634:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         #endif /* (CapSense_CSD_IS_DIPLEX_SLIDER) */
1635:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
1636:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         if (maxX != 0xFFu)
1637:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         {
1638:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             offset = CapSense_CSD_rawDataIndex[widget + 1u];
1639:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             count = CapSense_CSD_numberOfSensors[widget + 1u];
1640:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
1641:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             /* Find Maximum within Y centroid */
1642:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             #if (CapSense_CSD_IS_DIPLEX_SLIDER)
1643:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 maxY = CapSense_CSD_FindMaximum(offset, count, CapSense_CSD_fingerThreshold[widget 
1644:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             #else
1645:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 maxY = CapSense_CSD_FindMaximum(offset, count, CapSense_CSD_fingerThreshold[widget 
1646:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             #endif /* (CapSense_CSD_IS_DIPLEX_SLIDER) */
1647:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
1648:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             if (maxY != 0xFFu)
1649:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             {
1650:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 /* X and Y maximums are found = true touch */
1651:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 touch = 1u;
1652:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 
1653:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 /* Calculate Y centroid */
1654:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 posY = CapSense_CSD_CalcCentroid(maxY, offset, count, 
1655:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                             CapSense_CSD_centroidMult[widget + 1u], CapSense_CSD_noiseThreshold[wid
1656:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 
1657:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 /* Calculate X centroid */
1658:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 offset = CapSense_CSD_rawDataIndex[widget];
1659:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 count = CapSense_CSD_numberOfSensors[widget];
1660:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 
1661:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 posX = CapSense_CSD_CalcCentroid(maxX, offset, count, 
1662:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                             CapSense_CSD_centroidMult[widget],CapSense_CSD_noiseThreshold[widget]);
1663:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     
1664:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 #if (0u != CapSense_CSD_TOUCH_PADS_POS_FILTERS_MASK)
1665:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                     /* Check if this TP has enabled filters */
ARM GAS  C:\Users\sinow\AppData\Local\Temp\cczERXsC.s 			page 47


1666:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                     if (0u != (posFiltersMask & CapSense_CSD_ANY_POS_FILTER))
1667:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                     {
1668:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                         /* Caluclate position to store filters data */
1669:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                         posXIndex  = firstTimeIndex + 1u;
1670:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                         posYIndex  = CapSense_CSD_posFiltersData[widget + 1u];
1671:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                         
1672:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                         if (0u == CapSense_CSD_posFiltersData[firstTimeIndex])
1673:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                         {
1674:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                             /* Init filters */
1675:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                             CapSense_CSD_posFiltersData[posXIndex] = posX;
1676:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                             CapSense_CSD_posFiltersData[posYIndex] = posY;
1677:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
1678:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                             #if((0u != (CapSense_CSD_MEDIAN_FILTER & \
1679:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                         CapSense_CSD_TOUCH_PADS_POS_FILTERS_MASK))|| \
1680:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                 (0u != (CapSense_CSD_AVERAGING_FILTER & \
1681:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                         CapSense_CSD_TOUCH_PADS_POS_FILTERS_MASK)))
1682:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
1683:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                 if ( (0u != (posFiltersMask & CapSense_CSD_MEDIAN_FILTER)) || 
1684:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                      (0u != (posFiltersMask & CapSense_CSD_AVERAGING_FILTER)) )
1685:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                 {
1686:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                     CapSense_CSD_posFiltersData[posXIndex + 1u] = posX;
1687:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                     CapSense_CSD_posFiltersData[posYIndex + 1u] = posY;
1688:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                 }
1689:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                             #endif /* ((0u != (CapSense_CSD_MEDIAN_FILTER & \
1690:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                    *           CapSense_CSD_TOUCH_PADS_POS_FILTERS_MASK)) || \
1691:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                    *    (0u != (CapSense_CSD_AVERAGING_FILTER & \
1692:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                    *            CapSense_CSD_TOUCH_PADS_POS_FILTERS_MASK)))
1693:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                    */
1694:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                             
1695:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                             CapSense_CSD_posFiltersData[firstTimeIndex] = 1u;
1696:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                         }
1697:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                         else
1698:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                         {
1699:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                             /* Do filtering */
1700:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                             #if (0u != (CapSense_CSD_MEDIAN_FILTER & CapSense_CSD_TOUCH_PADS_POS_FI
1701:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                 if (0u != (posFiltersMask & CapSense_CSD_MEDIAN_FILTER))
1702:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                 {
1703:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                     tempPos = posX;
1704:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                     posX = (uint8) CapSense_CSD_MedianFilter(posX,
1705:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                                                       CapSense_CSD_posFiltersData[p
1706:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                                                       CapSense_CSD_posFiltersData[p
1707:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                     CapSense_CSD_posFiltersData[posXIndex + 1u] = 
1708:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                                                              CapSense_CSD_posFilter
1709:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                     CapSense_CSD_posFiltersData[posXIndex] = tempPos;
1710:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                     
1711:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                     tempPos = posY;
1712:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                     posY = (uint8) CapSense_CSD_MedianFilter(posY,
1713:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                                                        CapSense_CSD_posFiltersData[
1714:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                                                        CapSense_CSD_posFiltersData[
1715:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                     CapSense_CSD_posFiltersData[posYIndex + 1u] = 
1716:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                                                              CapSense_CSD_posFilter
1717:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                     CapSense_CSD_posFiltersData[posYIndex] = tempPos;
1718:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                 }
1719:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                 
1720:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                             #endif /* (0u != (CapSense_CSD_MEDIAN_FILTER & \
1721:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                    *          CapSense_CSD_TOUCH_PADS_POS_FILTERS_MASK))
1722:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                    */
ARM GAS  C:\Users\sinow\AppData\Local\Temp\cczERXsC.s 			page 48


1723:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
1724:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                             #if(0u !=(CapSense_CSD_AVERAGING_FILTER & CapSense_CSD_TOUCH_PADS_POS_F
1725:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                 if (0u != (posFiltersMask & CapSense_CSD_AVERAGING_FILTER))
1726:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                 {
1727:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                     tempPos = posX;
1728:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                     posX = (uint8) CapSense_CSD_AveragingFilter(posX,
1729:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                                                        CapSense_CSD_posFiltersData[
1730:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                                                        CapSense_CSD_posFiltersData[
1731:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                     CapSense_CSD_posFiltersData[posXIndex + 1u] = 
1732:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                                                              CapSense_CSD_posFilter
1733:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                     CapSense_CSD_posFiltersData[posXIndex] = tempPos;
1734:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                     
1735:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                     tempPos = posY;
1736:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                     posY = (uint8) CapSense_CSD_AveragingFilter(posY, 
1737:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                                                       CapSense_CSD_posFiltersData[p
1738:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                                                       CapSense_CSD_posFiltersData[p
1739:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                     CapSense_CSD_posFiltersData[posYIndex + 1u] = 
1740:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                                                             CapSense_CSD_posFilters
1741:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                     CapSense_CSD_posFiltersData[posYIndex] = tempPos;
1742:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                 }
1743:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
1744:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                             #endif /* (0u != (CapSense_CSD_AVERAGING_FILTER & \
1745:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                    *           CapSense_CSD_TOUCH_PADS_POS_FILTERS_MASK))
1746:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                    */
1747:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
1748:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                             #if (0u != (CapSense_CSD_IIR2_FILTER & CapSense_CSD_TOUCH_PADS_POS_FILT
1749:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                 if (0u != (posFiltersMask & CapSense_CSD_IIR2_FILTER))
1750:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                 {
1751:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                     posX = (uint8) CapSense_CSD_IIR2Filter(posX, 
1752:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                                                            CapSense_CSD_posFiltersD
1753:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                     CapSense_CSD_posFiltersData[posXIndex] = posX;
1754:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                     
1755:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                     posY = (uint8) CapSense_CSD_IIR2Filter(posY, 
1756:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                                                             CapSense_CSD_posFilters
1757:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                     CapSense_CSD_posFiltersData[posYIndex] = posY;
1758:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                 }
1759:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                 
1760:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                             #endif /* (0u != (CapSense_CSD_IIR2_FILTER & \
1761:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                    *          CapSense_CSD_TOUCH_PADS_POS_FILTERS_MASK))
1762:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                    */
1763:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
1764:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                             #if (0u != (CapSense_CSD_IIR4_FILTER & CapSense_CSD_TOUCH_PADS_POS_FILT
1765:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                 if (0u != (posFiltersMask & CapSense_CSD_IIR4_FILTER))
1766:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                 {
1767:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                     posX = (uint8) CapSense_CSD_IIR4Filter((uint16)posX,
1768:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                                                     (uint16)CapSense_CSD_posFilters
1769:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                     CapSense_CSD_posFiltersData[posXIndex] = posX;
1770:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
1771:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                     posY = (uint8) CapSense_CSD_IIR4Filter((uint16)posY,
1772:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                                                     (uint16)CapSense_CSD_posFilters
1773:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                     CapSense_CSD_posFiltersData[posYIndex] = posY;
1774:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                 }
1775:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                 
1776:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                             #endif /* (0u != (CapSense_CSD_IIR4_FILTER & \
1777:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                    *           CapSense_CSD_TOUCH_PADS_POS_FILTERS_MASK))
1778:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                    */
1779:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
ARM GAS  C:\Users\sinow\AppData\Local\Temp\cczERXsC.s 			page 49


1780:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                             #if (0u != (CapSense_CSD_JITTER_FILTER & CapSense_CSD_TOUCH_PADS_POS_FI
1781:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                 if (0u != (posFiltersMask & CapSense_CSD_JITTER_FILTER))
1782:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                     {
1783:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                         posX = (uint8) CapSense_CSD_JitterFilter(posX, 
1784:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                                                             CapSense_CSD_posFilters
1785:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                         CapSense_CSD_posFiltersData[posXIndex] = posX;
1786:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                         
1787:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                         posY = (uint8) CapSense_CSD_JitterFilter(posY, 
1788:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                                                             CapSense_CSD_posFilters
1789:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                         CapSense_CSD_posFiltersData[posYIndex] = posY;
1790:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                     }
1791:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                             #endif /* (0u != (CapSense_CSD_JITTER_FILTER & \
1792:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                    *           CapSense_CSD_TOUCH_PADS_POS_FILTERS_MASK))
1793:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                    */
1794:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                         }
1795:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                     }
1796:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 #endif /* (0u != CapSense_CSD_TOUCH_PADS_POS_FILTERS_MASK) */
1797:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
1798:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 /* Save positions */
1799:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 pos[0u] = posX;
1800:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 pos[1u] = posY;
1801:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             }
1802:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         }
1803:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
1804:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         #if (0u != CapSense_CSD_TOUCH_PADS_POS_FILTERS_MASK)
1805:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             if(touch == 0u)
1806:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             {
1807:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 /* Reset the filters */
1808:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 if ((posFiltersMask & CapSense_CSD_ANY_POS_FILTER) != 0u)
1809:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 {
1810:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                     CapSense_CSD_posFiltersData[firstTimeIndex] = 0u;
1811:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 }
1812:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             }
1813:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         #endif /* (0u != CapSense_CSD_TOUCH_PADS_POS_FILTERS_MASK) */
1814:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         
1815:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         return (touch);
1816:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     }
1817:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** #endif /* (CapSense_CSD_TOTAL_TOUCH_PADS_COUNT > 0u) */
1818:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
1819:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
1820:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** #if ( (CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_MEDIAN_FILTER) | \
1821:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****       (CapSense_CSD_POS_FILTERS_MASK & CapSense_CSD_MEDIAN_FILTER) )
1822:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     /*******************************************************************************
1823:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     * Function Name: CapSense_CSD_MedianFilter
1824:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     ********************************************************************************
1825:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *
1826:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     * Summary:
1827:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *  Median filter function. 
1828:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *  The median filter looks at the three most recent samples and reports the 
1829:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *  median value.
1830:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *
1831:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     * Parameters:
1832:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *  x1:  Current value.
1833:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *  x2:  Previous value.
1834:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *  x3:  Before previous value.
1835:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *
1836:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     * Return:
ARM GAS  C:\Users\sinow\AppData\Local\Temp\cczERXsC.s 			page 50


1837:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *  Returns filtered value.
1838:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *
1839:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *******************************************************************************/
1840:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     uint16 CapSense_CSD_MedianFilter(uint16 x1, uint16 x2, uint16 x3)
1841:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                          
1842:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     {
1843:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         uint16 tmp;
1844:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         
1845:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         if (x1 > x2)
1846:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         {
1847:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             tmp = x2;
1848:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             x2 = x1;
1849:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             x1 = tmp;
1850:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         }
1851:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         
1852:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         if (x2 > x3)
1853:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         {
1854:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             x2 = x3;
1855:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         }
1856:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         
1857:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         return ((x1 > x2) ? x1 : x2);
1858:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     }
1859:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** #endif /* ( (CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_MEDIAN_FILTER) | \
1860:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****        *    (CapSense_CSD_POS_FILTERS_MASK & CapSense_CSD_MEDIAN_FILTER) )
1861:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****        */
1862:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
1863:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
1864:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** #if ( (CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_AVERAGING_FILTER) | \
1865:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****       (CapSense_CSD_POS_FILTERS_MASK & CapSense_CSD_AVERAGING_FILTER) )
1866:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     /*******************************************************************************
1867:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     * Function Name: CapSense_CSD_AveragingFilter
1868:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     ********************************************************************************
1869:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *
1870:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     * Summary:
1871:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *  Averaging filter function.
1872:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *  The averaging filter looks at the three most recent samples of position and
1873:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *  reports the averaging value.
1874:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *
1875:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     * Parameters:
1876:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *  x1:  Current value.
1877:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *  x2:  Previous value.
1878:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *  x3:  Before previous value.
1879:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *
1880:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     * Return:
1881:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *  Returns filtered value.
1882:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *
1883:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *******************************************************************************/
1884:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     uint16 CapSense_CSD_AveragingFilter(uint16 x1, uint16 x2, uint16 x3)
1885:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                             
1886:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     {
1887:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         uint32 tmp = ((uint32)x1 + (uint32)x2 + (uint32)x3) / 3u;
1888:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         
1889:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         return ((uint16) tmp);
1890:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     }
1891:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** #endif /* ( (CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_AVERAGING_FILTER) | \
1892:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****        *    (CapSense_CSD_POS_FILTERS_MASK & CapSense_CSD_AVERAGING_FILTER) )
1893:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****        */
ARM GAS  C:\Users\sinow\AppData\Local\Temp\cczERXsC.s 			page 51


1894:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
1895:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
1896:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** #if ( (CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_IIR2_FILTER) | \
1897:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****       (CapSense_CSD_POS_FILTERS_MASK & CapSense_CSD_IIR2_FILTER) )
1898:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     /*******************************************************************************
1899:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     * Function Name: CapSense_CSD_IIR2Filter
1900:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     ********************************************************************************
1901:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *
1902:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     * Summary:
1903:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *  IIR1/2 filter function. IIR1/2 = 1/2current + 1/2previous.
1904:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *
1905:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     * Parameters:
1906:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *  x1:  Current value.
1907:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *  x2:  Previous value.
1908:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *
1909:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     * Return:
1910:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *  Returns filtered value.
1911:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *
1912:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *******************************************************************************/
1913:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     uint16 CapSense_CSD_IIR2Filter(uint16 x1, uint16 x2)
1914:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                        
1915:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     {
1916:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         uint32 tmp;
1917:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         
1918:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         /* IIR = 1/2 Current Value+ 1/2 Previous Value */
1919:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         tmp = (uint32)x1 + (uint32)x2;
1920:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         tmp >>= 1u;
1921:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     
1922:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         return ((uint16) tmp);
1923:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     }
1924:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** #endif /* ( (CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_IIR2_FILTER) | \
1925:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****        *    (CapSense_CSD_POS_FILTERS_MASK & CapSense_CSD_IIR2_FILTER) )
1926:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****        */
1927:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
1928:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
1929:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** #if ( (CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_IIR4_FILTER) | \
1930:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****       (CapSense_CSD_POS_FILTERS_MASK & CapSense_CSD_IIR4_FILTER) )
1931:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     /*******************************************************************************
1932:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     * Function Name: CapSense_CSD_IIR4Filter
1933:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     ********************************************************************************
1934:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *
1935:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     * Summary:
1936:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *  IIR1/4 filter function. IIR1/4 = 1/4current + 3/4previous.
1937:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *
1938:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     * Parameters:
1939:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *  x1:  Current value.
1940:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *  x2:  Previous value.
1941:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *
1942:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     * Return:
1943:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *  Returns filtered value.
1944:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *
1945:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *******************************************************************************/
1946:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     uint16 CapSense_CSD_IIR4Filter(uint16 x1, uint16 x2)
1947:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                        
1948:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     {
 942              		.loc 1 1948 0
 943              		.cfi_startproc
ARM GAS  C:\Users\sinow\AppData\Local\Temp\cczERXsC.s 			page 52


 944              		@ args = 0, pretend = 0, frame = 0
 945              		@ frame_needed = 0, uses_anonymous_args = 0
 946              		@ link register save eliminated.
 947              	.LVL118:
1949:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         uint32 tmp;
1950:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         
1951:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         /* IIR = 1/4 Current Value + 3/4 Previous Value */
1952:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         tmp = (uint32)x1 + (uint32)x2;
 948              		.loc 1 1952 0
 949 0000 0844     		add	r0, r0, r1
 950              	.LVL119:
1953:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         tmp += ((uint32)x2 << 1u);
 951              		.loc 1 1953 0
 952 0002 00EB4100 		add	r0, r0, r1, lsl #1
 953              	.LVL120:
1954:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         tmp >>= 2u;
1955:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         
1956:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         return ((uint16) tmp);
1957:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     }
 954              		.loc 1 1957 0
 955 0006 C0F38F00 		ubfx	r0, r0, #2, #16
 956              	.LVL121:
 957 000a 7047     		bx	lr
 958              		.cfi_endproc
 959              	.LFE14:
 960              		.size	CapSense_CSD_IIR4Filter, .-CapSense_CSD_IIR4Filter
 961              		.section	.text.CapSense_CSD_GetCentroidPos,"ax",%progbits
 962              		.align	2
 963              		.global	CapSense_CSD_GetCentroidPos
 964              		.thumb
 965              		.thumb_func
 966              		.type	CapSense_CSD_GetCentroidPos, %function
 967              	CapSense_CSD_GetCentroidPos:
 968              	.LFB13:
1213:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         #if (CapSense_CSD_IS_DIPLEX_SLIDER)
 969              		.loc 1 1213 0
 970              		.cfi_startproc
 971              		@ args = 0, pretend = 0, frame = 0
 972              		@ frame_needed = 0, uses_anonymous_args = 0
 973              	.LVL122:
 974 0000 30B5     		push	{r4, r5, lr}
 975              		.cfi_def_cfa_offset 12
 976              		.cfi_offset 4, -12
 977              		.cfi_offset 5, -8
 978              		.cfi_offset 14, -4
 979 0002 83B0     		sub	sp, sp, #12
 980              		.cfi_def_cfa_offset 24
1220:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             uint8 posFiltersMask = CapSense_CSD_posFiltersMask[widget];  
 981              		.loc 1 1220 0
 982 0004 144B     		ldr	r3, .L93
 983 0006 1C5C     		ldrb	r4, [r3, r0]	@ zero_extendqisi2
 984              	.LVL123:
1252:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         #endif /* (CapSense_CSD_IS_DIPLEX_SLIDER) */
 985              		.loc 1 1252 0
 986 0008 5422     		movs	r2, #84
 987 000a 0521     		movs	r1, #5
 988 000c 0020     		movs	r0, #0
ARM GAS  C:\Users\sinow\AppData\Local\Temp\cczERXsC.s 			page 53


 989              	.LVL124:
 990 000e FFF7FEFF 		bl	CapSense_CSD_FindMaximum
 991              	.LVL125:
1255:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         {
 992              		.loc 1 1255 0
 993 0012 FF28     		cmp	r0, #255
 994 0014 19D0     		beq	.L89
1258:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                          offset, count, CapSense_CSD_centroidMult[widget], CapSense_CSD_noiseThresh
 995              		.loc 1 1258 0
 996 0016 2A23     		movs	r3, #42
 997 0018 0093     		str	r3, [sp]
 998 001a 4FF4C853 		mov	r3, #6400
 999 001e 0522     		movs	r2, #5
 1000 0020 0021     		movs	r1, #0
 1001 0022 FFF7FEFF 		bl	CapSense_CSD_CalcCentroid
 1002              	.LVL126:
 1003 0026 0346     		mov	r3, r0
 1004 0028 80B2     		uxth	r0, r0
 1005              	.LVL127:
1266:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                     
 1006              		.loc 1 1266 0
 1007 002a 651C     		adds	r5, r4, #1
 1008 002c EDB2     		uxtb	r5, r5
 1009              	.LVL128:
1268:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                     {
 1010              		.loc 1 1268 0
 1011 002e 0A4A     		ldr	r2, .L93
 1012 0030 125D     		ldrb	r2, [r2, r4]	@ zero_extendqisi2
 1013 0032 22B9     		cbnz	r2, .L90
1271:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                         #if ((0u != (CapSense_CSD_MEDIAN_FILTER & \
 1014              		.loc 1 1271 0
 1015 0034 084A     		ldr	r2, .L93
 1016 0036 5355     		strb	r3, [r2, r5]
1288:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                     }
 1017              		.loc 1 1288 0
 1018 0038 0123     		movs	r3, #1
 1019 003a 1355     		strb	r3, [r2, r4]
 1020 003c 0AE0     		b	.L91
 1021              	.L90:
1337:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                 CapSense_CSD_posFiltersData[posIndex] = (uint8) position;
 1022              		.loc 1 1337 0
 1023 003e 064C     		ldr	r4, .L93
 1024              	.LVL129:
1336:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                                                     (uint16)CapSense_CSD_posFilters
 1025              		.loc 1 1336 0
 1026 0040 615D     		ldrb	r1, [r4, r5]	@ zero_extendqisi2
 1027 0042 FFF7FEFF 		bl	CapSense_CSD_IIR4Filter
 1028              	.LVL130:
1338:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                             }                                
 1029              		.loc 1 1338 0
 1030 0046 6055     		strb	r0, [r4, r5]
 1031 0048 04E0     		b	.L91
 1032              	.LVL131:
 1033              	.L89:
1368:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 }
 1034              		.loc 1 1368 0
 1035 004a 0022     		movs	r2, #0
ARM GAS  C:\Users\sinow\AppData\Local\Temp\cczERXsC.s 			page 54


 1036 004c 024B     		ldr	r3, .L93
 1037 004e 1A55     		strb	r2, [r3, r4]
1362:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
 1038              		.loc 1 1362 0
 1039 0050 4FF6FF70 		movw	r0, #65535
 1040              	.LVL132:
 1041              	.L91:
1375:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** #endif /* (CapSense_CSD_TOTAL_LINEAR_SLIDERS_COUNT > 0u) */
 1042              		.loc 1 1375 0
 1043 0054 03B0     		add	sp, sp, #12
 1044              		.cfi_def_cfa_offset 12
 1045              		@ sp needed
 1046 0056 30BD     		pop	{r4, r5, pc}
 1047              	.L94:
 1048              		.align	2
 1049              	.L93:
 1050 0058 00000000 		.word	.LANCHOR1
 1051              		.cfi_endproc
 1052              	.LFE13:
 1053              		.size	CapSense_CSD_GetCentroidPos, .-CapSense_CSD_GetCentroidPos
 1054              		.global	CapSense_CSD_posFiltersData
 1055              		.global	CapSense_CSD_posFiltersMask
 1056              		.global	CapSense_CSD_centroidMult
 1057              		.global	CapSense_CSD_numberOfSensors
 1058              		.global	CapSense_CSD_rawDataIndex
 1059              		.global	CapSense_CSD_debounceCounter
 1060              		.global	CapSense_CSD_debounce
 1061              		.global	CapSense_CSD_hysteresis
 1062              		.global	CapSense_CSD_noiseThreshold
 1063              		.global	CapSense_CSD_fingerThreshold
 1064              		.comm	CapSense_CSD_lowBaselineResetCnt,5,4
 1065              		.comm	CapSense_CSD_sensorOnMask,1,4
 1066              		.comm	CapSense_CSD_sensorSignal,10,4
 1067              		.comm	CapSense_CSD_sensorBaselineLow,5,4
 1068              		.comm	CapSense_CSD_sensorBaseline,10,4
 1069              		.section	.rodata
 1070              		.align	2
 1071              		.type	CapSense_CSD_posFiltersMask, %object
 1072              		.size	CapSense_CSD_posFiltersMask, 1
 1073              	CapSense_CSD_posFiltersMask:
 1074 0000 08       		.byte	8
 1075 0001 000000   		.space	3
 1076              		.type	CapSense_CSD_centroidMult, %object
 1077              		.size	CapSense_CSD_centroidMult, 2
 1078              	CapSense_CSD_centroidMult:
 1079 0004 0019     		.short	6400
 1080 0006 0000     		.space	2
 1081              		.type	CapSense_CSD_numberOfSensors, %object
 1082              		.size	CapSense_CSD_numberOfSensors, 1
 1083              	CapSense_CSD_numberOfSensors:
 1084 0008 05       		.byte	5
 1085 0009 000000   		.space	3
 1086              		.type	CapSense_CSD_rawDataIndex, %object
 1087              		.size	CapSense_CSD_rawDataIndex, 1
 1088              	CapSense_CSD_rawDataIndex:
 1089 000c 00       		.space	1
 1090 000d 000000   		.space	3
ARM GAS  C:\Users\sinow\AppData\Local\Temp\cczERXsC.s 			page 55


 1091              		.type	CapSense_CSD_debounce, %object
 1092              		.size	CapSense_CSD_debounce, 1
 1093              	CapSense_CSD_debounce:
 1094 0010 01       		.byte	1
 1095 0011 000000   		.space	3
 1096              		.type	CapSense_CSD_hysteresis, %object
 1097              		.size	CapSense_CSD_hysteresis, 2
 1098              	CapSense_CSD_hysteresis:
 1099 0014 0000     		.space	2
 1100 0016 0000     		.space	2
 1101              		.type	CapSense_CSD_noiseThreshold, %object
 1102              		.size	CapSense_CSD_noiseThreshold, 2
 1103              	CapSense_CSD_noiseThreshold:
 1104 0018 2A00     		.short	42
 1105 001a 0000     		.space	2
 1106              		.type	CapSense_CSD_fingerThreshold, %object
 1107              		.size	CapSense_CSD_fingerThreshold, 2
 1108              	CapSense_CSD_fingerThreshold:
 1109 001c 5400     		.short	84
 1110              		.data
 1111              		.align	2
 1112              		.set	.LANCHOR1,. + 0
 1113              		.type	CapSense_CSD_posFiltersData, %object
 1114              		.size	CapSense_CSD_posFiltersData, 3
 1115              	CapSense_CSD_posFiltersData:
 1116 0000 01       		.byte	1
 1117 0001 00       		.byte	0
 1118 0002 00       		.byte	0
 1119              		.bss
 1120              		.align	2
 1121              		.set	.LANCHOR0,. + 0
 1122              		.type	CapSense_CSD_debounceCounter, %object
 1123              		.size	CapSense_CSD_debounceCounter, 1
 1124              	CapSense_CSD_debounceCounter:
 1125 0000 00       		.space	1
 1126 0001 000000   		.space	3
 1127              		.type	CapSense_CSD_centroid.5269, %object
 1128              		.size	CapSense_CSD_centroid.5269, 6
 1129              	CapSense_CSD_centroid.5269:
 1130 0004 00000000 		.space	6
 1130      0000
 1131              		.text
 1132              	.Letext0:
 1133              		.file 2 "Generated_Source\\PSoC5\\cytypes.h"
 1134              		.file 3 "Generated_Source\\PSoC5\\CapSense_CSD.h"
 1135              		.file 4 "Generated_Source\\PSoC5\\CapSense_CSD_CSHL.h"
 1136              		.section	.debug_info,"",%progbits
 1137              	.Ldebug_info0:
 1138 0000 30090000 		.4byte	0x930
 1139 0004 0400     		.2byte	0x4
 1140 0006 00000000 		.4byte	.Ldebug_abbrev0
 1141 000a 04       		.byte	0x4
 1142 000b 01       		.uleb128 0x1
 1143 000c 82040000 		.4byte	.LASF85
 1144 0010 0C       		.byte	0xc
 1145 0011 00000000 		.4byte	.LASF86
 1146 0015 06040000 		.4byte	.LASF87
ARM GAS  C:\Users\sinow\AppData\Local\Temp\cczERXsC.s 			page 56


 1147 0019 00000000 		.4byte	.Ldebug_ranges0+0
 1148 001d 00000000 		.4byte	0
 1149 0021 00000000 		.4byte	.Ldebug_line0
 1150 0025 02       		.uleb128 0x2
 1151 0026 01       		.byte	0x1
 1152 0027 06       		.byte	0x6
 1153 0028 EE000000 		.4byte	.LASF0
 1154 002c 02       		.uleb128 0x2
 1155 002d 01       		.byte	0x1
 1156 002e 08       		.byte	0x8
 1157 002f 4D040000 		.4byte	.LASF1
 1158 0033 02       		.uleb128 0x2
 1159 0034 02       		.byte	0x2
 1160 0035 05       		.byte	0x5
 1161 0036 6A040000 		.4byte	.LASF2
 1162 003a 02       		.uleb128 0x2
 1163 003b 02       		.byte	0x2
 1164 003c 07       		.byte	0x7
 1165 003d 8A020000 		.4byte	.LASF3
 1166 0041 02       		.uleb128 0x2
 1167 0042 04       		.byte	0x4
 1168 0043 05       		.byte	0x5
 1169 0044 4F010000 		.4byte	.LASF4
 1170 0048 02       		.uleb128 0x2
 1171 0049 04       		.byte	0x4
 1172 004a 07       		.byte	0x7
 1173 004b 48020000 		.4byte	.LASF5
 1174 004f 02       		.uleb128 0x2
 1175 0050 08       		.byte	0x8
 1176 0051 05       		.byte	0x5
 1177 0052 E0000000 		.4byte	.LASF6
 1178 0056 02       		.uleb128 0x2
 1179 0057 08       		.byte	0x8
 1180 0058 07       		.byte	0x7
 1181 0059 A2000000 		.4byte	.LASF7
 1182 005d 03       		.uleb128 0x3
 1183 005e 04       		.byte	0x4
 1184 005f 05       		.byte	0x5
 1185 0060 696E7400 		.ascii	"int\000"
 1186 0064 02       		.uleb128 0x2
 1187 0065 04       		.byte	0x4
 1188 0066 07       		.byte	0x7
 1189 0067 32020000 		.4byte	.LASF8
 1190 006b 04       		.uleb128 0x4
 1191 006c 88010000 		.4byte	.LASF9
 1192 0070 02       		.byte	0x2
 1193 0071 E401     		.2byte	0x1e4
 1194 0073 2C000000 		.4byte	0x2c
 1195 0077 04       		.uleb128 0x4
 1196 0078 4D000000 		.4byte	.LASF10
 1197 007c 02       		.byte	0x2
 1198 007d E501     		.2byte	0x1e5
 1199 007f 3A000000 		.4byte	0x3a
 1200 0083 04       		.uleb128 0x4
 1201 0084 95010000 		.4byte	.LASF11
 1202 0088 02       		.byte	0x2
 1203 0089 E601     		.2byte	0x1e6
ARM GAS  C:\Users\sinow\AppData\Local\Temp\cczERXsC.s 			page 57


 1204 008b 48000000 		.4byte	0x48
 1205 008f 04       		.uleb128 0x4
 1206 0090 8C060000 		.4byte	.LASF12
 1207 0094 02       		.byte	0x2
 1208 0095 E801     		.2byte	0x1e8
 1209 0097 33000000 		.4byte	0x33
 1210 009b 04       		.uleb128 0x4
 1211 009c 22010000 		.4byte	.LASF13
 1212 00a0 02       		.byte	0x2
 1213 00a1 E901     		.2byte	0x1e9
 1214 00a3 41000000 		.4byte	0x41
 1215 00a7 02       		.uleb128 0x2
 1216 00a8 04       		.byte	0x4
 1217 00a9 04       		.byte	0x4
 1218 00aa 9E030000 		.4byte	.LASF14
 1219 00ae 02       		.uleb128 0x2
 1220 00af 08       		.byte	0x8
 1221 00b0 04       		.byte	0x4
 1222 00b1 8E010000 		.4byte	.LASF15
 1223 00b5 02       		.uleb128 0x2
 1224 00b6 01       		.byte	0x1
 1225 00b7 08       		.byte	0x8
 1226 00b8 BD050000 		.4byte	.LASF16
 1227 00bc 02       		.uleb128 0x2
 1228 00bd 08       		.byte	0x8
 1229 00be 04       		.byte	0x4
 1230 00bf 12030000 		.4byte	.LASF17
 1231 00c3 02       		.uleb128 0x2
 1232 00c4 04       		.byte	0x4
 1233 00c5 07       		.byte	0x7
 1234 00c6 09030000 		.4byte	.LASF18
 1235 00ca 05       		.uleb128 0x5
 1236 00cb CF010000 		.4byte	.LASF19
 1237 00cf 01       		.byte	0x1
 1238 00d0 85       		.byte	0x85
 1239 00d1 00000000 		.4byte	.LFB0
 1240 00d5 2C000000 		.4byte	.LFE0-.LFB0
 1241 00d9 01       		.uleb128 0x1
 1242 00da 9C       		.byte	0x9c
 1243 00db ED000000 		.4byte	0xed
 1244 00df 06       		.uleb128 0x6
 1245 00e0 9D020000 		.4byte	.LASF21
 1246 00e4 01       		.byte	0x1
 1247 00e5 85       		.byte	0x85
 1248 00e6 6B000000 		.4byte	0x6b
 1249 00ea 01       		.uleb128 0x1
 1250 00eb 50       		.byte	0x50
 1251 00ec 00       		.byte	0
 1252 00ed 05       		.uleb128 0x5
 1253 00ee 74000000 		.4byte	.LASF20
 1254 00f2 01       		.byte	0x1
 1255 00f3 CD       		.byte	0xcd
 1256 00f4 00000000 		.4byte	.LFB1
 1257 00f8 18000000 		.4byte	.LFE1-.LFB1
 1258 00fc 01       		.uleb128 0x1
 1259 00fd 9C       		.byte	0x9c
 1260 00fe 3F010000 		.4byte	0x13f
ARM GAS  C:\Users\sinow\AppData\Local\Temp\cczERXsC.s 			page 58


 1261 0102 07       		.uleb128 0x7
 1262 0103 9D020000 		.4byte	.LASF21
 1263 0107 01       		.byte	0x1
 1264 0108 CD       		.byte	0xcd
 1265 0109 6B000000 		.4byte	0x6b
 1266 010d 00000000 		.4byte	.LLST0
 1267 0111 08       		.uleb128 0x8
 1268 0112 08000000 		.4byte	.LVL2
 1269 0116 12090000 		.4byte	0x912
 1270 011a 25010000 		.4byte	0x125
 1271 011e 09       		.uleb128 0x9
 1272 011f 01       		.uleb128 0x1
 1273 0120 50       		.byte	0x50
 1274 0121 02       		.uleb128 0x2
 1275 0122 74       		.byte	0x74
 1276 0123 00       		.sleb128 0
 1277 0124 00       		.byte	0
 1278 0125 0A       		.uleb128 0xa
 1279 0126 0C000000 		.4byte	.LVL3
 1280 012a 1D090000 		.4byte	0x91d
 1281 012e 0B       		.uleb128 0xb
 1282 012f 16000000 		.4byte	.LVL4
 1283 0133 CA000000 		.4byte	0xca
 1284 0137 09       		.uleb128 0x9
 1285 0138 01       		.uleb128 0x1
 1286 0139 50       		.byte	0x50
 1287 013a 02       		.uleb128 0x2
 1288 013b 74       		.byte	0x74
 1289 013c 00       		.sleb128 0
 1290 013d 00       		.byte	0
 1291 013e 00       		.byte	0
 1292 013f 0C       		.uleb128 0xc
 1293 0140 C5030000 		.4byte	.LASF22
 1294 0144 01       		.byte	0x1
 1295 0145 0101     		.2byte	0x101
 1296 0147 00000000 		.4byte	.LFB2
 1297 014b 16000000 		.4byte	.LFE2-.LFB2
 1298 014f 01       		.uleb128 0x1
 1299 0150 9C       		.byte	0x9c
 1300 0151 74010000 		.4byte	0x174
 1301 0155 0D       		.uleb128 0xd
 1302 0156 6900     		.ascii	"i\000"
 1303 0158 01       		.byte	0x1
 1304 0159 0401     		.2byte	0x104
 1305 015b 6B000000 		.4byte	0x6b
 1306 015f 21000000 		.4byte	.LLST1
 1307 0163 0B       		.uleb128 0xb
 1308 0164 0C000000 		.4byte	.LVL7
 1309 0168 ED000000 		.4byte	0xed
 1310 016c 09       		.uleb128 0x9
 1311 016d 01       		.uleb128 0x1
 1312 016e 50       		.byte	0x50
 1313 016f 02       		.uleb128 0x2
 1314 0170 74       		.byte	0x74
 1315 0171 00       		.sleb128 0
 1316 0172 00       		.byte	0
 1317 0173 00       		.byte	0
ARM GAS  C:\Users\sinow\AppData\Local\Temp\cczERXsC.s 			page 59


 1318 0174 0C       		.uleb128 0xc
 1319 0175 1E030000 		.4byte	.LASF23
 1320 0179 01       		.byte	0x1
 1321 017a 2201     		.2byte	0x122
 1322 017c 00000000 		.4byte	.LFB3
 1323 0180 44000000 		.4byte	.LFE3-.LFB3
 1324 0184 01       		.uleb128 0x1
 1325 0185 9C       		.byte	0x9c
 1326 0186 D9010000 		.4byte	0x1d9
 1327 018a 0D       		.uleb128 0xd
 1328 018b 6900     		.ascii	"i\000"
 1329 018d 01       		.byte	0x1
 1330 018e 2501     		.2byte	0x125
 1331 0190 6B000000 		.4byte	0x6b
 1332 0194 4B000000 		.4byte	.LLST2
 1333 0198 0E       		.uleb128 0xe
 1334 0199 706F7300 		.ascii	"pos\000"
 1335 019d 01       		.byte	0x1
 1336 019e 2601     		.2byte	0x126
 1337 01a0 6B000000 		.4byte	0x6b
 1338 01a4 01       		.uleb128 0x1
 1339 01a5 52       		.byte	0x52
 1340 01a6 0F       		.uleb128 0xf
 1341 01a7 60030000 		.4byte	.LASF24
 1342 01ab 01       		.byte	0x1
 1343 01ac 2701     		.2byte	0x127
 1344 01ae 6B000000 		.4byte	0x6b
 1345 01b2 69000000 		.4byte	.LLST3
 1346 01b6 0A       		.uleb128 0xa
 1347 01b7 06000000 		.4byte	.LVL10
 1348 01bb 28090000 		.4byte	0x928
 1349 01bf 0A       		.uleb128 0xa
 1350 01c0 0A000000 		.4byte	.LVL11
 1351 01c4 1D090000 		.4byte	0x91d
 1352 01c8 0B       		.uleb128 0xb
 1353 01c9 32000000 		.4byte	.LVL15
 1354 01cd CA000000 		.4byte	0xca
 1355 01d1 09       		.uleb128 0x9
 1356 01d2 01       		.uleb128 0x1
 1357 01d3 50       		.byte	0x50
 1358 01d4 02       		.uleb128 0x2
 1359 01d5 74       		.byte	0x74
 1360 01d6 00       		.sleb128 0
 1361 01d7 00       		.byte	0
 1362 01d8 00       		.byte	0
 1363 01d9 0C       		.uleb128 0xc
 1364 01da 57050000 		.4byte	.LASF25
 1365 01de 01       		.byte	0x1
 1366 01df 6501     		.2byte	0x165
 1367 01e1 00000000 		.4byte	.LFB4
 1368 01e5 9C000000 		.4byte	.LFE4-.LFB4
 1369 01e9 01       		.uleb128 0x1
 1370 01ea 9C       		.byte	0x9c
 1371 01eb 5D020000 		.4byte	0x25d
 1372 01ef 10       		.uleb128 0x10
 1373 01f0 9D020000 		.4byte	.LASF21
 1374 01f4 01       		.byte	0x1
ARM GAS  C:\Users\sinow\AppData\Local\Temp\cczERXsC.s 			page 60


 1375 01f5 6501     		.2byte	0x165
 1376 01f7 6B000000 		.4byte	0x6b
 1377 01fb 9E000000 		.4byte	.LLST4
 1378 01ff 0F       		.uleb128 0xf
 1379 0200 BE020000 		.4byte	.LASF26
 1380 0204 01       		.byte	0x1
 1381 0205 6801     		.2byte	0x168
 1382 0207 83000000 		.4byte	0x83
 1383 020b D8000000 		.4byte	.LLST5
 1384 020f 0F       		.uleb128 0xf
 1385 0210 CE060000 		.4byte	.LASF27
 1386 0214 01       		.byte	0x1
 1387 0215 6901     		.2byte	0x169
 1388 0217 77000000 		.4byte	0x77
 1389 021b 05010000 		.4byte	.LLST6
 1390 021f 0F       		.uleb128 0xf
 1391 0220 54000000 		.4byte	.LASF28
 1392 0224 01       		.byte	0x1
 1393 0225 6A01     		.2byte	0x16a
 1394 0227 77000000 		.4byte	0x77
 1395 022b 23010000 		.4byte	.LLST7
 1396 022f 0F       		.uleb128 0xf
 1397 0230 74040000 		.4byte	.LASF29
 1398 0234 01       		.byte	0x1
 1399 0235 6B01     		.2byte	0x16b
 1400 0237 6B000000 		.4byte	0x6b
 1401 023b 41010000 		.4byte	.LLST8
 1402 023f 11       		.uleb128 0x11
 1403 0240 5B040000 		.4byte	.LASF30
 1404 0244 01       		.byte	0x1
 1405 0245 6C01     		.2byte	0x16c
 1406 0247 77000000 		.4byte	0x77
 1407 024b 2A       		.byte	0x2a
 1408 024c 0B       		.uleb128 0xb
 1409 024d 36000000 		.4byte	.LVL28
 1410 0251 CA000000 		.4byte	0xca
 1411 0255 09       		.uleb128 0x9
 1412 0256 01       		.uleb128 0x1
 1413 0257 50       		.byte	0x50
 1414 0258 02       		.uleb128 0x2
 1415 0259 74       		.byte	0x74
 1416 025a 00       		.sleb128 0
 1417 025b 00       		.byte	0
 1418 025c 00       		.byte	0
 1419 025d 0C       		.uleb128 0xc
 1420 025e DC050000 		.4byte	.LASF31
 1421 0262 01       		.byte	0x1
 1422 0263 1202     		.2byte	0x212
 1423 0265 00000000 		.4byte	.LFB5
 1424 0269 2C000000 		.4byte	.LFE5-.LFB5
 1425 026d 01       		.uleb128 0x1
 1426 026e 9C       		.byte	0x9c
 1427 026f B0020000 		.4byte	0x2b0
 1428 0273 0D       		.uleb128 0xd
 1429 0274 6900     		.ascii	"i\000"
 1430 0276 01       		.byte	0x1
 1431 0277 1502     		.2byte	0x215
ARM GAS  C:\Users\sinow\AppData\Local\Temp\cczERXsC.s 			page 61


 1432 0279 6B000000 		.4byte	0x6b
 1433 027d 6C010000 		.4byte	.LLST9
 1434 0281 0E       		.uleb128 0xe
 1435 0282 706F7300 		.ascii	"pos\000"
 1436 0286 01       		.byte	0x1
 1437 0287 1602     		.2byte	0x216
 1438 0289 6B000000 		.4byte	0x6b
 1439 028d 01       		.uleb128 0x1
 1440 028e 52       		.byte	0x52
 1441 028f 0F       		.uleb128 0xf
 1442 0290 60030000 		.4byte	.LASF24
 1443 0294 01       		.byte	0x1
 1444 0295 1702     		.2byte	0x217
 1445 0297 6B000000 		.4byte	0x6b
 1446 029b 96010000 		.4byte	.LLST10
 1447 029f 0B       		.uleb128 0xb
 1448 02a0 1E000000 		.4byte	.LVL43
 1449 02a4 D9010000 		.4byte	0x1d9
 1450 02a8 09       		.uleb128 0x9
 1451 02a9 01       		.uleb128 0x1
 1452 02aa 50       		.byte	0x50
 1453 02ab 02       		.uleb128 0x2
 1454 02ac 74       		.byte	0x74
 1455 02ad 00       		.sleb128 0
 1456 02ae 00       		.byte	0
 1457 02af 00       		.byte	0
 1458 02b0 12       		.uleb128 0x12
 1459 02b1 28010000 		.4byte	.LASF37
 1460 02b5 01       		.byte	0x1
 1461 02b6 4C02     		.2byte	0x24c
 1462 02b8 6B000000 		.4byte	0x6b
 1463 02bc 00000000 		.4byte	.LFB6
 1464 02c0 60000000 		.4byte	.LFE6-.LFB6
 1465 02c4 01       		.uleb128 0x1
 1466 02c5 9C       		.byte	0x9c
 1467 02c6 37030000 		.4byte	0x337
 1468 02ca 10       		.uleb128 0x10
 1469 02cb 9D020000 		.4byte	.LASF21
 1470 02cf 01       		.byte	0x1
 1471 02d0 4C02     		.2byte	0x24c
 1472 02d2 6B000000 		.4byte	0x6b
 1473 02d6 CB010000 		.4byte	.LLST11
 1474 02da 11       		.uleb128 0x11
 1475 02db 39060000 		.4byte	.LASF32
 1476 02df 01       		.byte	0x1
 1477 02e0 4F02     		.2byte	0x24f
 1478 02e2 6B000000 		.4byte	0x6b
 1479 02e6 00       		.byte	0
 1480 02e7 0E       		.uleb128 0xe
 1481 02e8 706F7300 		.ascii	"pos\000"
 1482 02ec 01       		.byte	0x1
 1483 02ed 5102     		.2byte	0x251
 1484 02ef 6B000000 		.4byte	0x6b
 1485 02f3 01       		.uleb128 0x1
 1486 02f4 52       		.byte	0x52
 1487 02f5 13       		.uleb128 0x13
 1488 02f6 7B040000 		.4byte	.LASF33
ARM GAS  C:\Users\sinow\AppData\Local\Temp\cczERXsC.s 			page 62


 1489 02fa 01       		.byte	0x1
 1490 02fb 5202     		.2byte	0x252
 1491 02fd 6B000000 		.4byte	0x6b
 1492 0301 01       		.uleb128 0x1
 1493 0302 53       		.byte	0x53
 1494 0303 14       		.uleb128 0x14
 1495 0304 74040000 		.4byte	.LASF29
 1496 0308 01       		.byte	0x1
 1497 0309 5402     		.2byte	0x254
 1498 030b 6B000000 		.4byte	0x6b
 1499 030f 11       		.uleb128 0x11
 1500 0310 64000000 		.4byte	.LASF34
 1501 0314 01       		.byte	0x1
 1502 0315 5502     		.2byte	0x255
 1503 0317 77000000 		.4byte	0x77
 1504 031b 54       		.byte	0x54
 1505 031c 11       		.uleb128 0x11
 1506 031d BC010000 		.4byte	.LASF35
 1507 0321 01       		.byte	0x1
 1508 0322 5602     		.2byte	0x256
 1509 0324 77000000 		.4byte	0x77
 1510 0328 00       		.byte	0
 1511 0329 11       		.uleb128 0x11
 1512 032a 00030000 		.4byte	.LASF36
 1513 032e 01       		.byte	0x1
 1514 032f 5702     		.2byte	0x257
 1515 0331 6B000000 		.4byte	0x6b
 1516 0335 01       		.byte	0x1
 1517 0336 00       		.byte	0
 1518 0337 12       		.uleb128 0x12
 1519 0338 6B060000 		.4byte	.LASF38
 1520 033c 01       		.byte	0x1
 1521 033d 9502     		.2byte	0x295
 1522 033f 6B000000 		.4byte	0x6b
 1523 0343 00000000 		.4byte	.LFB7
 1524 0347 1C000000 		.4byte	.LFE7-.LFB7
 1525 034b 01       		.uleb128 0x1
 1526 034c 9C       		.byte	0x9c
 1527 034d 9F030000 		.4byte	0x39f
 1528 0351 10       		.uleb128 0x10
 1529 0352 74040000 		.4byte	.LASF29
 1530 0356 01       		.byte	0x1
 1531 0357 9502     		.2byte	0x295
 1532 0359 6B000000 		.4byte	0x6b
 1533 035d 05020000 		.4byte	.LLST12
 1534 0361 0F       		.uleb128 0xf
 1535 0362 09010000 		.4byte	.LASF39
 1536 0366 01       		.byte	0x1
 1537 0367 9802     		.2byte	0x298
 1538 0369 6B000000 		.4byte	0x6b
 1539 036d 26020000 		.4byte	.LLST13
 1540 0371 11       		.uleb128 0x11
 1541 0372 12010000 		.4byte	.LASF40
 1542 0376 01       		.byte	0x1
 1543 0377 9902     		.2byte	0x299
 1544 0379 6B000000 		.4byte	0x6b
 1545 037d 05       		.byte	0x5
ARM GAS  C:\Users\sinow\AppData\Local\Temp\cczERXsC.s 			page 63


 1546 037e 0F       		.uleb128 0xf
 1547 037f 49010000 		.4byte	.LASF41
 1548 0383 01       		.byte	0x1
 1549 0384 9A02     		.2byte	0x29a
 1550 0386 6B000000 		.4byte	0x6b
 1551 038a 50020000 		.4byte	.LLST14
 1552 038e 0B       		.uleb128 0xb
 1553 038f 0C000000 		.4byte	.LVL56
 1554 0393 B0020000 		.4byte	0x2b0
 1555 0397 09       		.uleb128 0x9
 1556 0398 01       		.uleb128 0x1
 1557 0399 50       		.byte	0x50
 1558 039a 02       		.uleb128 0x2
 1559 039b 74       		.byte	0x74
 1560 039c 00       		.sleb128 0
 1561 039d 00       		.byte	0
 1562 039e 00       		.byte	0
 1563 039f 12       		.uleb128 0x12
 1564 03a0 47060000 		.4byte	.LASF42
 1565 03a4 01       		.byte	0x1
 1566 03a5 C102     		.2byte	0x2c1
 1567 03a7 6B000000 		.4byte	0x6b
 1568 03ab 00000000 		.4byte	.LFB8
 1569 03af 1E000000 		.4byte	.LFE8-.LFB8
 1570 03b3 01       		.uleb128 0x1
 1571 03b4 9C       		.byte	0x9c
 1572 03b5 E8030000 		.4byte	0x3e8
 1573 03b9 0D       		.uleb128 0xd
 1574 03ba 6900     		.ascii	"i\000"
 1575 03bc 01       		.byte	0x1
 1576 03bd C402     		.2byte	0x2c4
 1577 03bf 6B000000 		.4byte	0x6b
 1578 03c3 6F020000 		.4byte	.LLST15
 1579 03c7 0F       		.uleb128 0xf
 1580 03c8 49010000 		.4byte	.LASF41
 1581 03cc 01       		.byte	0x1
 1582 03cd C502     		.2byte	0x2c5
 1583 03cf 6B000000 		.4byte	0x6b
 1584 03d3 99020000 		.4byte	.LLST16
 1585 03d7 0B       		.uleb128 0xb
 1586 03d8 0E000000 		.4byte	.LVL62
 1587 03dc 37030000 		.4byte	0x337
 1588 03e0 09       		.uleb128 0x9
 1589 03e1 01       		.uleb128 0x1
 1590 03e2 50       		.byte	0x50
 1591 03e3 02       		.uleb128 0x2
 1592 03e4 74       		.byte	0x74
 1593 03e5 00       		.sleb128 0
 1594 03e6 00       		.byte	0
 1595 03e7 00       		.byte	0
 1596 03e8 0C       		.uleb128 0xc
 1597 03e9 C2050000 		.4byte	.LASF43
 1598 03ed 01       		.byte	0x1
 1599 03ee EF02     		.2byte	0x2ef
 1600 03f0 00000000 		.4byte	.LFB9
 1601 03f4 28000000 		.4byte	.LFE9-.LFB9
 1602 03f8 01       		.uleb128 0x1
ARM GAS  C:\Users\sinow\AppData\Local\Temp\cczERXsC.s 			page 64


 1603 03f9 9C       		.byte	0x9c
 1604 03fa 4A040000 		.4byte	0x44a
 1605 03fe 10       		.uleb128 0x10
 1606 03ff 74040000 		.4byte	.LASF29
 1607 0403 01       		.byte	0x1
 1608 0404 EF02     		.2byte	0x2ef
 1609 0406 6B000000 		.4byte	0x6b
 1610 040a B8020000 		.4byte	.LLST17
 1611 040e 0E       		.uleb128 0xe
 1612 040f 706F7300 		.ascii	"pos\000"
 1613 0413 01       		.byte	0x1
 1614 0414 F202     		.2byte	0x2f2
 1615 0416 6B000000 		.4byte	0x6b
 1616 041a 01       		.uleb128 0x1
 1617 041b 50       		.byte	0x50
 1618 041c 0F       		.uleb128 0xf
 1619 041d 60030000 		.4byte	.LASF24
 1620 0421 01       		.byte	0x1
 1621 0422 F302     		.2byte	0x2f3
 1622 0424 6B000000 		.4byte	0x6b
 1623 0428 D9020000 		.4byte	.LLST18
 1624 042c 0F       		.uleb128 0xf
 1625 042d 09010000 		.4byte	.LASF39
 1626 0431 01       		.byte	0x1
 1627 0432 F402     		.2byte	0x2f4
 1628 0434 6B000000 		.4byte	0x6b
 1629 0438 0E030000 		.4byte	.LLST19
 1630 043c 11       		.uleb128 0x11
 1631 043d 12010000 		.4byte	.LASF40
 1632 0441 01       		.byte	0x1
 1633 0442 F502     		.2byte	0x2f5
 1634 0444 6B000000 		.4byte	0x6b
 1635 0448 05       		.byte	0x5
 1636 0449 00       		.byte	0
 1637 044a 0C       		.uleb128 0xc
 1638 044b D6060000 		.4byte	.LASF44
 1639 044f 01       		.byte	0x1
 1640 0450 2103     		.2byte	0x321
 1641 0452 00000000 		.4byte	.LFB10
 1642 0456 2C000000 		.4byte	.LFE10-.LFB10
 1643 045a 01       		.uleb128 0x1
 1644 045b 9C       		.byte	0x9c
 1645 045c AC040000 		.4byte	0x4ac
 1646 0460 10       		.uleb128 0x10
 1647 0461 74040000 		.4byte	.LASF29
 1648 0465 01       		.byte	0x1
 1649 0466 2103     		.2byte	0x321
 1650 0468 6B000000 		.4byte	0x6b
 1651 046c 38030000 		.4byte	.LLST20
 1652 0470 0E       		.uleb128 0xe
 1653 0471 706F7300 		.ascii	"pos\000"
 1654 0475 01       		.byte	0x1
 1655 0476 2403     		.2byte	0x324
 1656 0478 6B000000 		.4byte	0x6b
 1657 047c 01       		.uleb128 0x1
 1658 047d 50       		.byte	0x50
 1659 047e 0F       		.uleb128 0xf
ARM GAS  C:\Users\sinow\AppData\Local\Temp\cczERXsC.s 			page 65


 1660 047f 60030000 		.4byte	.LASF24
 1661 0483 01       		.byte	0x1
 1662 0484 2503     		.2byte	0x325
 1663 0486 6B000000 		.4byte	0x6b
 1664 048a 59030000 		.4byte	.LLST21
 1665 048e 0F       		.uleb128 0xf
 1666 048f 09010000 		.4byte	.LASF39
 1667 0493 01       		.byte	0x1
 1668 0494 2603     		.2byte	0x326
 1669 0496 6B000000 		.4byte	0x6b
 1670 049a 8E030000 		.4byte	.LLST22
 1671 049e 11       		.uleb128 0x11
 1672 049f 12010000 		.4byte	.LASF40
 1673 04a3 01       		.byte	0x1
 1674 04a4 2703     		.2byte	0x327
 1675 04a6 6B000000 		.4byte	0x6b
 1676 04aa 05       		.byte	0x5
 1677 04ab 00       		.byte	0
 1678 04ac 12       		.uleb128 0x12
 1679 04ad 85030000 		.4byte	.LASF45
 1680 04b1 01       		.byte	0x1
 1681 04b2 5303     		.2byte	0x353
 1682 04b4 6B000000 		.4byte	0x6b
 1683 04b8 00000000 		.4byte	.LFB11
 1684 04bc 30000000 		.4byte	.LFE11-.LFB11
 1685 04c0 01       		.uleb128 0x1
 1686 04c1 9C       		.byte	0x9c
 1687 04c2 31050000 		.4byte	0x531
 1688 04c6 10       		.uleb128 0x10
 1689 04c7 00060000 		.4byte	.LASF46
 1690 04cb 01       		.byte	0x1
 1691 04cc 5303     		.2byte	0x353
 1692 04ce 6B000000 		.4byte	0x6b
 1693 04d2 B8030000 		.4byte	.LLST23
 1694 04d6 15       		.uleb128 0x15
 1695 04d7 2B000000 		.4byte	.LASF47
 1696 04db 01       		.byte	0x1
 1697 04dc 5303     		.2byte	0x353
 1698 04de 6B000000 		.4byte	0x6b
 1699 04e2 01       		.uleb128 0x1
 1700 04e3 51       		.byte	0x51
 1701 04e4 15       		.uleb128 0x15
 1702 04e5 64000000 		.4byte	.LASF34
 1703 04e9 01       		.byte	0x1
 1704 04ea 5303     		.2byte	0x353
 1705 04ec 77000000 		.4byte	0x77
 1706 04f0 01       		.uleb128 0x1
 1707 04f1 52       		.byte	0x52
 1708 04f2 0D       		.uleb128 0xd
 1709 04f3 6900     		.ascii	"i\000"
 1710 04f5 01       		.byte	0x1
 1711 04f6 5703     		.2byte	0x357
 1712 04f8 6B000000 		.4byte	0x6b
 1713 04fc D9030000 		.4byte	.LLST24
 1714 0500 0F       		.uleb128 0xf
 1715 0501 C7010000 		.4byte	.LASF48
 1716 0505 01       		.byte	0x1
ARM GAS  C:\Users\sinow\AppData\Local\Temp\cczERXsC.s 			page 66


 1717 0506 6103     		.2byte	0x361
 1718 0508 6B000000 		.4byte	0x6b
 1719 050c 03040000 		.4byte	.LLST25
 1720 0510 0F       		.uleb128 0xf
 1721 0511 17020000 		.4byte	.LASF49
 1722 0515 01       		.byte	0x1
 1723 0516 6203     		.2byte	0x362
 1724 0518 77000000 		.4byte	0x77
 1725 051c 23040000 		.4byte	.LLST26
 1726 0520 0F       		.uleb128 0xf
 1727 0521 09020000 		.4byte	.LASF50
 1728 0525 01       		.byte	0x1
 1729 0526 6303     		.2byte	0x363
 1730 0528 31050000 		.4byte	0x531
 1731 052c 4D040000 		.4byte	.LLST27
 1732 0530 00       		.byte	0
 1733 0531 16       		.uleb128 0x16
 1734 0532 04       		.byte	0x4
 1735 0533 77000000 		.4byte	0x77
 1736 0537 12       		.uleb128 0x12
 1737 0538 A4020000 		.4byte	.LASF51
 1738 053c 01       		.byte	0x1
 1739 053d EF03     		.2byte	0x3ef
 1740 053f 6B000000 		.4byte	0x6b
 1741 0543 00000000 		.4byte	.LFB12
 1742 0547 B8000000 		.4byte	.LFE12-.LFB12
 1743 054b 01       		.uleb128 0x1
 1744 054c 9C       		.byte	0x9c
 1745 054d 12060000 		.4byte	0x612
 1746 0551 10       		.uleb128 0x10
 1747 0552 C7010000 		.4byte	.LASF48
 1748 0556 01       		.byte	0x1
 1749 0557 EF03     		.2byte	0x3ef
 1750 0559 6B000000 		.4byte	0x6b
 1751 055d 60040000 		.4byte	.LLST28
 1752 0561 10       		.uleb128 0x10
 1753 0562 00060000 		.4byte	.LASF46
 1754 0566 01       		.byte	0x1
 1755 0567 EF03     		.2byte	0x3ef
 1756 0569 6B000000 		.4byte	0x6b
 1757 056d 81040000 		.4byte	.LLST29
 1758 0571 10       		.uleb128 0x10
 1759 0572 2B000000 		.4byte	.LASF47
 1760 0576 01       		.byte	0x1
 1761 0577 F003     		.2byte	0x3f0
 1762 0579 6B000000 		.4byte	0x6b
 1763 057d A2040000 		.4byte	.LLST30
 1764 0581 15       		.uleb128 0x15
 1765 0582 79050000 		.4byte	.LASF52
 1766 0586 01       		.byte	0x1
 1767 0587 F003     		.2byte	0x3f0
 1768 0589 77000000 		.4byte	0x77
 1769 058d 01       		.uleb128 0x1
 1770 058e 53       		.byte	0x53
 1771 058f 10       		.uleb128 0x10
 1772 0590 5B040000 		.4byte	.LASF30
 1773 0594 01       		.byte	0x1
ARM GAS  C:\Users\sinow\AppData\Local\Temp\cczERXsC.s 			page 67


 1774 0595 F003     		.2byte	0x3f0
 1775 0597 77000000 		.4byte	0x77
 1776 059b C3040000 		.4byte	.LLST31
 1777 059f 0F       		.uleb128 0xf
 1778 05a0 9A000000 		.4byte	.LASF53
 1779 05a4 01       		.byte	0x1
 1780 05a5 F403     		.2byte	0x3f4
 1781 05a7 6B000000 		.4byte	0x6b
 1782 05ab E3040000 		.4byte	.LLST32
 1783 05af 0F       		.uleb128 0xf
 1784 05b0 E5010000 		.4byte	.LASF54
 1785 05b4 01       		.byte	0x1
 1786 05b5 F503     		.2byte	0x3f5
 1787 05b7 6B000000 		.4byte	0x6b
 1788 05bb 24050000 		.4byte	.LLST33
 1789 05bf 13       		.uleb128 0x13
 1790 05c0 74020000 		.4byte	.LASF55
 1791 05c4 01       		.byte	0x1
 1792 05c5 FD03     		.2byte	0x3fd
 1793 05c7 12060000 		.4byte	0x612
 1794 05cb 05       		.uleb128 0x5
 1795 05cc 03       		.byte	0x3
 1796 05cd 04000000 		.4byte	CapSense_CSD_centroid.5269
 1797 05d1 0F       		.uleb128 0xf
 1798 05d2 3F020000 		.4byte	.LASF56
 1799 05d6 01       		.byte	0x1
 1800 05d7 FF03     		.2byte	0x3ff
 1801 05d9 6B000000 		.4byte	0x6b
 1802 05dd 50050000 		.4byte	.LLST34
 1803 05e1 0F       		.uleb128 0xf
 1804 05e2 58010000 		.4byte	.LASF57
 1805 05e6 01       		.byte	0x1
 1806 05e7 0004     		.2byte	0x400
 1807 05e9 83000000 		.4byte	0x83
 1808 05ed 99050000 		.4byte	.LLST35
 1809 05f1 0F       		.uleb128 0xf
 1810 05f2 62010000 		.4byte	.LASF58
 1811 05f6 01       		.byte	0x1
 1812 05f7 0104     		.2byte	0x401
 1813 05f9 9B000000 		.4byte	0x9b
 1814 05fd E7050000 		.4byte	.LLST36
 1815 0601 0F       		.uleb128 0xf
 1816 0602 09020000 		.4byte	.LASF50
 1817 0606 01       		.byte	0x1
 1818 0607 0204     		.2byte	0x402
 1819 0609 31050000 		.4byte	0x531
 1820 060d 51060000 		.4byte	.LLST37
 1821 0611 00       		.byte	0
 1822 0612 17       		.uleb128 0x17
 1823 0613 77000000 		.4byte	0x77
 1824 0617 22060000 		.4byte	0x622
 1825 061b 18       		.uleb128 0x18
 1826 061c C3000000 		.4byte	0xc3
 1827 0620 02       		.byte	0x2
 1828 0621 00       		.byte	0
 1829 0622 12       		.uleb128 0x12
 1830 0623 C8000000 		.4byte	.LASF59
ARM GAS  C:\Users\sinow\AppData\Local\Temp\cczERXsC.s 			page 68


 1831 0627 01       		.byte	0x1
 1832 0628 9A07     		.2byte	0x79a
 1833 062a 77000000 		.4byte	0x77
 1834 062e 00000000 		.4byte	.LFB14
 1835 0632 0C000000 		.4byte	.LFE14-.LFB14
 1836 0636 01       		.uleb128 0x1
 1837 0637 9C       		.byte	0x9c
 1838 0638 69060000 		.4byte	0x669
 1839 063c 19       		.uleb128 0x19
 1840 063d 783100   		.ascii	"x1\000"
 1841 0640 01       		.byte	0x1
 1842 0641 9A07     		.2byte	0x79a
 1843 0643 77000000 		.4byte	0x77
 1844 0647 7A060000 		.4byte	.LLST38
 1845 064b 1A       		.uleb128 0x1a
 1846 064c 783200   		.ascii	"x2\000"
 1847 064f 01       		.byte	0x1
 1848 0650 9A07     		.2byte	0x79a
 1849 0652 77000000 		.4byte	0x77
 1850 0656 01       		.uleb128 0x1
 1851 0657 51       		.byte	0x51
 1852 0658 0D       		.uleb128 0xd
 1853 0659 746D7000 		.ascii	"tmp\000"
 1854 065d 01       		.byte	0x1
 1855 065e 9D07     		.2byte	0x79d
 1856 0660 83000000 		.4byte	0x83
 1857 0664 9B060000 		.4byte	.LLST39
 1858 0668 00       		.byte	0
 1859 0669 12       		.uleb128 0x12
 1860 066a 31000000 		.4byte	.LASF60
 1861 066e 01       		.byte	0x1
 1862 066f BC04     		.2byte	0x4bc
 1863 0671 77000000 		.4byte	0x77
 1864 0675 00000000 		.4byte	.LFB13
 1865 0679 5C000000 		.4byte	.LFE13-.LFB13
 1866 067d 01       		.uleb128 0x1
 1867 067e 9C       		.byte	0x9c
 1868 067f 48070000 		.4byte	0x748
 1869 0683 10       		.uleb128 0x10
 1870 0684 74040000 		.4byte	.LASF29
 1871 0688 01       		.byte	0x1
 1872 0689 BC04     		.2byte	0x4bc
 1873 068b 6B000000 		.4byte	0x6b
 1874 068f BD060000 		.4byte	.LLST40
 1875 0693 0F       		.uleb128 0xf
 1876 0694 F7020000 		.4byte	.LASF61
 1877 0698 01       		.byte	0x1
 1878 0699 C304     		.2byte	0x4c3
 1879 069b 6B000000 		.4byte	0x6b
 1880 069f DE060000 		.4byte	.LLST41
 1881 06a3 0F       		.uleb128 0xf
 1882 06a4 B9000000 		.4byte	.LASF62
 1883 06a8 01       		.byte	0x1
 1884 06a9 C404     		.2byte	0x4c4
 1885 06ab 6B000000 		.4byte	0x6b
 1886 06af F1060000 		.4byte	.LLST42
 1887 06b3 11       		.uleb128 0x11
ARM GAS  C:\Users\sinow\AppData\Local\Temp\cczERXsC.s 			page 69


 1888 06b4 FA000000 		.4byte	.LASF63
 1889 06b8 01       		.byte	0x1
 1890 06b9 C504     		.2byte	0x4c5
 1891 06bb 6B000000 		.4byte	0x6b
 1892 06bf 08       		.byte	0x8
 1893 06c0 0F       		.uleb128 0xf
 1894 06c1 C7010000 		.4byte	.LASF48
 1895 06c5 01       		.byte	0x1
 1896 06c6 CF04     		.2byte	0x4cf
 1897 06c8 6B000000 		.4byte	0x6b
 1898 06cc 0F070000 		.4byte	.LLST43
 1899 06d0 0F       		.uleb128 0xf
 1900 06d1 3F020000 		.4byte	.LASF56
 1901 06d5 01       		.byte	0x1
 1902 06d6 D004     		.2byte	0x4d0
 1903 06d8 77000000 		.4byte	0x77
 1904 06dc 2D070000 		.4byte	.LLST44
 1905 06e0 11       		.uleb128 0x11
 1906 06e1 00060000 		.4byte	.LASF46
 1907 06e5 01       		.byte	0x1
 1908 06e6 D104     		.2byte	0x4d1
 1909 06e8 6B000000 		.4byte	0x6b
 1910 06ec 00       		.byte	0
 1911 06ed 11       		.uleb128 0x11
 1912 06ee 2B000000 		.4byte	.LASF47
 1913 06f2 01       		.byte	0x1
 1914 06f3 D204     		.2byte	0x4d2
 1915 06f5 6B000000 		.4byte	0x6b
 1916 06f9 05       		.byte	0x5
 1917 06fa 08       		.uleb128 0x8
 1918 06fb 12000000 		.4byte	.LVL125
 1919 06ff AC040000 		.4byte	0x4ac
 1920 0703 18070000 		.4byte	0x718
 1921 0707 09       		.uleb128 0x9
 1922 0708 01       		.uleb128 0x1
 1923 0709 50       		.byte	0x50
 1924 070a 01       		.uleb128 0x1
 1925 070b 30       		.byte	0x30
 1926 070c 09       		.uleb128 0x9
 1927 070d 01       		.uleb128 0x1
 1928 070e 51       		.byte	0x51
 1929 070f 01       		.uleb128 0x1
 1930 0710 35       		.byte	0x35
 1931 0711 09       		.uleb128 0x9
 1932 0712 01       		.uleb128 0x1
 1933 0713 52       		.byte	0x52
 1934 0714 02       		.uleb128 0x2
 1935 0715 08       		.byte	0x8
 1936 0716 54       		.byte	0x54
 1937 0717 00       		.byte	0
 1938 0718 08       		.uleb128 0x8
 1939 0719 26000000 		.4byte	.LVL126
 1940 071d 37050000 		.4byte	0x537
 1941 0721 3E070000 		.4byte	0x73e
 1942 0725 09       		.uleb128 0x9
 1943 0726 01       		.uleb128 0x1
 1944 0727 51       		.byte	0x51
ARM GAS  C:\Users\sinow\AppData\Local\Temp\cczERXsC.s 			page 70


 1945 0728 01       		.uleb128 0x1
 1946 0729 30       		.byte	0x30
 1947 072a 09       		.uleb128 0x9
 1948 072b 01       		.uleb128 0x1
 1949 072c 52       		.byte	0x52
 1950 072d 01       		.uleb128 0x1
 1951 072e 35       		.byte	0x35
 1952 072f 09       		.uleb128 0x9
 1953 0730 01       		.uleb128 0x1
 1954 0731 53       		.byte	0x53
 1955 0732 03       		.uleb128 0x3
 1956 0733 0A       		.byte	0xa
 1957 0734 0019     		.2byte	0x1900
 1958 0736 09       		.uleb128 0x9
 1959 0737 02       		.uleb128 0x2
 1960 0738 7D       		.byte	0x7d
 1961 0739 00       		.sleb128 0
 1962 073a 02       		.uleb128 0x2
 1963 073b 08       		.byte	0x8
 1964 073c 2A       		.byte	0x2a
 1965 073d 00       		.byte	0
 1966 073e 0A       		.uleb128 0xa
 1967 073f 46000000 		.4byte	.LVL130
 1968 0743 22060000 		.4byte	0x622
 1969 0747 00       		.byte	0
 1970 0748 17       		.uleb128 0x17
 1971 0749 77000000 		.4byte	0x77
 1972 074d 58070000 		.4byte	0x758
 1973 0751 18       		.uleb128 0x18
 1974 0752 C3000000 		.4byte	0xc3
 1975 0756 04       		.byte	0x4
 1976 0757 00       		.byte	0
 1977 0758 1B       		.uleb128 0x1b
 1978 0759 24050000 		.4byte	.LASF64
 1979 075d 03       		.byte	0x3
 1980 075e BD02     		.2byte	0x2bd
 1981 0760 48070000 		.4byte	0x748
 1982 0764 17       		.uleb128 0x17
 1983 0765 6B000000 		.4byte	0x6b
 1984 0769 74070000 		.4byte	0x774
 1985 076d 18       		.uleb128 0x18
 1986 076e C3000000 		.4byte	0xc3
 1987 0772 00       		.byte	0
 1988 0773 00       		.byte	0
 1989 0774 1B       		.uleb128 0x1b
 1990 0775 67030000 		.4byte	.LASF65
 1991 0779 04       		.byte	0x4
 1992 077a 0301     		.2byte	0x103
 1993 077c 64070000 		.4byte	0x764
 1994 0780 17       		.uleb128 0x17
 1995 0781 90070000 		.4byte	0x790
 1996 0785 90070000 		.4byte	0x790
 1997 0789 18       		.uleb128 0x18
 1998 078a C3000000 		.4byte	0xc3
 1999 078e 04       		.byte	0x4
 2000 078f 00       		.byte	0
 2001 0790 1C       		.uleb128 0x1c
ARM GAS  C:\Users\sinow\AppData\Local\Temp\cczERXsC.s 			page 71


 2002 0791 6B000000 		.4byte	0x6b
 2003 0795 1B       		.uleb128 0x1b
 2004 0796 6E010000 		.4byte	.LASF66
 2005 079a 04       		.byte	0x4
 2006 079b 0401     		.2byte	0x104
 2007 079d A1070000 		.4byte	0x7a1
 2008 07a1 1C       		.uleb128 0x1c
 2009 07a2 80070000 		.4byte	0x780
 2010 07a6 1D       		.uleb128 0x1d
 2011 07a7 ED010000 		.4byte	.LASF67
 2012 07ab 01       		.byte	0x1
 2013 07ac 29       		.byte	0x29
 2014 07ad 48070000 		.4byte	0x748
 2015 07b1 05       		.uleb128 0x5
 2016 07b2 03       		.byte	0x3
 2017 07b3 00000000 		.4byte	CapSense_CSD_sensorBaseline
 2018 07b7 17       		.uleb128 0x17
 2019 07b8 6B000000 		.4byte	0x6b
 2020 07bc C7070000 		.4byte	0x7c7
 2021 07c0 18       		.uleb128 0x18
 2022 07c1 C3000000 		.4byte	0xc3
 2023 07c5 04       		.byte	0x4
 2024 07c6 00       		.byte	0
 2025 07c7 1D       		.uleb128 0x1d
 2026 07c8 AF060000 		.4byte	.LASF68
 2027 07cc 01       		.byte	0x1
 2028 07cd 2A       		.byte	0x2a
 2029 07ce B7070000 		.4byte	0x7b7
 2030 07d2 05       		.uleb128 0x5
 2031 07d3 03       		.byte	0x3
 2032 07d4 00000000 		.4byte	CapSense_CSD_sensorBaselineLow
 2033 07d8 1D       		.uleb128 0x1d
 2034 07d9 5A020000 		.4byte	.LASF69
 2035 07dd 01       		.byte	0x1
 2036 07de 2B       		.byte	0x2b
 2037 07df 48070000 		.4byte	0x748
 2038 07e3 05       		.uleb128 0x5
 2039 07e4 03       		.byte	0x3
 2040 07e5 00000000 		.4byte	CapSense_CSD_sensorSignal
 2041 07e9 1D       		.uleb128 0x1d
 2042 07ea F1060000 		.4byte	.LASF70
 2043 07ee 01       		.byte	0x1
 2044 07ef 2C       		.byte	0x2c
 2045 07f0 64070000 		.4byte	0x764
 2046 07f4 05       		.uleb128 0x5
 2047 07f5 03       		.byte	0x3
 2048 07f6 00000000 		.4byte	CapSense_CSD_sensorOnMask
 2049 07fa 1D       		.uleb128 0x1d
 2050 07fb A4030000 		.4byte	.LASF71
 2051 07ff 01       		.byte	0x1
 2052 0800 2E       		.byte	0x2e
 2053 0801 B7070000 		.4byte	0x7b7
 2054 0805 05       		.uleb128 0x5
 2055 0806 03       		.byte	0x3
 2056 0807 00000000 		.4byte	CapSense_CSD_lowBaselineResetCnt
 2057 080b 17       		.uleb128 0x17
 2058 080c 1B080000 		.4byte	0x81b
ARM GAS  C:\Users\sinow\AppData\Local\Temp\cczERXsC.s 			page 72


 2059 0810 1B080000 		.4byte	0x81b
 2060 0814 18       		.uleb128 0x18
 2061 0815 C3000000 		.4byte	0xc3
 2062 0819 00       		.byte	0
 2063 081a 00       		.byte	0
 2064 081b 1C       		.uleb128 0x1c
 2065 081c 77000000 		.4byte	0x77
 2066 0820 1D       		.uleb128 0x1d
 2067 0821 E9030000 		.4byte	.LASF72
 2068 0825 01       		.byte	0x1
 2069 0826 30       		.byte	0x30
 2070 0827 31080000 		.4byte	0x831
 2071 082b 05       		.uleb128 0x5
 2072 082c 03       		.byte	0x3
 2073 082d 00000000 		.4byte	CapSense_CSD_fingerThreshold
 2074 0831 1C       		.uleb128 0x1c
 2075 0832 0B080000 		.4byte	0x80b
 2076 0836 1D       		.uleb128 0x1d
 2077 0837 A1050000 		.4byte	.LASF73
 2078 083b 01       		.byte	0x1
 2079 083c 34       		.byte	0x34
 2080 083d 47080000 		.4byte	0x847
 2081 0841 05       		.uleb128 0x5
 2082 0842 03       		.byte	0x3
 2083 0843 00000000 		.4byte	CapSense_CSD_noiseThreshold
 2084 0847 1C       		.uleb128 0x1c
 2085 0848 0B080000 		.4byte	0x80b
 2086 084c 1D       		.uleb128 0x1d
 2087 084d 21060000 		.4byte	.LASF74
 2088 0851 01       		.byte	0x1
 2089 0852 38       		.byte	0x38
 2090 0853 5D080000 		.4byte	0x85d
 2091 0857 05       		.uleb128 0x5
 2092 0858 03       		.byte	0x3
 2093 0859 00000000 		.4byte	CapSense_CSD_hysteresis
 2094 085d 1C       		.uleb128 0x1c
 2095 085e 0B080000 		.4byte	0x80b
 2096 0862 17       		.uleb128 0x17
 2097 0863 90070000 		.4byte	0x790
 2098 0867 72080000 		.4byte	0x872
 2099 086b 18       		.uleb128 0x18
 2100 086c C3000000 		.4byte	0xc3
 2101 0870 00       		.byte	0
 2102 0871 00       		.byte	0
 2103 0872 1D       		.uleb128 0x1d
 2104 0873 1C020000 		.4byte	.LASF75
 2105 0877 01       		.byte	0x1
 2106 0878 3C       		.byte	0x3c
 2107 0879 83080000 		.4byte	0x883
 2108 087d 05       		.uleb128 0x5
 2109 087e 03       		.byte	0x3
 2110 087f 00000000 		.4byte	CapSense_CSD_debounce
 2111 0883 1C       		.uleb128 0x1c
 2112 0884 62080000 		.4byte	0x862
 2113 0888 1D       		.uleb128 0x1d
 2114 0889 92060000 		.4byte	.LASF76
 2115 088d 01       		.byte	0x1
ARM GAS  C:\Users\sinow\AppData\Local\Temp\cczERXsC.s 			page 73


 2116 088e 40       		.byte	0x40
 2117 088f 64070000 		.4byte	0x764
 2118 0893 05       		.uleb128 0x5
 2119 0894 03       		.byte	0x3
 2120 0895 00000000 		.4byte	CapSense_CSD_debounceCounter
 2121 0899 1D       		.uleb128 0x1d
 2122 089a 46030000 		.4byte	.LASF77
 2123 089e 01       		.byte	0x1
 2124 089f 44       		.byte	0x44
 2125 08a0 AA080000 		.4byte	0x8aa
 2126 08a4 05       		.uleb128 0x5
 2127 08a5 03       		.byte	0x3
 2128 08a6 00000000 		.4byte	CapSense_CSD_rawDataIndex
 2129 08aa 1C       		.uleb128 0x1c
 2130 08ab 62080000 		.4byte	0x862
 2131 08af 1D       		.uleb128 0x1d
 2132 08b0 84050000 		.4byte	.LASF78
 2133 08b4 01       		.byte	0x1
 2134 08b5 49       		.byte	0x49
 2135 08b6 C0080000 		.4byte	0x8c0
 2136 08ba 05       		.uleb128 0x5
 2137 08bb 03       		.byte	0x3
 2138 08bc 00000000 		.4byte	CapSense_CSD_numberOfSensors
 2139 08c0 1C       		.uleb128 0x1c
 2140 08c1 62080000 		.4byte	0x862
 2141 08c5 1D       		.uleb128 0x1d
 2142 08c6 07060000 		.4byte	.LASF79
 2143 08ca 01       		.byte	0x1
 2144 08cb 4E       		.byte	0x4e
 2145 08cc D6080000 		.4byte	0x8d6
 2146 08d0 05       		.uleb128 0x5
 2147 08d1 03       		.byte	0x3
 2148 08d2 00000000 		.4byte	CapSense_CSD_centroidMult
 2149 08d6 1C       		.uleb128 0x1c
 2150 08d7 0B080000 		.4byte	0x80b
 2151 08db 1D       		.uleb128 0x1d
 2152 08dc DB020000 		.4byte	.LASF80
 2153 08e0 01       		.byte	0x1
 2154 08e1 52       		.byte	0x52
 2155 08e2 EC080000 		.4byte	0x8ec
 2156 08e6 05       		.uleb128 0x5
 2157 08e7 03       		.byte	0x3
 2158 08e8 00000000 		.4byte	CapSense_CSD_posFiltersMask
 2159 08ec 1C       		.uleb128 0x1c
 2160 08ed 62080000 		.4byte	0x862
 2161 08f1 17       		.uleb128 0x17
 2162 08f2 6B000000 		.4byte	0x6b
 2163 08f6 01090000 		.4byte	0x901
 2164 08fa 18       		.uleb128 0x18
 2165 08fb C3000000 		.4byte	0xc3
 2166 08ff 02       		.byte	0x2
 2167 0900 00       		.byte	0
 2168 0901 1D       		.uleb128 0x1d
 2169 0902 3B050000 		.4byte	.LASF81
 2170 0906 01       		.byte	0x1
 2171 0907 56       		.byte	0x56
 2172 0908 F1080000 		.4byte	0x8f1
ARM GAS  C:\Users\sinow\AppData\Local\Temp\cczERXsC.s 			page 74


 2173 090c 05       		.uleb128 0x5
 2174 090d 03       		.byte	0x3
 2175 090e 00000000 		.4byte	CapSense_CSD_posFiltersData
 2176 0912 1E       		.uleb128 0x1e
 2177 0913 C3020000 		.4byte	.LASF82
 2178 0917 C3020000 		.4byte	.LASF82
 2179 091b 03       		.byte	0x3
 2180 091c 9A       		.byte	0x9a
 2181 091d 1E       		.uleb128 0x1e
 2182 091e 10050000 		.4byte	.LASF83
 2183 0922 10050000 		.4byte	.LASF83
 2184 0926 03       		.byte	0x3
 2185 0927 99       		.byte	0x99
 2186 0928 1E       		.uleb128 0x1e
 2187 0929 9C010000 		.4byte	.LASF84
 2188 092d 9C010000 		.4byte	.LASF84
 2189 0931 03       		.byte	0x3
 2190 0932 9B       		.byte	0x9b
 2191 0933 00       		.byte	0
 2192              		.section	.debug_abbrev,"",%progbits
 2193              	.Ldebug_abbrev0:
 2194 0000 01       		.uleb128 0x1
 2195 0001 11       		.uleb128 0x11
 2196 0002 01       		.byte	0x1
 2197 0003 25       		.uleb128 0x25
 2198 0004 0E       		.uleb128 0xe
 2199 0005 13       		.uleb128 0x13
 2200 0006 0B       		.uleb128 0xb
 2201 0007 03       		.uleb128 0x3
 2202 0008 0E       		.uleb128 0xe
 2203 0009 1B       		.uleb128 0x1b
 2204 000a 0E       		.uleb128 0xe
 2205 000b 55       		.uleb128 0x55
 2206 000c 17       		.uleb128 0x17
 2207 000d 11       		.uleb128 0x11
 2208 000e 01       		.uleb128 0x1
 2209 000f 10       		.uleb128 0x10
 2210 0010 17       		.uleb128 0x17
 2211 0011 00       		.byte	0
 2212 0012 00       		.byte	0
 2213 0013 02       		.uleb128 0x2
 2214 0014 24       		.uleb128 0x24
 2215 0015 00       		.byte	0
 2216 0016 0B       		.uleb128 0xb
 2217 0017 0B       		.uleb128 0xb
 2218 0018 3E       		.uleb128 0x3e
 2219 0019 0B       		.uleb128 0xb
 2220 001a 03       		.uleb128 0x3
 2221 001b 0E       		.uleb128 0xe
 2222 001c 00       		.byte	0
 2223 001d 00       		.byte	0
 2224 001e 03       		.uleb128 0x3
 2225 001f 24       		.uleb128 0x24
 2226 0020 00       		.byte	0
 2227 0021 0B       		.uleb128 0xb
 2228 0022 0B       		.uleb128 0xb
 2229 0023 3E       		.uleb128 0x3e
ARM GAS  C:\Users\sinow\AppData\Local\Temp\cczERXsC.s 			page 75


 2230 0024 0B       		.uleb128 0xb
 2231 0025 03       		.uleb128 0x3
 2232 0026 08       		.uleb128 0x8
 2233 0027 00       		.byte	0
 2234 0028 00       		.byte	0
 2235 0029 04       		.uleb128 0x4
 2236 002a 16       		.uleb128 0x16
 2237 002b 00       		.byte	0
 2238 002c 03       		.uleb128 0x3
 2239 002d 0E       		.uleb128 0xe
 2240 002e 3A       		.uleb128 0x3a
 2241 002f 0B       		.uleb128 0xb
 2242 0030 3B       		.uleb128 0x3b
 2243 0031 05       		.uleb128 0x5
 2244 0032 49       		.uleb128 0x49
 2245 0033 13       		.uleb128 0x13
 2246 0034 00       		.byte	0
 2247 0035 00       		.byte	0
 2248 0036 05       		.uleb128 0x5
 2249 0037 2E       		.uleb128 0x2e
 2250 0038 01       		.byte	0x1
 2251 0039 3F       		.uleb128 0x3f
 2252 003a 19       		.uleb128 0x19
 2253 003b 03       		.uleb128 0x3
 2254 003c 0E       		.uleb128 0xe
 2255 003d 3A       		.uleb128 0x3a
 2256 003e 0B       		.uleb128 0xb
 2257 003f 3B       		.uleb128 0x3b
 2258 0040 0B       		.uleb128 0xb
 2259 0041 27       		.uleb128 0x27
 2260 0042 19       		.uleb128 0x19
 2261 0043 11       		.uleb128 0x11
 2262 0044 01       		.uleb128 0x1
 2263 0045 12       		.uleb128 0x12
 2264 0046 06       		.uleb128 0x6
 2265 0047 40       		.uleb128 0x40
 2266 0048 18       		.uleb128 0x18
 2267 0049 9742     		.uleb128 0x2117
 2268 004b 19       		.uleb128 0x19
 2269 004c 01       		.uleb128 0x1
 2270 004d 13       		.uleb128 0x13
 2271 004e 00       		.byte	0
 2272 004f 00       		.byte	0
 2273 0050 06       		.uleb128 0x6
 2274 0051 05       		.uleb128 0x5
 2275 0052 00       		.byte	0
 2276 0053 03       		.uleb128 0x3
 2277 0054 0E       		.uleb128 0xe
 2278 0055 3A       		.uleb128 0x3a
 2279 0056 0B       		.uleb128 0xb
 2280 0057 3B       		.uleb128 0x3b
 2281 0058 0B       		.uleb128 0xb
 2282 0059 49       		.uleb128 0x49
 2283 005a 13       		.uleb128 0x13
 2284 005b 02       		.uleb128 0x2
 2285 005c 18       		.uleb128 0x18
 2286 005d 00       		.byte	0
ARM GAS  C:\Users\sinow\AppData\Local\Temp\cczERXsC.s 			page 76


 2287 005e 00       		.byte	0
 2288 005f 07       		.uleb128 0x7
 2289 0060 05       		.uleb128 0x5
 2290 0061 00       		.byte	0
 2291 0062 03       		.uleb128 0x3
 2292 0063 0E       		.uleb128 0xe
 2293 0064 3A       		.uleb128 0x3a
 2294 0065 0B       		.uleb128 0xb
 2295 0066 3B       		.uleb128 0x3b
 2296 0067 0B       		.uleb128 0xb
 2297 0068 49       		.uleb128 0x49
 2298 0069 13       		.uleb128 0x13
 2299 006a 02       		.uleb128 0x2
 2300 006b 17       		.uleb128 0x17
 2301 006c 00       		.byte	0
 2302 006d 00       		.byte	0
 2303 006e 08       		.uleb128 0x8
 2304 006f 898201   		.uleb128 0x4109
 2305 0072 01       		.byte	0x1
 2306 0073 11       		.uleb128 0x11
 2307 0074 01       		.uleb128 0x1
 2308 0075 31       		.uleb128 0x31
 2309 0076 13       		.uleb128 0x13
 2310 0077 01       		.uleb128 0x1
 2311 0078 13       		.uleb128 0x13
 2312 0079 00       		.byte	0
 2313 007a 00       		.byte	0
 2314 007b 09       		.uleb128 0x9
 2315 007c 8A8201   		.uleb128 0x410a
 2316 007f 00       		.byte	0
 2317 0080 02       		.uleb128 0x2
 2318 0081 18       		.uleb128 0x18
 2319 0082 9142     		.uleb128 0x2111
 2320 0084 18       		.uleb128 0x18
 2321 0085 00       		.byte	0
 2322 0086 00       		.byte	0
 2323 0087 0A       		.uleb128 0xa
 2324 0088 898201   		.uleb128 0x4109
 2325 008b 00       		.byte	0
 2326 008c 11       		.uleb128 0x11
 2327 008d 01       		.uleb128 0x1
 2328 008e 31       		.uleb128 0x31
 2329 008f 13       		.uleb128 0x13
 2330 0090 00       		.byte	0
 2331 0091 00       		.byte	0
 2332 0092 0B       		.uleb128 0xb
 2333 0093 898201   		.uleb128 0x4109
 2334 0096 01       		.byte	0x1
 2335 0097 11       		.uleb128 0x11
 2336 0098 01       		.uleb128 0x1
 2337 0099 31       		.uleb128 0x31
 2338 009a 13       		.uleb128 0x13
 2339 009b 00       		.byte	0
 2340 009c 00       		.byte	0
 2341 009d 0C       		.uleb128 0xc
 2342 009e 2E       		.uleb128 0x2e
 2343 009f 01       		.byte	0x1
ARM GAS  C:\Users\sinow\AppData\Local\Temp\cczERXsC.s 			page 77


 2344 00a0 3F       		.uleb128 0x3f
 2345 00a1 19       		.uleb128 0x19
 2346 00a2 03       		.uleb128 0x3
 2347 00a3 0E       		.uleb128 0xe
 2348 00a4 3A       		.uleb128 0x3a
 2349 00a5 0B       		.uleb128 0xb
 2350 00a6 3B       		.uleb128 0x3b
 2351 00a7 05       		.uleb128 0x5
 2352 00a8 27       		.uleb128 0x27
 2353 00a9 19       		.uleb128 0x19
 2354 00aa 11       		.uleb128 0x11
 2355 00ab 01       		.uleb128 0x1
 2356 00ac 12       		.uleb128 0x12
 2357 00ad 06       		.uleb128 0x6
 2358 00ae 40       		.uleb128 0x40
 2359 00af 18       		.uleb128 0x18
 2360 00b0 9742     		.uleb128 0x2117
 2361 00b2 19       		.uleb128 0x19
 2362 00b3 01       		.uleb128 0x1
 2363 00b4 13       		.uleb128 0x13
 2364 00b5 00       		.byte	0
 2365 00b6 00       		.byte	0
 2366 00b7 0D       		.uleb128 0xd
 2367 00b8 34       		.uleb128 0x34
 2368 00b9 00       		.byte	0
 2369 00ba 03       		.uleb128 0x3
 2370 00bb 08       		.uleb128 0x8
 2371 00bc 3A       		.uleb128 0x3a
 2372 00bd 0B       		.uleb128 0xb
 2373 00be 3B       		.uleb128 0x3b
 2374 00bf 05       		.uleb128 0x5
 2375 00c0 49       		.uleb128 0x49
 2376 00c1 13       		.uleb128 0x13
 2377 00c2 02       		.uleb128 0x2
 2378 00c3 17       		.uleb128 0x17
 2379 00c4 00       		.byte	0
 2380 00c5 00       		.byte	0
 2381 00c6 0E       		.uleb128 0xe
 2382 00c7 34       		.uleb128 0x34
 2383 00c8 00       		.byte	0
 2384 00c9 03       		.uleb128 0x3
 2385 00ca 08       		.uleb128 0x8
 2386 00cb 3A       		.uleb128 0x3a
 2387 00cc 0B       		.uleb128 0xb
 2388 00cd 3B       		.uleb128 0x3b
 2389 00ce 05       		.uleb128 0x5
 2390 00cf 49       		.uleb128 0x49
 2391 00d0 13       		.uleb128 0x13
 2392 00d1 02       		.uleb128 0x2
 2393 00d2 18       		.uleb128 0x18
 2394 00d3 00       		.byte	0
 2395 00d4 00       		.byte	0
 2396 00d5 0F       		.uleb128 0xf
 2397 00d6 34       		.uleb128 0x34
 2398 00d7 00       		.byte	0
 2399 00d8 03       		.uleb128 0x3
 2400 00d9 0E       		.uleb128 0xe
ARM GAS  C:\Users\sinow\AppData\Local\Temp\cczERXsC.s 			page 78


 2401 00da 3A       		.uleb128 0x3a
 2402 00db 0B       		.uleb128 0xb
 2403 00dc 3B       		.uleb128 0x3b
 2404 00dd 05       		.uleb128 0x5
 2405 00de 49       		.uleb128 0x49
 2406 00df 13       		.uleb128 0x13
 2407 00e0 02       		.uleb128 0x2
 2408 00e1 17       		.uleb128 0x17
 2409 00e2 00       		.byte	0
 2410 00e3 00       		.byte	0
 2411 00e4 10       		.uleb128 0x10
 2412 00e5 05       		.uleb128 0x5
 2413 00e6 00       		.byte	0
 2414 00e7 03       		.uleb128 0x3
 2415 00e8 0E       		.uleb128 0xe
 2416 00e9 3A       		.uleb128 0x3a
 2417 00ea 0B       		.uleb128 0xb
 2418 00eb 3B       		.uleb128 0x3b
 2419 00ec 05       		.uleb128 0x5
 2420 00ed 49       		.uleb128 0x49
 2421 00ee 13       		.uleb128 0x13
 2422 00ef 02       		.uleb128 0x2
 2423 00f0 17       		.uleb128 0x17
 2424 00f1 00       		.byte	0
 2425 00f2 00       		.byte	0
 2426 00f3 11       		.uleb128 0x11
 2427 00f4 34       		.uleb128 0x34
 2428 00f5 00       		.byte	0
 2429 00f6 03       		.uleb128 0x3
 2430 00f7 0E       		.uleb128 0xe
 2431 00f8 3A       		.uleb128 0x3a
 2432 00f9 0B       		.uleb128 0xb
 2433 00fa 3B       		.uleb128 0x3b
 2434 00fb 05       		.uleb128 0x5
 2435 00fc 49       		.uleb128 0x49
 2436 00fd 13       		.uleb128 0x13
 2437 00fe 1C       		.uleb128 0x1c
 2438 00ff 0B       		.uleb128 0xb
 2439 0100 00       		.byte	0
 2440 0101 00       		.byte	0
 2441 0102 12       		.uleb128 0x12
 2442 0103 2E       		.uleb128 0x2e
 2443 0104 01       		.byte	0x1
 2444 0105 3F       		.uleb128 0x3f
 2445 0106 19       		.uleb128 0x19
 2446 0107 03       		.uleb128 0x3
 2447 0108 0E       		.uleb128 0xe
 2448 0109 3A       		.uleb128 0x3a
 2449 010a 0B       		.uleb128 0xb
 2450 010b 3B       		.uleb128 0x3b
 2451 010c 05       		.uleb128 0x5
 2452 010d 27       		.uleb128 0x27
 2453 010e 19       		.uleb128 0x19
 2454 010f 49       		.uleb128 0x49
 2455 0110 13       		.uleb128 0x13
 2456 0111 11       		.uleb128 0x11
 2457 0112 01       		.uleb128 0x1
ARM GAS  C:\Users\sinow\AppData\Local\Temp\cczERXsC.s 			page 79


 2458 0113 12       		.uleb128 0x12
 2459 0114 06       		.uleb128 0x6
 2460 0115 40       		.uleb128 0x40
 2461 0116 18       		.uleb128 0x18
 2462 0117 9742     		.uleb128 0x2117
 2463 0119 19       		.uleb128 0x19
 2464 011a 01       		.uleb128 0x1
 2465 011b 13       		.uleb128 0x13
 2466 011c 00       		.byte	0
 2467 011d 00       		.byte	0
 2468 011e 13       		.uleb128 0x13
 2469 011f 34       		.uleb128 0x34
 2470 0120 00       		.byte	0
 2471 0121 03       		.uleb128 0x3
 2472 0122 0E       		.uleb128 0xe
 2473 0123 3A       		.uleb128 0x3a
 2474 0124 0B       		.uleb128 0xb
 2475 0125 3B       		.uleb128 0x3b
 2476 0126 05       		.uleb128 0x5
 2477 0127 49       		.uleb128 0x49
 2478 0128 13       		.uleb128 0x13
 2479 0129 02       		.uleb128 0x2
 2480 012a 18       		.uleb128 0x18
 2481 012b 00       		.byte	0
 2482 012c 00       		.byte	0
 2483 012d 14       		.uleb128 0x14
 2484 012e 34       		.uleb128 0x34
 2485 012f 00       		.byte	0
 2486 0130 03       		.uleb128 0x3
 2487 0131 0E       		.uleb128 0xe
 2488 0132 3A       		.uleb128 0x3a
 2489 0133 0B       		.uleb128 0xb
 2490 0134 3B       		.uleb128 0x3b
 2491 0135 05       		.uleb128 0x5
 2492 0136 49       		.uleb128 0x49
 2493 0137 13       		.uleb128 0x13
 2494 0138 00       		.byte	0
 2495 0139 00       		.byte	0
 2496 013a 15       		.uleb128 0x15
 2497 013b 05       		.uleb128 0x5
 2498 013c 00       		.byte	0
 2499 013d 03       		.uleb128 0x3
 2500 013e 0E       		.uleb128 0xe
 2501 013f 3A       		.uleb128 0x3a
 2502 0140 0B       		.uleb128 0xb
 2503 0141 3B       		.uleb128 0x3b
 2504 0142 05       		.uleb128 0x5
 2505 0143 49       		.uleb128 0x49
 2506 0144 13       		.uleb128 0x13
 2507 0145 02       		.uleb128 0x2
 2508 0146 18       		.uleb128 0x18
 2509 0147 00       		.byte	0
 2510 0148 00       		.byte	0
 2511 0149 16       		.uleb128 0x16
 2512 014a 0F       		.uleb128 0xf
 2513 014b 00       		.byte	0
 2514 014c 0B       		.uleb128 0xb
ARM GAS  C:\Users\sinow\AppData\Local\Temp\cczERXsC.s 			page 80


 2515 014d 0B       		.uleb128 0xb
 2516 014e 49       		.uleb128 0x49
 2517 014f 13       		.uleb128 0x13
 2518 0150 00       		.byte	0
 2519 0151 00       		.byte	0
 2520 0152 17       		.uleb128 0x17
 2521 0153 01       		.uleb128 0x1
 2522 0154 01       		.byte	0x1
 2523 0155 49       		.uleb128 0x49
 2524 0156 13       		.uleb128 0x13
 2525 0157 01       		.uleb128 0x1
 2526 0158 13       		.uleb128 0x13
 2527 0159 00       		.byte	0
 2528 015a 00       		.byte	0
 2529 015b 18       		.uleb128 0x18
 2530 015c 21       		.uleb128 0x21
 2531 015d 00       		.byte	0
 2532 015e 49       		.uleb128 0x49
 2533 015f 13       		.uleb128 0x13
 2534 0160 2F       		.uleb128 0x2f
 2535 0161 0B       		.uleb128 0xb
 2536 0162 00       		.byte	0
 2537 0163 00       		.byte	0
 2538 0164 19       		.uleb128 0x19
 2539 0165 05       		.uleb128 0x5
 2540 0166 00       		.byte	0
 2541 0167 03       		.uleb128 0x3
 2542 0168 08       		.uleb128 0x8
 2543 0169 3A       		.uleb128 0x3a
 2544 016a 0B       		.uleb128 0xb
 2545 016b 3B       		.uleb128 0x3b
 2546 016c 05       		.uleb128 0x5
 2547 016d 49       		.uleb128 0x49
 2548 016e 13       		.uleb128 0x13
 2549 016f 02       		.uleb128 0x2
 2550 0170 17       		.uleb128 0x17
 2551 0171 00       		.byte	0
 2552 0172 00       		.byte	0
 2553 0173 1A       		.uleb128 0x1a
 2554 0174 05       		.uleb128 0x5
 2555 0175 00       		.byte	0
 2556 0176 03       		.uleb128 0x3
 2557 0177 08       		.uleb128 0x8
 2558 0178 3A       		.uleb128 0x3a
 2559 0179 0B       		.uleb128 0xb
 2560 017a 3B       		.uleb128 0x3b
 2561 017b 05       		.uleb128 0x5
 2562 017c 49       		.uleb128 0x49
 2563 017d 13       		.uleb128 0x13
 2564 017e 02       		.uleb128 0x2
 2565 017f 18       		.uleb128 0x18
 2566 0180 00       		.byte	0
 2567 0181 00       		.byte	0
 2568 0182 1B       		.uleb128 0x1b
 2569 0183 34       		.uleb128 0x34
 2570 0184 00       		.byte	0
 2571 0185 03       		.uleb128 0x3
ARM GAS  C:\Users\sinow\AppData\Local\Temp\cczERXsC.s 			page 81


 2572 0186 0E       		.uleb128 0xe
 2573 0187 3A       		.uleb128 0x3a
 2574 0188 0B       		.uleb128 0xb
 2575 0189 3B       		.uleb128 0x3b
 2576 018a 05       		.uleb128 0x5
 2577 018b 49       		.uleb128 0x49
 2578 018c 13       		.uleb128 0x13
 2579 018d 3F       		.uleb128 0x3f
 2580 018e 19       		.uleb128 0x19
 2581 018f 3C       		.uleb128 0x3c
 2582 0190 19       		.uleb128 0x19
 2583 0191 00       		.byte	0
 2584 0192 00       		.byte	0
 2585 0193 1C       		.uleb128 0x1c
 2586 0194 26       		.uleb128 0x26
 2587 0195 00       		.byte	0
 2588 0196 49       		.uleb128 0x49
 2589 0197 13       		.uleb128 0x13
 2590 0198 00       		.byte	0
 2591 0199 00       		.byte	0
 2592 019a 1D       		.uleb128 0x1d
 2593 019b 34       		.uleb128 0x34
 2594 019c 00       		.byte	0
 2595 019d 03       		.uleb128 0x3
 2596 019e 0E       		.uleb128 0xe
 2597 019f 3A       		.uleb128 0x3a
 2598 01a0 0B       		.uleb128 0xb
 2599 01a1 3B       		.uleb128 0x3b
 2600 01a2 0B       		.uleb128 0xb
 2601 01a3 49       		.uleb128 0x49
 2602 01a4 13       		.uleb128 0x13
 2603 01a5 3F       		.uleb128 0x3f
 2604 01a6 19       		.uleb128 0x19
 2605 01a7 02       		.uleb128 0x2
 2606 01a8 18       		.uleb128 0x18
 2607 01a9 00       		.byte	0
 2608 01aa 00       		.byte	0
 2609 01ab 1E       		.uleb128 0x1e
 2610 01ac 2E       		.uleb128 0x2e
 2611 01ad 00       		.byte	0
 2612 01ae 3F       		.uleb128 0x3f
 2613 01af 19       		.uleb128 0x19
 2614 01b0 3C       		.uleb128 0x3c
 2615 01b1 19       		.uleb128 0x19
 2616 01b2 6E       		.uleb128 0x6e
 2617 01b3 0E       		.uleb128 0xe
 2618 01b4 03       		.uleb128 0x3
 2619 01b5 0E       		.uleb128 0xe
 2620 01b6 3A       		.uleb128 0x3a
 2621 01b7 0B       		.uleb128 0xb
 2622 01b8 3B       		.uleb128 0x3b
 2623 01b9 0B       		.uleb128 0xb
 2624 01ba 00       		.byte	0
 2625 01bb 00       		.byte	0
 2626 01bc 00       		.byte	0
 2627              		.section	.debug_loc,"",%progbits
 2628              	.Ldebug_loc0:
ARM GAS  C:\Users\sinow\AppData\Local\Temp\cczERXsC.s 			page 82


 2629              	.LLST0:
 2630 0000 00000000 		.4byte	.LVL1
 2631 0004 07000000 		.4byte	.LVL2-1
 2632 0008 0100     		.2byte	0x1
 2633 000a 50       		.byte	0x50
 2634 000b 07000000 		.4byte	.LVL2-1
 2635 000f 18000000 		.4byte	.LFE1
 2636 0013 0400     		.2byte	0x4
 2637 0015 F3       		.byte	0xf3
 2638 0016 01       		.uleb128 0x1
 2639 0017 50       		.byte	0x50
 2640 0018 9F       		.byte	0x9f
 2641 0019 00000000 		.4byte	0
 2642 001d 00000000 		.4byte	0
 2643              	.LLST1:
 2644 0021 02000000 		.4byte	.LVL5
 2645 0025 06000000 		.4byte	.LVL6
 2646 0029 0200     		.2byte	0x2
 2647 002b 30       		.byte	0x30
 2648 002c 9F       		.byte	0x9f
 2649 002d 06000000 		.4byte	.LVL6
 2650 0031 0E000000 		.4byte	.LVL8
 2651 0035 0100     		.2byte	0x1
 2652 0037 54       		.byte	0x54
 2653 0038 10000000 		.4byte	.LVL9
 2654 003c 16000000 		.4byte	.LFE2
 2655 0040 0100     		.2byte	0x1
 2656 0042 54       		.byte	0x54
 2657 0043 00000000 		.4byte	0
 2658 0047 00000000 		.4byte	0
 2659              	.LLST2:
 2660 004b 12000000 		.4byte	.LVL12
 2661 004f 34000000 		.4byte	.LVL16
 2662 0053 0100     		.2byte	0x1
 2663 0055 54       		.byte	0x54
 2664 0056 36000000 		.4byte	.LVL17
 2665 005a 3C000000 		.4byte	.LVL18
 2666 005e 0100     		.2byte	0x1
 2667 0060 54       		.byte	0x54
 2668 0061 00000000 		.4byte	0
 2669 0065 00000000 		.4byte	0
 2670              	.LLST3:
 2671 0069 1C000000 		.4byte	.LVL13
 2672 006d 28000000 		.4byte	.LVL14
 2673 0071 0100     		.2byte	0x1
 2674 0073 53       		.byte	0x53
 2675 0074 28000000 		.4byte	.LVL14
 2676 0078 34000000 		.4byte	.LVL16
 2677 007c 0700     		.2byte	0x7
 2678 007e 31       		.byte	0x31
 2679 007f 74       		.byte	0x74
 2680 0080 00       		.sleb128 0
 2681 0081 37       		.byte	0x37
 2682 0082 1A       		.byte	0x1a
 2683 0083 24       		.byte	0x24
 2684 0084 9F       		.byte	0x9f
 2685 0085 34000000 		.4byte	.LVL16
ARM GAS  C:\Users\sinow\AppData\Local\Temp\cczERXsC.s 			page 83


 2686 0089 36000000 		.4byte	.LVL17
 2687 008d 0700     		.2byte	0x7
 2688 008f 31       		.byte	0x31
 2689 0090 74       		.byte	0x74
 2690 0091 7F       		.sleb128 -1
 2691 0092 37       		.byte	0x37
 2692 0093 1A       		.byte	0x1a
 2693 0094 24       		.byte	0x24
 2694 0095 9F       		.byte	0x9f
 2695 0096 00000000 		.4byte	0
 2696 009a 00000000 		.4byte	0
 2697              	.LLST4:
 2698 009e 00000000 		.4byte	.LVL19
 2699 00a2 32000000 		.4byte	.LVL27
 2700 00a6 0100     		.2byte	0x1
 2701 00a8 50       		.byte	0x50
 2702 00a9 32000000 		.4byte	.LVL27
 2703 00ad 3E000000 		.4byte	.LVL29
 2704 00b1 0400     		.2byte	0x4
 2705 00b3 F3       		.byte	0xf3
 2706 00b4 01       		.uleb128 0x1
 2707 00b5 50       		.byte	0x50
 2708 00b6 9F       		.byte	0x9f
 2709 00b7 3E000000 		.4byte	.LVL29
 2710 00bb 52000000 		.4byte	.LVL32
 2711 00bf 0100     		.2byte	0x1
 2712 00c1 50       		.byte	0x50
 2713 00c2 52000000 		.4byte	.LVL32
 2714 00c6 9C000000 		.4byte	.LFE4
 2715 00ca 0400     		.2byte	0x4
 2716 00cc F3       		.byte	0xf3
 2717 00cd 01       		.uleb128 0x1
 2718 00ce 50       		.byte	0x50
 2719 00cf 9F       		.byte	0x9f
 2720 00d0 00000000 		.4byte	0
 2721 00d4 00000000 		.4byte	0
 2722              	.LLST5:
 2723 00d8 50000000 		.4byte	.LVL31
 2724 00dc 58000000 		.4byte	.LVL33
 2725 00e0 0500     		.2byte	0x5
 2726 00e2 71       		.byte	0x71
 2727 00e3 00       		.sleb128 0
 2728 00e4 38       		.byte	0x38
 2729 00e5 24       		.byte	0x24
 2730 00e6 9F       		.byte	0x9f
 2731 00e7 58000000 		.4byte	.LVL33
 2732 00eb 5A000000 		.4byte	.LVL34
 2733 00ef 0100     		.2byte	0x1
 2734 00f1 52       		.byte	0x52
 2735 00f2 5A000000 		.4byte	.LVL34
 2736 00f6 6C000000 		.4byte	.LVL36
 2737 00fa 0100     		.2byte	0x1
 2738 00fc 53       		.byte	0x53
 2739 00fd 00000000 		.4byte	0
 2740 0101 00000000 		.4byte	0
 2741              	.LLST6:
 2742 0105 18000000 		.4byte	.LVL22
ARM GAS  C:\Users\sinow\AppData\Local\Temp\cczERXsC.s 			page 84


 2743 0109 1C000000 		.4byte	.LVL23
 2744 010d 0100     		.2byte	0x1
 2745 010f 55       		.byte	0x55
 2746 0110 20000000 		.4byte	.LVL24
 2747 0114 86000000 		.4byte	.LVL39
 2748 0118 0100     		.2byte	0x1
 2749 011a 55       		.byte	0x55
 2750 011b 00000000 		.4byte	0
 2751 011f 00000000 		.4byte	0
 2752              	.LLST7:
 2753 0123 0A000000 		.4byte	.LVL21
 2754 0127 2A000000 		.4byte	.LVL26
 2755 012b 0100     		.2byte	0x1
 2756 012d 53       		.byte	0x53
 2757 012e 46000000 		.4byte	.LVL30
 2758 0132 5A000000 		.4byte	.LVL34
 2759 0136 0100     		.2byte	0x1
 2760 0138 53       		.byte	0x53
 2761 0139 00000000 		.4byte	0
 2762 013d 00000000 		.4byte	0
 2763              	.LLST8:
 2764 0141 18000000 		.4byte	.LVL22
 2765 0145 1C000000 		.4byte	.LVL23
 2766 0149 0200     		.2byte	0x2
 2767 014b 31       		.byte	0x31
 2768 014c 9F       		.byte	0x9f
 2769 014d 20000000 		.4byte	.LVL24
 2770 0151 22000000 		.4byte	.LVL25
 2771 0155 0200     		.2byte	0x2
 2772 0157 30       		.byte	0x30
 2773 0158 9F       		.byte	0x9f
 2774 0159 22000000 		.4byte	.LVL25
 2775 015d 86000000 		.4byte	.LVL39
 2776 0161 0100     		.2byte	0x1
 2777 0163 56       		.byte	0x56
 2778 0164 00000000 		.4byte	0
 2779 0168 00000000 		.4byte	0
 2780              	.LLST9:
 2781 016c 02000000 		.4byte	.LVL40
 2782 0170 06000000 		.4byte	.LVL41
 2783 0174 0200     		.2byte	0x2
 2784 0176 30       		.byte	0x30
 2785 0177 9F       		.byte	0x9f
 2786 0178 06000000 		.4byte	.LVL41
 2787 017c 20000000 		.4byte	.LVL44
 2788 0180 0100     		.2byte	0x1
 2789 0182 54       		.byte	0x54
 2790 0183 22000000 		.4byte	.LVL45
 2791 0187 28000000 		.4byte	.LVL46
 2792 018b 0100     		.2byte	0x1
 2793 018d 54       		.byte	0x54
 2794 018e 00000000 		.4byte	0
 2795 0192 00000000 		.4byte	0
 2796              	.LLST10:
 2797 0196 10000000 		.4byte	.LVL42
 2798 019a 1D000000 		.4byte	.LVL43-1
 2799 019e 0100     		.2byte	0x1
ARM GAS  C:\Users\sinow\AppData\Local\Temp\cczERXsC.s 			page 85


 2800 01a0 53       		.byte	0x53
 2801 01a1 1D000000 		.4byte	.LVL43-1
 2802 01a5 20000000 		.4byte	.LVL44
 2803 01a9 0700     		.2byte	0x7
 2804 01ab 31       		.byte	0x31
 2805 01ac 74       		.byte	0x74
 2806 01ad 00       		.sleb128 0
 2807 01ae 37       		.byte	0x37
 2808 01af 1A       		.byte	0x1a
 2809 01b0 24       		.byte	0x24
 2810 01b1 9F       		.byte	0x9f
 2811 01b2 20000000 		.4byte	.LVL44
 2812 01b6 22000000 		.4byte	.LVL45
 2813 01ba 0700     		.2byte	0x7
 2814 01bc 31       		.byte	0x31
 2815 01bd 74       		.byte	0x74
 2816 01be 7F       		.sleb128 -1
 2817 01bf 37       		.byte	0x37
 2818 01c0 1A       		.byte	0x1a
 2819 01c1 24       		.byte	0x24
 2820 01c2 9F       		.byte	0x9f
 2821 01c3 00000000 		.4byte	0
 2822 01c7 00000000 		.4byte	0
 2823              	.LLST11:
 2824 01cb 00000000 		.4byte	.LVL47
 2825 01cf 22000000 		.4byte	.LVL50
 2826 01d3 0100     		.2byte	0x1
 2827 01d5 50       		.byte	0x50
 2828 01d6 22000000 		.4byte	.LVL50
 2829 01da 30000000 		.4byte	.LVL51
 2830 01de 0400     		.2byte	0x4
 2831 01e0 F3       		.byte	0xf3
 2832 01e1 01       		.uleb128 0x1
 2833 01e2 50       		.byte	0x50
 2834 01e3 9F       		.byte	0x9f
 2835 01e4 30000000 		.4byte	.LVL51
 2836 01e8 36000000 		.4byte	.LVL52
 2837 01ec 0100     		.2byte	0x1
 2838 01ee 50       		.byte	0x50
 2839 01ef 36000000 		.4byte	.LVL52
 2840 01f3 60000000 		.4byte	.LFE6
 2841 01f7 0400     		.2byte	0x4
 2842 01f9 F3       		.byte	0xf3
 2843 01fa 01       		.uleb128 0x1
 2844 01fb 50       		.byte	0x50
 2845 01fc 9F       		.byte	0x9f
 2846 01fd 00000000 		.4byte	0
 2847 0201 00000000 		.4byte	0
 2848              	.LLST12:
 2849 0205 00000000 		.4byte	.LVL53
 2850 0209 06000000 		.4byte	.LVL55
 2851 020d 0100     		.2byte	0x1
 2852 020f 50       		.byte	0x50
 2853 0210 06000000 		.4byte	.LVL55
 2854 0214 1C000000 		.4byte	.LFE7
 2855 0218 0400     		.2byte	0x4
 2856 021a F3       		.byte	0xf3
ARM GAS  C:\Users\sinow\AppData\Local\Temp\cczERXsC.s 			page 86


 2857 021b 01       		.uleb128 0x1
 2858 021c 50       		.byte	0x50
 2859 021d 9F       		.byte	0x9f
 2860 021e 00000000 		.4byte	0
 2861 0222 00000000 		.4byte	0
 2862              	.LLST13:
 2863 0226 02000000 		.4byte	.LVL54
 2864 022a 06000000 		.4byte	.LVL55
 2865 022e 0200     		.2byte	0x2
 2866 0230 30       		.byte	0x30
 2867 0231 9F       		.byte	0x9f
 2868 0232 06000000 		.4byte	.LVL55
 2869 0236 12000000 		.4byte	.LVL58
 2870 023a 0100     		.2byte	0x1
 2871 023c 54       		.byte	0x54
 2872 023d 14000000 		.4byte	.LVL59
 2873 0241 1C000000 		.4byte	.LFE7
 2874 0245 0100     		.2byte	0x1
 2875 0247 54       		.byte	0x54
 2876 0248 00000000 		.4byte	0
 2877 024c 00000000 		.4byte	0
 2878              	.LLST14:
 2879 0250 02000000 		.4byte	.LVL54
 2880 0254 06000000 		.4byte	.LVL55
 2881 0258 0200     		.2byte	0x2
 2882 025a 30       		.byte	0x30
 2883 025b 9F       		.byte	0x9f
 2884 025c 06000000 		.4byte	.LVL55
 2885 0260 1C000000 		.4byte	.LFE7
 2886 0264 0100     		.2byte	0x1
 2887 0266 55       		.byte	0x55
 2888 0267 00000000 		.4byte	0
 2889 026b 00000000 		.4byte	0
 2890              	.LLST15:
 2891 026f 02000000 		.4byte	.LVL60
 2892 0273 08000000 		.4byte	.LVL61
 2893 0277 0200     		.2byte	0x2
 2894 0279 30       		.byte	0x30
 2895 027a 9F       		.byte	0x9f
 2896 027b 08000000 		.4byte	.LVL61
 2897 027f 14000000 		.4byte	.LVL64
 2898 0283 0100     		.2byte	0x1
 2899 0285 54       		.byte	0x54
 2900 0286 16000000 		.4byte	.LVL65
 2901 028a 1E000000 		.4byte	.LFE8
 2902 028e 0100     		.2byte	0x1
 2903 0290 54       		.byte	0x54
 2904 0291 00000000 		.4byte	0
 2905 0295 00000000 		.4byte	0
 2906              	.LLST16:
 2907 0299 02000000 		.4byte	.LVL60
 2908 029d 08000000 		.4byte	.LVL61
 2909 02a1 0200     		.2byte	0x2
 2910 02a3 30       		.byte	0x30
 2911 02a4 9F       		.byte	0x9f
 2912 02a5 08000000 		.4byte	.LVL61
 2913 02a9 1E000000 		.4byte	.LFE8
ARM GAS  C:\Users\sinow\AppData\Local\Temp\cczERXsC.s 			page 87


 2914 02ad 0100     		.2byte	0x1
 2915 02af 55       		.byte	0x55
 2916 02b0 00000000 		.4byte	0
 2917 02b4 00000000 		.4byte	0
 2918              	.LLST17:
 2919 02b8 00000000 		.4byte	.LVL66
 2920 02bc 04000000 		.4byte	.LVL68
 2921 02c0 0100     		.2byte	0x1
 2922 02c2 50       		.byte	0x50
 2923 02c3 04000000 		.4byte	.LVL68
 2924 02c7 28000000 		.4byte	.LFE9
 2925 02cb 0400     		.2byte	0x4
 2926 02cd F3       		.byte	0xf3
 2927 02ce 01       		.uleb128 0x1
 2928 02cf 50       		.byte	0x50
 2929 02d0 9F       		.byte	0x9f
 2930 02d1 00000000 		.4byte	0
 2931 02d5 00000000 		.4byte	0
 2932              	.LLST18:
 2933 02d9 10000000 		.4byte	.LVL70
 2934 02dd 16000000 		.4byte	.LVL71
 2935 02e1 0100     		.2byte	0x1
 2936 02e3 52       		.byte	0x52
 2937 02e4 16000000 		.4byte	.LVL71
 2938 02e8 1A000000 		.4byte	.LVL72
 2939 02ec 0700     		.2byte	0x7
 2940 02ee 31       		.byte	0x31
 2941 02ef 73       		.byte	0x73
 2942 02f0 00       		.sleb128 0
 2943 02f1 37       		.byte	0x37
 2944 02f2 1A       		.byte	0x1a
 2945 02f3 24       		.byte	0x24
 2946 02f4 9F       		.byte	0x9f
 2947 02f5 1A000000 		.4byte	.LVL72
 2948 02f9 1C000000 		.4byte	.LVL73
 2949 02fd 0700     		.2byte	0x7
 2950 02ff 31       		.byte	0x31
 2951 0300 73       		.byte	0x73
 2952 0301 7F       		.sleb128 -1
 2953 0302 37       		.byte	0x37
 2954 0303 1A       		.byte	0x1a
 2955 0304 24       		.byte	0x24
 2956 0305 9F       		.byte	0x9f
 2957 0306 00000000 		.4byte	0
 2958 030a 00000000 		.4byte	0
 2959              	.LLST19:
 2960 030e 02000000 		.4byte	.LVL67
 2961 0312 04000000 		.4byte	.LVL68
 2962 0316 0200     		.2byte	0x2
 2963 0318 30       		.byte	0x30
 2964 0319 9F       		.byte	0x9f
 2965 031a 04000000 		.4byte	.LVL68
 2966 031e 1A000000 		.4byte	.LVL72
 2967 0322 0100     		.2byte	0x1
 2968 0324 53       		.byte	0x53
 2969 0325 1C000000 		.4byte	.LVL73
 2970 0329 28000000 		.4byte	.LFE9
ARM GAS  C:\Users\sinow\AppData\Local\Temp\cczERXsC.s 			page 88


 2971 032d 0100     		.2byte	0x1
 2972 032f 53       		.byte	0x53
 2973 0330 00000000 		.4byte	0
 2974 0334 00000000 		.4byte	0
 2975              	.LLST20:
 2976 0338 00000000 		.4byte	.LVL74
 2977 033c 04000000 		.4byte	.LVL76
 2978 0340 0100     		.2byte	0x1
 2979 0342 50       		.byte	0x50
 2980 0343 04000000 		.4byte	.LVL76
 2981 0347 2C000000 		.4byte	.LFE10
 2982 034b 0400     		.2byte	0x4
 2983 034d F3       		.byte	0xf3
 2984 034e 01       		.uleb128 0x1
 2985 034f 50       		.byte	0x50
 2986 0350 9F       		.byte	0x9f
 2987 0351 00000000 		.4byte	0
 2988 0355 00000000 		.4byte	0
 2989              	.LLST21:
 2990 0359 10000000 		.4byte	.LVL78
 2991 035d 18000000 		.4byte	.LVL79
 2992 0361 0100     		.2byte	0x1
 2993 0363 52       		.byte	0x52
 2994 0364 18000000 		.4byte	.LVL79
 2995 0368 1C000000 		.4byte	.LVL80
 2996 036c 0700     		.2byte	0x7
 2997 036e 31       		.byte	0x31
 2998 036f 73       		.byte	0x73
 2999 0370 00       		.sleb128 0
 3000 0371 37       		.byte	0x37
 3001 0372 1A       		.byte	0x1a
 3002 0373 24       		.byte	0x24
 3003 0374 9F       		.byte	0x9f
 3004 0375 1C000000 		.4byte	.LVL80
 3005 0379 1E000000 		.4byte	.LVL81
 3006 037d 0700     		.2byte	0x7
 3007 037f 31       		.byte	0x31
 3008 0380 73       		.byte	0x73
 3009 0381 7F       		.sleb128 -1
 3010 0382 37       		.byte	0x37
 3011 0383 1A       		.byte	0x1a
 3012 0384 24       		.byte	0x24
 3013 0385 9F       		.byte	0x9f
 3014 0386 00000000 		.4byte	0
 3015 038a 00000000 		.4byte	0
 3016              	.LLST22:
 3017 038e 02000000 		.4byte	.LVL75
 3018 0392 04000000 		.4byte	.LVL76
 3019 0396 0200     		.2byte	0x2
 3020 0398 30       		.byte	0x30
 3021 0399 9F       		.byte	0x9f
 3022 039a 04000000 		.4byte	.LVL76
 3023 039e 1C000000 		.4byte	.LVL80
 3024 03a2 0100     		.2byte	0x1
 3025 03a4 53       		.byte	0x53
 3026 03a5 1E000000 		.4byte	.LVL81
 3027 03a9 2C000000 		.4byte	.LFE10
ARM GAS  C:\Users\sinow\AppData\Local\Temp\cczERXsC.s 			page 89


 3028 03ad 0100     		.2byte	0x1
 3029 03af 53       		.byte	0x53
 3030 03b0 00000000 		.4byte	0
 3031 03b4 00000000 		.4byte	0
 3032              	.LLST23:
 3033 03b8 00000000 		.4byte	.LVL82
 3034 03bc 0C000000 		.4byte	.LVL85
 3035 03c0 0100     		.2byte	0x1
 3036 03c2 50       		.byte	0x50
 3037 03c3 0C000000 		.4byte	.LVL85
 3038 03c7 30000000 		.4byte	.LFE11
 3039 03cb 0400     		.2byte	0x4
 3040 03cd F3       		.byte	0xf3
 3041 03ce 01       		.uleb128 0x1
 3042 03cf 50       		.byte	0x50
 3043 03d0 9F       		.byte	0x9f
 3044 03d1 00000000 		.4byte	0
 3045 03d5 00000000 		.4byte	0
 3046              	.LLST24:
 3047 03d9 08000000 		.4byte	.LVL84
 3048 03dd 10000000 		.4byte	.LVL86
 3049 03e1 0200     		.2byte	0x2
 3050 03e3 30       		.byte	0x30
 3051 03e4 9F       		.byte	0x9f
 3052 03e5 10000000 		.4byte	.LVL86
 3053 03e9 22000000 		.4byte	.LVL89
 3054 03ed 0100     		.2byte	0x1
 3055 03ef 53       		.byte	0x53
 3056 03f0 24000000 		.4byte	.LVL90
 3057 03f4 30000000 		.4byte	.LFE11
 3058 03f8 0100     		.2byte	0x1
 3059 03fa 53       		.byte	0x53
 3060 03fb 00000000 		.4byte	0
 3061 03ff 00000000 		.4byte	0
 3062              	.LLST25:
 3063 0403 02000000 		.4byte	.LVL83
 3064 0407 10000000 		.4byte	.LVL86
 3065 040b 0300     		.2byte	0x3
 3066 040d 09       		.byte	0x9
 3067 040e FF       		.byte	0xff
 3068 040f 9F       		.byte	0x9f
 3069 0410 10000000 		.4byte	.LVL86
 3070 0414 30000000 		.4byte	.LFE11
 3071 0418 0100     		.2byte	0x1
 3072 041a 50       		.byte	0x50
 3073 041b 00000000 		.4byte	0
 3074 041f 00000000 		.4byte	0
 3075              	.LLST26:
 3076 0423 02000000 		.4byte	.LVL83
 3077 0427 10000000 		.4byte	.LVL86
 3078 042b 0200     		.2byte	0x2
 3079 042d 30       		.byte	0x30
 3080 042e 9F       		.byte	0x9f
 3081 042f 10000000 		.4byte	.LVL86
 3082 0433 1E000000 		.4byte	.LVL87
 3083 0437 0100     		.2byte	0x1
 3084 0439 56       		.byte	0x56
ARM GAS  C:\Users\sinow\AppData\Local\Temp\cczERXsC.s 			page 90


 3085 043a 20000000 		.4byte	.LVL88
 3086 043e 2A000000 		.4byte	.LVL91
 3087 0442 0100     		.2byte	0x1
 3088 0444 56       		.byte	0x56
 3089 0445 00000000 		.4byte	0
 3090 0449 00000000 		.4byte	0
 3091              	.LLST27:
 3092 044d 08000000 		.4byte	.LVL84
 3093 0451 2A000000 		.4byte	.LVL91
 3094 0455 0100     		.2byte	0x1
 3095 0457 55       		.byte	0x55
 3096 0458 00000000 		.4byte	0
 3097 045c 00000000 		.4byte	0
 3098              	.LLST28:
 3099 0460 00000000 		.4byte	.LVL92
 3100 0464 1A000000 		.4byte	.LVL98
 3101 0468 0100     		.2byte	0x1
 3102 046a 50       		.byte	0x50
 3103 046b 1A000000 		.4byte	.LVL98
 3104 046f B8000000 		.4byte	.LFE12
 3105 0473 0400     		.2byte	0x4
 3106 0475 F3       		.byte	0xf3
 3107 0476 01       		.uleb128 0x1
 3108 0477 50       		.byte	0x50
 3109 0478 9F       		.byte	0x9f
 3110 0479 00000000 		.4byte	0
 3111 047d 00000000 		.4byte	0
 3112              	.LLST29:
 3113 0481 00000000 		.4byte	.LVL92
 3114 0485 0C000000 		.4byte	.LVL94
 3115 0489 0100     		.2byte	0x1
 3116 048b 51       		.byte	0x51
 3117 048c 0C000000 		.4byte	.LVL94
 3118 0490 B8000000 		.4byte	.LFE12
 3119 0494 0400     		.2byte	0x4
 3120 0496 F3       		.byte	0xf3
 3121 0497 01       		.uleb128 0x1
 3122 0498 51       		.byte	0x51
 3123 0499 9F       		.byte	0x9f
 3124 049a 00000000 		.4byte	0
 3125 049e 00000000 		.4byte	0
 3126              	.LLST30:
 3127 04a2 00000000 		.4byte	.LVL92
 3128 04a6 36000000 		.4byte	.LVL103
 3129 04aa 0100     		.2byte	0x1
 3130 04ac 52       		.byte	0x52
 3131 04ad 36000000 		.4byte	.LVL103
 3132 04b1 B8000000 		.4byte	.LFE12
 3133 04b5 0400     		.2byte	0x4
 3134 04b7 F3       		.byte	0xf3
 3135 04b8 01       		.uleb128 0x1
 3136 04b9 52       		.byte	0x52
 3137 04ba 9F       		.byte	0x9f
 3138 04bb 00000000 		.4byte	0
 3139 04bf 00000000 		.4byte	0
 3140              	.LLST31:
 3141 04c3 00000000 		.4byte	.LVL92
ARM GAS  C:\Users\sinow\AppData\Local\Temp\cczERXsC.s 			page 91


 3142 04c7 B0000000 		.4byte	.LVL117
 3143 04cb 0200     		.2byte	0x2
 3144 04cd 91       		.byte	0x91
 3145 04ce 00       		.sleb128 0
 3146 04cf B0000000 		.4byte	.LVL117
 3147 04d3 B8000000 		.4byte	.LFE12
 3148 04d7 0200     		.2byte	0x2
 3149 04d9 7D       		.byte	0x7d
 3150 04da 00       		.sleb128 0
 3151 04db 00000000 		.4byte	0
 3152 04df 00000000 		.4byte	0
 3153              	.LLST32:
 3154 04e3 06000000 		.4byte	.LVL93
 3155 04e7 14000000 		.4byte	.LVL95
 3156 04eb 0200     		.2byte	0x2
 3157 04ed 30       		.byte	0x30
 3158 04ee 9F       		.byte	0x9f
 3159 04ef 14000000 		.4byte	.LVL95
 3160 04f3 16000000 		.4byte	.LVL96
 3161 04f7 0100     		.2byte	0x1
 3162 04f9 56       		.byte	0x56
 3163 04fa 16000000 		.4byte	.LVL96
 3164 04fe 18000000 		.4byte	.LVL97
 3165 0502 0200     		.2byte	0x2
 3166 0504 30       		.byte	0x30
 3167 0505 9F       		.byte	0x9f
 3168 0506 18000000 		.4byte	.LVL97
 3169 050a 2A000000 		.4byte	.LVL100
 3170 050e 0100     		.2byte	0x1
 3171 0510 56       		.byte	0x56
 3172 0511 34000000 		.4byte	.LVL102
 3173 0515 4C000000 		.4byte	.LVL106
 3174 0519 0100     		.2byte	0x1
 3175 051b 56       		.byte	0x56
 3176 051c 00000000 		.4byte	0
 3177 0520 00000000 		.4byte	0
 3178              	.LLST33:
 3179 0524 06000000 		.4byte	.LVL93
 3180 0528 1C000000 		.4byte	.LVL99
 3181 052c 0200     		.2byte	0x2
 3182 052e 30       		.byte	0x30
 3183 052f 9F       		.byte	0x9f
 3184 0530 1C000000 		.4byte	.LVL99
 3185 0534 86000000 		.4byte	.LVL108
 3186 0538 0100     		.2byte	0x1
 3187 053a 50       		.byte	0x50
 3188 053b 86000000 		.4byte	.LVL108
 3189 053f B0000000 		.4byte	.LVL117
 3190 0543 0300     		.2byte	0x3
 3191 0545 74       		.byte	0x74
 3192 0546 01       		.sleb128 1
 3193 0547 9F       		.byte	0x9f
 3194 0548 00000000 		.4byte	0
 3195 054c 00000000 		.4byte	0
 3196              	.LLST34:
 3197 0550 AA000000 		.4byte	.LVL115
 3198 0554 AE000000 		.4byte	.LVL116
ARM GAS  C:\Users\sinow\AppData\Local\Temp\cczERXsC.s 			page 92


 3199 0558 0900     		.2byte	0x9
 3200 055a 70       		.byte	0x70
 3201 055b 00       		.sleb128 0
 3202 055c 09       		.byte	0x9
 3203 055d EC       		.byte	0xec
 3204 055e 24       		.byte	0x24
 3205 055f 09       		.byte	0x9
 3206 0560 FC       		.byte	0xfc
 3207 0561 25       		.byte	0x25
 3208 0562 9F       		.byte	0x9f
 3209 0563 AE000000 		.4byte	.LVL116
 3210 0567 B0000000 		.4byte	.LVL117
 3211 056b 2400     		.2byte	0x24
 3212 056d 74       		.byte	0x74
 3213 056e 00       		.sleb128 0
 3214 056f 38       		.byte	0x38
 3215 0570 24       		.byte	0x24
 3216 0571 72       		.byte	0x72
 3217 0572 00       		.sleb128 0
 3218 0573 03       		.byte	0x3
 3219 0574 08000000 		.4byte	CapSense_CSD_centroid.5269+4
 3220 0578 94       		.byte	0x94
 3221 0579 02       		.byte	0x2
 3222 057a 0A       		.byte	0xa
 3223 057b FFFF     		.2byte	0xffff
 3224 057d 1A       		.byte	0x1a
 3225 057e 71       		.byte	0x71
 3226 057f 00       		.sleb128 0
 3227 0580 22       		.byte	0x22
 3228 0581 1B       		.byte	0x1b
 3229 0582 22       		.byte	0x22
 3230 0583 73       		.byte	0x73
 3231 0584 00       		.sleb128 0
 3232 0585 1E       		.byte	0x1e
 3233 0586 23       		.byte	0x23
 3234 0587 80FE01   		.uleb128 0x7f00
 3235 058a 09       		.byte	0x9
 3236 058b EC       		.byte	0xec
 3237 058c 24       		.byte	0x24
 3238 058d 09       		.byte	0x9
 3239 058e FC       		.byte	0xfc
 3240 058f 25       		.byte	0x25
 3241 0590 9F       		.byte	0x9f
 3242 0591 00000000 		.4byte	0
 3243 0595 00000000 		.4byte	0
 3244              	.LLST35:
 3245 0599 92000000 		.4byte	.LVL109
 3246 059d 98000000 		.4byte	.LVL111
 3247 05a1 0100     		.2byte	0x1
 3248 05a3 52       		.byte	0x52
 3249 05a4 98000000 		.4byte	.LVL111
 3250 05a8 B0000000 		.4byte	.LVL117
 3251 05ac 0F00     		.2byte	0xf
 3252 05ae 03       		.byte	0x3
 3253 05af 08000000 		.4byte	CapSense_CSD_centroid.5269+4
 3254 05b3 94       		.byte	0x94
 3255 05b4 02       		.byte	0x2
ARM GAS  C:\Users\sinow\AppData\Local\Temp\cczERXsC.s 			page 93


 3256 05b5 0A       		.byte	0xa
 3257 05b6 FFFF     		.2byte	0xffff
 3258 05b8 1A       		.byte	0x1a
 3259 05b9 75       		.byte	0x75
 3260 05ba 00       		.sleb128 0
 3261 05bb 1C       		.byte	0x1c
 3262 05bc 9F       		.byte	0x9f
 3263 05bd B0000000 		.4byte	.LVL117
 3264 05c1 B8000000 		.4byte	.LFE12
 3265 05c5 1800     		.2byte	0x18
 3266 05c7 03       		.byte	0x3
 3267 05c8 08000000 		.4byte	CapSense_CSD_centroid.5269+4
 3268 05cc 94       		.byte	0x94
 3269 05cd 02       		.byte	0x2
 3270 05ce 0A       		.byte	0xa
 3271 05cf FFFF     		.2byte	0xffff
 3272 05d1 1A       		.byte	0x1a
 3273 05d2 03       		.byte	0x3
 3274 05d3 04000000 		.4byte	CapSense_CSD_centroid.5269
 3275 05d7 94       		.byte	0x94
 3276 05d8 02       		.byte	0x2
 3277 05d9 0A       		.byte	0xa
 3278 05da FFFF     		.2byte	0xffff
 3279 05dc 1A       		.byte	0x1a
 3280 05dd 1C       		.byte	0x1c
 3281 05de 9F       		.byte	0x9f
 3282 05df 00000000 		.4byte	0
 3283 05e3 00000000 		.4byte	0
 3284              	.LLST36:
 3285 05e7 96000000 		.4byte	.LVL110
 3286 05eb 9C000000 		.4byte	.LVL112
 3287 05ef 0100     		.2byte	0x1
 3288 05f1 50       		.byte	0x50
 3289 05f2 9C000000 		.4byte	.LVL112
 3290 05f6 A0000000 		.4byte	.LVL113
 3291 05fa 0F00     		.2byte	0xf
 3292 05fc 03       		.byte	0x3
 3293 05fd 08000000 		.4byte	CapSense_CSD_centroid.5269+4
 3294 0601 94       		.byte	0x94
 3295 0602 02       		.byte	0x2
 3296 0603 0A       		.byte	0xa
 3297 0604 FFFF     		.2byte	0xffff
 3298 0606 1A       		.byte	0x1a
 3299 0607 71       		.byte	0x71
 3300 0608 00       		.sleb128 0
 3301 0609 22       		.byte	0x22
 3302 060a 9F       		.byte	0x9f
 3303 060b A0000000 		.4byte	.LVL113
 3304 060f AA000000 		.4byte	.LVL115
 3305 0613 0100     		.2byte	0x1
 3306 0615 50       		.byte	0x50
 3307 0616 AA000000 		.4byte	.LVL115
 3308 061a AE000000 		.4byte	.LVL116
 3309 061e 0500     		.2byte	0x5
 3310 0620 70       		.byte	0x70
 3311 0621 80827E   		.sleb128 -32512
 3312 0624 9F       		.byte	0x9f
ARM GAS  C:\Users\sinow\AppData\Local\Temp\cczERXsC.s 			page 94


 3313 0625 AE000000 		.4byte	.LVL116
 3314 0629 B0000000 		.4byte	.LVL117
 3315 062d 1A00     		.2byte	0x1a
 3316 062f 74       		.byte	0x74
 3317 0630 00       		.sleb128 0
 3318 0631 38       		.byte	0x38
 3319 0632 24       		.byte	0x24
 3320 0633 72       		.byte	0x72
 3321 0634 00       		.sleb128 0
 3322 0635 03       		.byte	0x3
 3323 0636 08000000 		.4byte	CapSense_CSD_centroid.5269+4
 3324 063a 94       		.byte	0x94
 3325 063b 02       		.byte	0x2
 3326 063c 0A       		.byte	0xa
 3327 063d FFFF     		.2byte	0xffff
 3328 063f 1A       		.byte	0x1a
 3329 0640 71       		.byte	0x71
 3330 0641 00       		.sleb128 0
 3331 0642 22       		.byte	0x22
 3332 0643 1B       		.byte	0x1b
 3333 0644 22       		.byte	0x22
 3334 0645 73       		.byte	0x73
 3335 0646 00       		.sleb128 0
 3336 0647 1E       		.byte	0x1e
 3337 0648 9F       		.byte	0x9f
 3338 0649 00000000 		.4byte	0
 3339 064d 00000000 		.4byte	0
 3340              	.LLST37:
 3341 0651 0C000000 		.4byte	.LVL94
 3342 0655 30000000 		.4byte	.LVL101
 3343 0659 0100     		.2byte	0x1
 3344 065b 51       		.byte	0x51
 3345 065c 34000000 		.4byte	.LVL102
 3346 0660 3E000000 		.4byte	.LVL104
 3347 0664 0100     		.2byte	0x1
 3348 0666 51       		.byte	0x51
 3349 0667 48000000 		.4byte	.LVL105
 3350 066b 54000000 		.4byte	.LVL107
 3351 066f 0100     		.2byte	0x1
 3352 0671 51       		.byte	0x51
 3353 0672 00000000 		.4byte	0
 3354 0676 00000000 		.4byte	0
 3355              	.LLST38:
 3356 067a 00000000 		.4byte	.LVL118
 3357 067e 02000000 		.4byte	.LVL119
 3358 0682 0100     		.2byte	0x1
 3359 0684 50       		.byte	0x50
 3360 0685 02000000 		.4byte	.LVL119
 3361 0689 0C000000 		.4byte	.LFE14
 3362 068d 0400     		.2byte	0x4
 3363 068f F3       		.byte	0xf3
 3364 0690 01       		.uleb128 0x1
 3365 0691 50       		.byte	0x50
 3366 0692 9F       		.byte	0x9f
 3367 0693 00000000 		.4byte	0
 3368 0697 00000000 		.4byte	0
 3369              	.LLST39:
ARM GAS  C:\Users\sinow\AppData\Local\Temp\cczERXsC.s 			page 95


 3370 069b 02000000 		.4byte	.LVL119
 3371 069f 06000000 		.4byte	.LVL120
 3372 06a3 0100     		.2byte	0x1
 3373 06a5 50       		.byte	0x50
 3374 06a6 06000000 		.4byte	.LVL120
 3375 06aa 0A000000 		.4byte	.LVL121
 3376 06ae 0500     		.2byte	0x5
 3377 06b0 70       		.byte	0x70
 3378 06b1 00       		.sleb128 0
 3379 06b2 32       		.byte	0x32
 3380 06b3 25       		.byte	0x25
 3381 06b4 9F       		.byte	0x9f
 3382 06b5 00000000 		.4byte	0
 3383 06b9 00000000 		.4byte	0
 3384              	.LLST40:
 3385 06bd 00000000 		.4byte	.LVL122
 3386 06c1 0E000000 		.4byte	.LVL124
 3387 06c5 0100     		.2byte	0x1
 3388 06c7 50       		.byte	0x50
 3389 06c8 0E000000 		.4byte	.LVL124
 3390 06cc 5C000000 		.4byte	.LFE13
 3391 06d0 0400     		.2byte	0x4
 3392 06d2 F3       		.byte	0xf3
 3393 06d3 01       		.uleb128 0x1
 3394 06d4 50       		.byte	0x50
 3395 06d5 9F       		.byte	0x9f
 3396 06d6 00000000 		.4byte	0
 3397 06da 00000000 		.4byte	0
 3398              	.LLST41:
 3399 06de 2E000000 		.4byte	.LVL128
 3400 06e2 4A000000 		.4byte	.LVL131
 3401 06e6 0100     		.2byte	0x1
 3402 06e8 55       		.byte	0x55
 3403 06e9 00000000 		.4byte	0
 3404 06ed 00000000 		.4byte	0
 3405              	.LLST42:
 3406 06f1 08000000 		.4byte	.LVL123
 3407 06f5 40000000 		.4byte	.LVL129
 3408 06f9 0100     		.2byte	0x1
 3409 06fb 54       		.byte	0x54
 3410 06fc 4A000000 		.4byte	.LVL131
 3411 0700 54000000 		.4byte	.LVL132
 3412 0704 0100     		.2byte	0x1
 3413 0706 54       		.byte	0x54
 3414 0707 00000000 		.4byte	0
 3415 070b 00000000 		.4byte	0
 3416              	.LLST43:
 3417 070f 12000000 		.4byte	.LVL125
 3418 0713 25000000 		.4byte	.LVL126-1
 3419 0717 0100     		.2byte	0x1
 3420 0719 50       		.byte	0x50
 3421 071a 4A000000 		.4byte	.LVL131
 3422 071e 54000000 		.4byte	.LVL132
 3423 0722 0100     		.2byte	0x1
 3424 0724 50       		.byte	0x50
 3425 0725 00000000 		.4byte	0
 3426 0729 00000000 		.4byte	0
ARM GAS  C:\Users\sinow\AppData\Local\Temp\cczERXsC.s 			page 96


 3427              	.LLST44:
 3428 072d 2A000000 		.4byte	.LVL127
 3429 0731 45000000 		.4byte	.LVL130-1
 3430 0735 0100     		.2byte	0x1
 3431 0737 50       		.byte	0x50
 3432 0738 46000000 		.4byte	.LVL130
 3433 073c 4A000000 		.4byte	.LVL131
 3434 0740 0100     		.2byte	0x1
 3435 0742 50       		.byte	0x50
 3436 0743 4A000000 		.4byte	.LVL131
 3437 0747 54000000 		.4byte	.LVL132
 3438 074b 0300     		.2byte	0x3
 3439 074d 09       		.byte	0x9
 3440 074e FF       		.byte	0xff
 3441 074f 9F       		.byte	0x9f
 3442 0750 54000000 		.4byte	.LVL132
 3443 0754 5C000000 		.4byte	.LFE13
 3444 0758 0100     		.2byte	0x1
 3445 075a 50       		.byte	0x50
 3446 075b 00000000 		.4byte	0
 3447 075f 00000000 		.4byte	0
 3448              		.section	.debug_aranges,"",%progbits
 3449 0000 8C000000 		.4byte	0x8c
 3450 0004 0200     		.2byte	0x2
 3451 0006 00000000 		.4byte	.Ldebug_info0
 3452 000a 04       		.byte	0x4
 3453 000b 00       		.byte	0
 3454 000c 0000     		.2byte	0
 3455 000e 0000     		.2byte	0
 3456 0010 00000000 		.4byte	.LFB0
 3457 0014 2C000000 		.4byte	.LFE0-.LFB0
 3458 0018 00000000 		.4byte	.LFB1
 3459 001c 18000000 		.4byte	.LFE1-.LFB1
 3460 0020 00000000 		.4byte	.LFB2
 3461 0024 16000000 		.4byte	.LFE2-.LFB2
 3462 0028 00000000 		.4byte	.LFB3
 3463 002c 44000000 		.4byte	.LFE3-.LFB3
 3464 0030 00000000 		.4byte	.LFB4
 3465 0034 9C000000 		.4byte	.LFE4-.LFB4
 3466 0038 00000000 		.4byte	.LFB5
 3467 003c 2C000000 		.4byte	.LFE5-.LFB5
 3468 0040 00000000 		.4byte	.LFB6
 3469 0044 60000000 		.4byte	.LFE6-.LFB6
 3470 0048 00000000 		.4byte	.LFB7
 3471 004c 1C000000 		.4byte	.LFE7-.LFB7
 3472 0050 00000000 		.4byte	.LFB8
 3473 0054 1E000000 		.4byte	.LFE8-.LFB8
 3474 0058 00000000 		.4byte	.LFB9
 3475 005c 28000000 		.4byte	.LFE9-.LFB9
 3476 0060 00000000 		.4byte	.LFB10
 3477 0064 2C000000 		.4byte	.LFE10-.LFB10
 3478 0068 00000000 		.4byte	.LFB11
 3479 006c 30000000 		.4byte	.LFE11-.LFB11
 3480 0070 00000000 		.4byte	.LFB12
 3481 0074 B8000000 		.4byte	.LFE12-.LFB12
 3482 0078 00000000 		.4byte	.LFB14
 3483 007c 0C000000 		.4byte	.LFE14-.LFB14
ARM GAS  C:\Users\sinow\AppData\Local\Temp\cczERXsC.s 			page 97


 3484 0080 00000000 		.4byte	.LFB13
 3485 0084 5C000000 		.4byte	.LFE13-.LFB13
 3486 0088 00000000 		.4byte	0
 3487 008c 00000000 		.4byte	0
 3488              		.section	.debug_ranges,"",%progbits
 3489              	.Ldebug_ranges0:
 3490 0000 00000000 		.4byte	.LFB0
 3491 0004 2C000000 		.4byte	.LFE0
 3492 0008 00000000 		.4byte	.LFB1
 3493 000c 18000000 		.4byte	.LFE1
 3494 0010 00000000 		.4byte	.LFB2
 3495 0014 16000000 		.4byte	.LFE2
 3496 0018 00000000 		.4byte	.LFB3
 3497 001c 44000000 		.4byte	.LFE3
 3498 0020 00000000 		.4byte	.LFB4
 3499 0024 9C000000 		.4byte	.LFE4
 3500 0028 00000000 		.4byte	.LFB5
 3501 002c 2C000000 		.4byte	.LFE5
 3502 0030 00000000 		.4byte	.LFB6
 3503 0034 60000000 		.4byte	.LFE6
 3504 0038 00000000 		.4byte	.LFB7
 3505 003c 1C000000 		.4byte	.LFE7
 3506 0040 00000000 		.4byte	.LFB8
 3507 0044 1E000000 		.4byte	.LFE8
 3508 0048 00000000 		.4byte	.LFB9
 3509 004c 28000000 		.4byte	.LFE9
 3510 0050 00000000 		.4byte	.LFB10
 3511 0054 2C000000 		.4byte	.LFE10
 3512 0058 00000000 		.4byte	.LFB11
 3513 005c 30000000 		.4byte	.LFE11
 3514 0060 00000000 		.4byte	.LFB12
 3515 0064 B8000000 		.4byte	.LFE12
 3516 0068 00000000 		.4byte	.LFB14
 3517 006c 0C000000 		.4byte	.LFE14
 3518 0070 00000000 		.4byte	.LFB13
 3519 0074 5C000000 		.4byte	.LFE13
 3520 0078 00000000 		.4byte	0
 3521 007c 00000000 		.4byte	0
 3522              		.section	.debug_line,"",%progbits
 3523              	.Ldebug_line0:
 3524 0000 BA020000 		.section	.debug_str,"MS",%progbits,1
 3524      02007700 
 3524      00000201 
 3524      FB0E0D00 
 3524      01010101 
 3525              	.LASF86:
 3526 0000 47656E65 		.ascii	"Generated_Source\\PSoC5\\CapSense_CSD_CSHL.c\000"
 3526      72617465 
 3526      645F536F 
 3526      75726365 
 3526      5C50536F 
 3527              	.LASF47:
 3528 002b 636F756E 		.ascii	"count\000"
 3528      7400
 3529              	.LASF60:
 3530 0031 43617053 		.ascii	"CapSense_CSD_GetCentroidPos\000"
 3530      656E7365 
ARM GAS  C:\Users\sinow\AppData\Local\Temp\cczERXsC.s 			page 98


 3530      5F435344 
 3530      5F476574 
 3530      43656E74 
 3531              	.LASF10:
 3532 004d 75696E74 		.ascii	"uint16\000"
 3532      313600
 3533              	.LASF28:
 3534 0054 66696C74 		.ascii	"filteredRawData\000"
 3534      65726564 
 3534      52617744 
 3534      61746100 
 3535              	.LASF34:
 3536 0064 66696E67 		.ascii	"fingerThreshold\000"
 3536      65725468 
 3536      72657368 
 3536      6F6C6400 
 3537              	.LASF20:
 3538 0074 43617053 		.ascii	"CapSense_CSD_InitializeSensorBaseline\000"
 3538      656E7365 
 3538      5F435344 
 3538      5F496E69 
 3538      7469616C 
 3539              	.LASF53:
 3540 009a 706F7350 		.ascii	"posPrev\000"
 3540      72657600 
 3541              	.LASF7:
 3542 00a2 6C6F6E67 		.ascii	"long long unsigned int\000"
 3542      206C6F6E 
 3542      6720756E 
 3542      7369676E 
 3542      65642069 
 3543              	.LASF62:
 3544 00b9 66697273 		.ascii	"firstTimeIndex\000"
 3544      7454696D 
 3544      65496E64 
 3544      657800
 3545              	.LASF59:
 3546 00c8 43617053 		.ascii	"CapSense_CSD_IIR4Filter\000"
 3546      656E7365 
 3546      5F435344 
 3546      5F494952 
 3546      3446696C 
 3547              	.LASF6:
 3548 00e0 6C6F6E67 		.ascii	"long long int\000"
 3548      206C6F6E 
 3548      6720696E 
 3548      7400
 3549              	.LASF0:
 3550 00ee 7369676E 		.ascii	"signed char\000"
 3550      65642063 
 3550      68617200 
 3551              	.LASF63:
 3552 00fa 706F7346 		.ascii	"posFiltersMask\000"
 3552      696C7465 
 3552      72734D61 
 3552      736B00
 3553              	.LASF39:
ARM GAS  C:\Users\sinow\AppData\Local\Temp\cczERXsC.s 			page 99


 3554 0109 72617749 		.ascii	"rawIndex\000"
 3554      6E646578 
 3554      00
 3555              	.LASF40:
 3556 0112 6E756D62 		.ascii	"numberOfSensors\000"
 3556      65724F66 
 3556      53656E73 
 3556      6F727300 
 3557              	.LASF13:
 3558 0122 696E7433 		.ascii	"int32\000"
 3558      3200
 3559              	.LASF37:
 3560 0128 43617053 		.ascii	"CapSense_CSD_CheckIsSensorActive\000"
 3560      656E7365 
 3560      5F435344 
 3560      5F436865 
 3560      636B4973 
 3561              	.LASF41:
 3562 0149 73746174 		.ascii	"state\000"
 3562      6500
 3563              	.LASF4:
 3564 014f 6C6F6E67 		.ascii	"long int\000"
 3564      20696E74 
 3564      00
 3565              	.LASF57:
 3566 0158 6E756D65 		.ascii	"numerator\000"
 3566      7261746F 
 3566      7200
 3567              	.LASF58:
 3568 0162 64656E6F 		.ascii	"denominator\000"
 3568      6D696E61 
 3568      746F7200 
 3569              	.LASF66:
 3570 016e 43617053 		.ascii	"CapSense_CSD_widgetNumber\000"
 3570      656E7365 
 3570      5F435344 
 3570      5F776964 
 3570      6765744E 
 3571              	.LASF9:
 3572 0188 75696E74 		.ascii	"uint8\000"
 3572      3800
 3573              	.LASF15:
 3574 018e 646F7562 		.ascii	"double\000"
 3574      6C6500
 3575              	.LASF11:
 3576 0195 75696E74 		.ascii	"uint32\000"
 3576      333200
 3577              	.LASF84:
 3578 019c 43617053 		.ascii	"CapSense_CSD_ScanEnabledWidgets\000"
 3578      656E7365 
 3578      5F435344 
 3578      5F536361 
 3578      6E456E61 
 3579              	.LASF35:
 3580 01bc 68797374 		.ascii	"hysteresis\000"
 3580      65726573 
 3580      697300
ARM GAS  C:\Users\sinow\AppData\Local\Temp\cczERXsC.s 			page 100


 3581              	.LASF48:
 3582 01c7 6D617869 		.ascii	"maximum\000"
 3582      6D756D00 
 3583              	.LASF19:
 3584 01cf 43617053 		.ascii	"CapSense_CSD_BaseInit\000"
 3584      656E7365 
 3584      5F435344 
 3584      5F426173 
 3584      65496E69 
 3585              	.LASF54:
 3586 01e5 706F734E 		.ascii	"posNext\000"
 3586      65787400 
 3587              	.LASF67:
 3588 01ed 43617053 		.ascii	"CapSense_CSD_sensorBaseline\000"
 3588      656E7365 
 3588      5F435344 
 3588      5F73656E 
 3588      736F7242 
 3589              	.LASF50:
 3590 0209 73746172 		.ascii	"startOfSlider\000"
 3590      744F6653 
 3590      6C696465 
 3590      7200
 3591              	.LASF49:
 3592 0217 74656D70 		.ascii	"temp\000"
 3592      00
 3593              	.LASF75:
 3594 021c 43617053 		.ascii	"CapSense_CSD_debounce\000"
 3594      656E7365 
 3594      5F435344 
 3594      5F646562 
 3594      6F756E63 
 3595              	.LASF8:
 3596 0232 756E7369 		.ascii	"unsigned int\000"
 3596      676E6564 
 3596      20696E74 
 3596      00
 3597              	.LASF56:
 3598 023f 706F7369 		.ascii	"position\000"
 3598      74696F6E 
 3598      00
 3599              	.LASF5:
 3600 0248 6C6F6E67 		.ascii	"long unsigned int\000"
 3600      20756E73 
 3600      69676E65 
 3600      6420696E 
 3600      7400
 3601              	.LASF69:
 3602 025a 43617053 		.ascii	"CapSense_CSD_sensorSignal\000"
 3602      656E7365 
 3602      5F435344 
 3602      5F73656E 
 3602      736F7253 
 3603              	.LASF55:
 3604 0274 43617053 		.ascii	"CapSense_CSD_centroid\000"
 3604      656E7365 
 3604      5F435344 
ARM GAS  C:\Users\sinow\AppData\Local\Temp\cczERXsC.s 			page 101


 3604      5F63656E 
 3604      74726F69 
 3605              	.LASF3:
 3606 028a 73686F72 		.ascii	"short unsigned int\000"
 3606      7420756E 
 3606      7369676E 
 3606      65642069 
 3606      6E7400
 3607              	.LASF21:
 3608 029d 73656E73 		.ascii	"sensor\000"
 3608      6F7200
 3609              	.LASF51:
 3610 02a4 43617053 		.ascii	"CapSense_CSD_CalcCentroid\000"
 3610      656E7365 
 3610      5F435344 
 3610      5F43616C 
 3610      6343656E 
 3611              	.LASF26:
 3612 02be 63616C63 		.ascii	"calc\000"
 3612      00
 3613              	.LASF82:
 3614 02c3 43617053 		.ascii	"CapSense_CSD_ScanSensor\000"
 3614      656E7365 
 3614      5F435344 
 3614      5F536361 
 3614      6E53656E 
 3615              	.LASF80:
 3616 02db 43617053 		.ascii	"CapSense_CSD_posFiltersMask\000"
 3616      656E7365 
 3616      5F435344 
 3616      5F706F73 
 3616      46696C74 
 3617              	.LASF61:
 3618 02f7 706F7349 		.ascii	"posIndex\000"
 3618      6E646578 
 3618      00
 3619              	.LASF36:
 3620 0300 6465626F 		.ascii	"debounce\000"
 3620      756E6365 
 3620      00
 3621              	.LASF18:
 3622 0309 73697A65 		.ascii	"sizetype\000"
 3622      74797065 
 3622      00
 3623              	.LASF17:
 3624 0312 6C6F6E67 		.ascii	"long double\000"
 3624      20646F75 
 3624      626C6500 
 3625              	.LASF23:
 3626 031e 43617053 		.ascii	"CapSense_CSD_InitializeEnabledBaselines\000"
 3626      656E7365 
 3626      5F435344 
 3626      5F496E69 
 3626      7469616C 
 3627              	.LASF77:
 3628 0346 43617053 		.ascii	"CapSense_CSD_rawDataIndex\000"
 3628      656E7365 
ARM GAS  C:\Users\sinow\AppData\Local\Temp\cczERXsC.s 			page 102


 3628      5F435344 
 3628      5F726177 
 3628      44617461 
 3629              	.LASF24:
 3630 0360 656E4D61 		.ascii	"enMask\000"
 3630      736B00
 3631              	.LASF65:
 3632 0367 43617053 		.ascii	"CapSense_CSD_sensorEnableMask\000"
 3632      656E7365 
 3632      5F435344 
 3632      5F73656E 
 3632      736F7245 
 3633              	.LASF45:
 3634 0385 43617053 		.ascii	"CapSense_CSD_FindMaximum\000"
 3634      656E7365 
 3634      5F435344 
 3634      5F46696E 
 3634      644D6178 
 3635              	.LASF14:
 3636 039e 666C6F61 		.ascii	"float\000"
 3636      7400
 3637              	.LASF71:
 3638 03a4 43617053 		.ascii	"CapSense_CSD_lowBaselineResetCnt\000"
 3638      656E7365 
 3638      5F435344 
 3638      5F6C6F77 
 3638      42617365 
 3639              	.LASF22:
 3640 03c5 43617053 		.ascii	"CapSense_CSD_InitializeAllBaselines\000"
 3640      656E7365 
 3640      5F435344 
 3640      5F496E69 
 3640      7469616C 
 3641              	.LASF72:
 3642 03e9 43617053 		.ascii	"CapSense_CSD_fingerThreshold\000"
 3642      656E7365 
 3642      5F435344 
 3642      5F66696E 
 3642      67657254 
 3643              	.LASF87:
 3644 0406 433A5C55 		.ascii	"C:\\Users\\sinow\\Documents\\PSoC Creator\\Lab 5 - "
 3644      73657273 
 3644      5C73696E 
 3644      6F775C44 
 3644      6F63756D 
 3645 0434 46696E61 		.ascii	"Final Project\\Demo.cydsn\000"
 3645      6C205072 
 3645      6F6A6563 
 3645      745C4465 
 3645      6D6F2E63 
 3646              	.LASF1:
 3647 044d 756E7369 		.ascii	"unsigned char\000"
 3647      676E6564 
 3647      20636861 
 3647      7200
 3648              	.LASF30:
 3649 045b 6E6F6973 		.ascii	"noiseThreshold\000"
ARM GAS  C:\Users\sinow\AppData\Local\Temp\cczERXsC.s 			page 103


 3649      65546872 
 3649      6573686F 
 3649      6C6400
 3650              	.LASF2:
 3651 046a 73686F72 		.ascii	"short int\000"
 3651      7420696E 
 3651      7400
 3652              	.LASF29:
 3653 0474 77696467 		.ascii	"widget\000"
 3653      657400
 3654              	.LASF33:
 3655 047b 6F6E4D61 		.ascii	"onMask\000"
 3655      736B00
 3656              	.LASF85:
 3657 0482 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 3657      43313120 
 3657      352E342E 
 3657      31203230 
 3657      31363036 
 3658 04b5 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 3658      20726576 
 3658      6973696F 
 3658      6E203233 
 3658      37373135 
 3659 04e8 67202D66 		.ascii	"g -ffunction-sections -ffat-lto-objects\000"
 3659      66756E63 
 3659      74696F6E 
 3659      2D736563 
 3659      74696F6E 
 3660              	.LASF83:
 3661 0510 43617053 		.ascii	"CapSense_CSD_IsBusy\000"
 3661      656E7365 
 3661      5F435344 
 3661      5F497342 
 3661      75737900 
 3662              	.LASF64:
 3663 0524 43617053 		.ascii	"CapSense_CSD_sensorRaw\000"
 3663      656E7365 
 3663      5F435344 
 3663      5F73656E 
 3663      736F7252 
 3664              	.LASF81:
 3665 053b 43617053 		.ascii	"CapSense_CSD_posFiltersData\000"
 3665      656E7365 
 3665      5F435344 
 3665      5F706F73 
 3665      46696C74 
 3666              	.LASF25:
 3667 0557 43617053 		.ascii	"CapSense_CSD_UpdateSensorBaseline\000"
 3667      656E7365 
 3667      5F435344 
 3667      5F557064 
 3667      61746553 
 3668              	.LASF52:
 3669 0579 7265736F 		.ascii	"resolution\000"
 3669      6C757469 
 3669      6F6E00
ARM GAS  C:\Users\sinow\AppData\Local\Temp\cczERXsC.s 			page 104


 3670              	.LASF78:
 3671 0584 43617053 		.ascii	"CapSense_CSD_numberOfSensors\000"
 3671      656E7365 
 3671      5F435344 
 3671      5F6E756D 
 3671      6265724F 
 3672              	.LASF73:
 3673 05a1 43617053 		.ascii	"CapSense_CSD_noiseThreshold\000"
 3673      656E7365 
 3673      5F435344 
 3673      5F6E6F69 
 3673      73655468 
 3674              	.LASF16:
 3675 05bd 63686172 		.ascii	"char\000"
 3675      00
 3676              	.LASF43:
 3677 05c2 43617053 		.ascii	"CapSense_CSD_EnableWidget\000"
 3677      656E7365 
 3677      5F435344 
 3677      5F456E61 
 3677      626C6557 
 3678              	.LASF31:
 3679 05dc 43617053 		.ascii	"CapSense_CSD_UpdateEnabledBaselines\000"
 3679      656E7365 
 3679      5F435344 
 3679      5F557064 
 3679      61746545 
 3680              	.LASF46:
 3681 0600 6F666673 		.ascii	"offset\000"
 3681      657400
 3682              	.LASF79:
 3683 0607 43617053 		.ascii	"CapSense_CSD_centroidMult\000"
 3683      656E7365 
 3683      5F435344 
 3683      5F63656E 
 3683      74726F69 
 3684              	.LASF74:
 3685 0621 43617053 		.ascii	"CapSense_CSD_hysteresis\000"
 3685      656E7365 
 3685      5F435344 
 3685      5F687973 
 3685      74657265 
 3686              	.LASF32:
 3687 0639 6465626F 		.ascii	"debounceIndex\000"
 3687      756E6365 
 3687      496E6465 
 3687      7800
 3688              	.LASF42:
 3689 0647 43617053 		.ascii	"CapSense_CSD_CheckIsAnyWidgetActive\000"
 3689      656E7365 
 3689      5F435344 
 3689      5F436865 
 3689      636B4973 
 3690              	.LASF38:
 3691 066b 43617053 		.ascii	"CapSense_CSD_CheckIsWidgetActive\000"
 3691      656E7365 
 3691      5F435344 
ARM GAS  C:\Users\sinow\AppData\Local\Temp\cczERXsC.s 			page 105


 3691      5F436865 
 3691      636B4973 
 3692              	.LASF12:
 3693 068c 696E7431 		.ascii	"int16\000"
 3693      3600
 3694              	.LASF76:
 3695 0692 43617053 		.ascii	"CapSense_CSD_debounceCounter\000"
 3695      656E7365 
 3695      5F435344 
 3695      5F646562 
 3695      6F756E63 
 3696              	.LASF68:
 3697 06af 43617053 		.ascii	"CapSense_CSD_sensorBaselineLow\000"
 3697      656E7365 
 3697      5F435344 
 3697      5F73656E 
 3697      736F7242 
 3698              	.LASF27:
 3699 06ce 74656D70 		.ascii	"tempRaw\000"
 3699      52617700 
 3700              	.LASF44:
 3701 06d6 43617053 		.ascii	"CapSense_CSD_DisableWidget\000"
 3701      656E7365 
 3701      5F435344 
 3701      5F446973 
 3701      61626C65 
 3702              	.LASF70:
 3703 06f1 43617053 		.ascii	"CapSense_CSD_sensorOnMask\000"
 3703      656E7365 
 3703      5F435344 
 3703      5F73656E 
 3703      736F724F 
 3704              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
