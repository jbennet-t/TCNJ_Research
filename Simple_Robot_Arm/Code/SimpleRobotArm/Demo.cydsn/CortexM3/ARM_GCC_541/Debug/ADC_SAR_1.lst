ARM GAS  C:\Users\sinow\AppData\Local\Temp\ccjMou1W.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"ADC_SAR_1.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.ADC_SAR_1_CalcGain,"ax",%progbits
  20              		.align	2
  21              		.thumb
  22              		.thumb_func
  23              		.type	ADC_SAR_1_CalcGain, %function
  24              	ADC_SAR_1_CalcGain:
  25              	.LFB12:
  26              		.file 1 "Generated_Source\\PSoC5\\ADC_SAR_1.c"
   1:Generated_Source\PSoC5/ADC_SAR_1.c **** /*******************************************************************************
   2:Generated_Source\PSoC5/ADC_SAR_1.c **** * File Name: ADC_SAR_1.c
   3:Generated_Source\PSoC5/ADC_SAR_1.c **** * Version 3.10
   4:Generated_Source\PSoC5/ADC_SAR_1.c **** *
   5:Generated_Source\PSoC5/ADC_SAR_1.c **** * Description:
   6:Generated_Source\PSoC5/ADC_SAR_1.c **** *  This file provides the source code to the API for the Successive
   7:Generated_Source\PSoC5/ADC_SAR_1.c **** *  approximation ADC Component.
   8:Generated_Source\PSoC5/ADC_SAR_1.c **** *
   9:Generated_Source\PSoC5/ADC_SAR_1.c **** * Note:
  10:Generated_Source\PSoC5/ADC_SAR_1.c **** *
  11:Generated_Source\PSoC5/ADC_SAR_1.c **** ********************************************************************************
  12:Generated_Source\PSoC5/ADC_SAR_1.c **** * Copyright 2008-2015, Cypress Semiconductor Corporation.  All rights reserved.
  13:Generated_Source\PSoC5/ADC_SAR_1.c **** * You may use this file only in accordance with the license, terms, conditions,
  14:Generated_Source\PSoC5/ADC_SAR_1.c **** * disclaimers, and limitations in the end user license agreement accompanying
  15:Generated_Source\PSoC5/ADC_SAR_1.c **** * the software package with which this file was provided.
  16:Generated_Source\PSoC5/ADC_SAR_1.c **** *******************************************************************************/
  17:Generated_Source\PSoC5/ADC_SAR_1.c **** 
  18:Generated_Source\PSoC5/ADC_SAR_1.c **** #include "CyLib.h"
  19:Generated_Source\PSoC5/ADC_SAR_1.c **** #include "ADC_SAR_1.h"
  20:Generated_Source\PSoC5/ADC_SAR_1.c **** 
  21:Generated_Source\PSoC5/ADC_SAR_1.c **** #if(ADC_SAR_1_DEFAULT_INTERNAL_CLK)
  22:Generated_Source\PSoC5/ADC_SAR_1.c ****     #include "ADC_SAR_1_theACLK.h"
  23:Generated_Source\PSoC5/ADC_SAR_1.c **** #endif /* End ADC_SAR_1_DEFAULT_INTERNAL_CLK */
  24:Generated_Source\PSoC5/ADC_SAR_1.c **** 
  25:Generated_Source\PSoC5/ADC_SAR_1.c **** 
  26:Generated_Source\PSoC5/ADC_SAR_1.c **** /***************************************
  27:Generated_Source\PSoC5/ADC_SAR_1.c **** * Forward function references
  28:Generated_Source\PSoC5/ADC_SAR_1.c **** ***************************************/
  29:Generated_Source\PSoC5/ADC_SAR_1.c **** static void ADC_SAR_1_CalcGain(uint8 resolution);
  30:Generated_Source\PSoC5/ADC_SAR_1.c **** 
  31:Generated_Source\PSoC5/ADC_SAR_1.c **** 
ARM GAS  C:\Users\sinow\AppData\Local\Temp\ccjMou1W.s 			page 2


  32:Generated_Source\PSoC5/ADC_SAR_1.c **** /***************************************
  33:Generated_Source\PSoC5/ADC_SAR_1.c **** * Global data allocation
  34:Generated_Source\PSoC5/ADC_SAR_1.c **** ***************************************/
  35:Generated_Source\PSoC5/ADC_SAR_1.c **** uint8 ADC_SAR_1_initVar = 0u;
  36:Generated_Source\PSoC5/ADC_SAR_1.c **** volatile int16 ADC_SAR_1_offset;
  37:Generated_Source\PSoC5/ADC_SAR_1.c **** volatile int16 ADC_SAR_1_countsPerVolt;     /* Obsolete Gain compensation */
  38:Generated_Source\PSoC5/ADC_SAR_1.c **** volatile int32 ADC_SAR_1_countsPer10Volt;   /* Gain compensation */
  39:Generated_Source\PSoC5/ADC_SAR_1.c **** volatile int16 ADC_SAR_1_shift;
  40:Generated_Source\PSoC5/ADC_SAR_1.c **** 
  41:Generated_Source\PSoC5/ADC_SAR_1.c **** 
  42:Generated_Source\PSoC5/ADC_SAR_1.c **** /*******************************************************************************
  43:Generated_Source\PSoC5/ADC_SAR_1.c **** * Function Name: ADC_SAR_1_Start
  44:Generated_Source\PSoC5/ADC_SAR_1.c **** ********************************************************************************
  45:Generated_Source\PSoC5/ADC_SAR_1.c **** *
  46:Generated_Source\PSoC5/ADC_SAR_1.c **** * Summary:
  47:Generated_Source\PSoC5/ADC_SAR_1.c **** *  This is the preferred method to begin component operation.
  48:Generated_Source\PSoC5/ADC_SAR_1.c **** *  ADC_SAR_1_Start() sets the initVar variable, calls the
  49:Generated_Source\PSoC5/ADC_SAR_1.c **** *  ADC_SAR_1_Init() function, and then calls the
  50:Generated_Source\PSoC5/ADC_SAR_1.c **** *  ADC_SAR_1_Enable() function.
  51:Generated_Source\PSoC5/ADC_SAR_1.c **** *
  52:Generated_Source\PSoC5/ADC_SAR_1.c **** * Parameters:
  53:Generated_Source\PSoC5/ADC_SAR_1.c **** *  None.
  54:Generated_Source\PSoC5/ADC_SAR_1.c **** *
  55:Generated_Source\PSoC5/ADC_SAR_1.c **** * Return:
  56:Generated_Source\PSoC5/ADC_SAR_1.c **** *  None.
  57:Generated_Source\PSoC5/ADC_SAR_1.c **** *
  58:Generated_Source\PSoC5/ADC_SAR_1.c **** * Global variables:
  59:Generated_Source\PSoC5/ADC_SAR_1.c **** *  The ADC_SAR_1_initVar variable is used to indicate when/if initial
  60:Generated_Source\PSoC5/ADC_SAR_1.c **** *  configuration of this component has happened. The variable is initialized to
  61:Generated_Source\PSoC5/ADC_SAR_1.c **** *  zero and set to 1 the first time ADC_Start() is called. This allows for
  62:Generated_Source\PSoC5/ADC_SAR_1.c **** *  component Re-Start without re-initialization in all subsequent calls to the
  63:Generated_Source\PSoC5/ADC_SAR_1.c **** *  ADC_SAR_1_Start() routine.
  64:Generated_Source\PSoC5/ADC_SAR_1.c **** *  If re-initialization of the component is required the variable should be set
  65:Generated_Source\PSoC5/ADC_SAR_1.c **** *  to zero before call of ADC_SAR_1_Start() routine, or the user may call
  66:Generated_Source\PSoC5/ADC_SAR_1.c **** *  ADC_SAR_1_Init() and ADC_SAR_1_Enable() as done in the
  67:Generated_Source\PSoC5/ADC_SAR_1.c **** *  ADC_SAR_1_Start() routine.
  68:Generated_Source\PSoC5/ADC_SAR_1.c **** *
  69:Generated_Source\PSoC5/ADC_SAR_1.c **** * Side Effect:
  70:Generated_Source\PSoC5/ADC_SAR_1.c **** *  If the initVar variable is already set, this function only calls the
  71:Generated_Source\PSoC5/ADC_SAR_1.c **** *  ADC_SAR_1_Enable() function.
  72:Generated_Source\PSoC5/ADC_SAR_1.c **** *
  73:Generated_Source\PSoC5/ADC_SAR_1.c **** *******************************************************************************/
  74:Generated_Source\PSoC5/ADC_SAR_1.c **** void ADC_SAR_1_Start(void)
  75:Generated_Source\PSoC5/ADC_SAR_1.c **** {
  76:Generated_Source\PSoC5/ADC_SAR_1.c **** 
  77:Generated_Source\PSoC5/ADC_SAR_1.c ****     /* If not Initialized then initialize all required hardware and software */
  78:Generated_Source\PSoC5/ADC_SAR_1.c ****     if(ADC_SAR_1_initVar == 0u)
  79:Generated_Source\PSoC5/ADC_SAR_1.c ****     {
  80:Generated_Source\PSoC5/ADC_SAR_1.c ****         ADC_SAR_1_Init();
  81:Generated_Source\PSoC5/ADC_SAR_1.c ****         ADC_SAR_1_initVar = 1u;
  82:Generated_Source\PSoC5/ADC_SAR_1.c ****     }
  83:Generated_Source\PSoC5/ADC_SAR_1.c ****     ADC_SAR_1_Enable();
  84:Generated_Source\PSoC5/ADC_SAR_1.c **** }
  85:Generated_Source\PSoC5/ADC_SAR_1.c **** 
  86:Generated_Source\PSoC5/ADC_SAR_1.c **** 
  87:Generated_Source\PSoC5/ADC_SAR_1.c **** /*******************************************************************************
  88:Generated_Source\PSoC5/ADC_SAR_1.c **** * Function Name: ADC_SAR_1_Init
ARM GAS  C:\Users\sinow\AppData\Local\Temp\ccjMou1W.s 			page 3


  89:Generated_Source\PSoC5/ADC_SAR_1.c **** ********************************************************************************
  90:Generated_Source\PSoC5/ADC_SAR_1.c **** *
  91:Generated_Source\PSoC5/ADC_SAR_1.c **** * Summary:
  92:Generated_Source\PSoC5/ADC_SAR_1.c **** *  Initialize component's parameters to the parameters set by user in the
  93:Generated_Source\PSoC5/ADC_SAR_1.c **** *  customizer of the component placed onto schematic. Usually called in
  94:Generated_Source\PSoC5/ADC_SAR_1.c **** *  ADC_SAR_1_Start().
  95:Generated_Source\PSoC5/ADC_SAR_1.c **** *
  96:Generated_Source\PSoC5/ADC_SAR_1.c **** * Parameters:
  97:Generated_Source\PSoC5/ADC_SAR_1.c **** *  None.
  98:Generated_Source\PSoC5/ADC_SAR_1.c **** *
  99:Generated_Source\PSoC5/ADC_SAR_1.c **** * Return:
 100:Generated_Source\PSoC5/ADC_SAR_1.c **** *  None.
 101:Generated_Source\PSoC5/ADC_SAR_1.c **** *
 102:Generated_Source\PSoC5/ADC_SAR_1.c **** * Global variables:
 103:Generated_Source\PSoC5/ADC_SAR_1.c **** *  The ADC_SAR_1_offset variable is initialized to 0.
 104:Generated_Source\PSoC5/ADC_SAR_1.c **** *
 105:Generated_Source\PSoC5/ADC_SAR_1.c **** *******************************************************************************/
 106:Generated_Source\PSoC5/ADC_SAR_1.c **** void ADC_SAR_1_Init(void)
 107:Generated_Source\PSoC5/ADC_SAR_1.c **** {
 108:Generated_Source\PSoC5/ADC_SAR_1.c **** 
 109:Generated_Source\PSoC5/ADC_SAR_1.c ****     /* This is only valid if there is an internal clock */
 110:Generated_Source\PSoC5/ADC_SAR_1.c ****     #if(ADC_SAR_1_DEFAULT_INTERNAL_CLK)
 111:Generated_Source\PSoC5/ADC_SAR_1.c ****         ADC_SAR_1_theACLK_SetMode(CYCLK_DUTY);
 112:Generated_Source\PSoC5/ADC_SAR_1.c ****     #endif /* End ADC_SAR_1_DEFAULT_INTERNAL_CLK */
 113:Generated_Source\PSoC5/ADC_SAR_1.c **** 
 114:Generated_Source\PSoC5/ADC_SAR_1.c ****     #if(ADC_SAR_1_IRQ_REMOVE == 0u)
 115:Generated_Source\PSoC5/ADC_SAR_1.c ****         /* Start and set interrupt vector */
 116:Generated_Source\PSoC5/ADC_SAR_1.c ****         CyIntSetPriority(ADC_SAR_1_INTC_NUMBER, ADC_SAR_1_INTC_PRIOR_NUMBER);
 117:Generated_Source\PSoC5/ADC_SAR_1.c ****         (void)CyIntSetVector(ADC_SAR_1_INTC_NUMBER, &ADC_SAR_1_ISR);
 118:Generated_Source\PSoC5/ADC_SAR_1.c ****     #endif   /* End ADC_SAR_1_IRQ_REMOVE */
 119:Generated_Source\PSoC5/ADC_SAR_1.c **** 
 120:Generated_Source\PSoC5/ADC_SAR_1.c ****     /* Enable IRQ mode*/
 121:Generated_Source\PSoC5/ADC_SAR_1.c ****     ADC_SAR_1_SAR_CSR1_REG |= ADC_SAR_1_SAR_IRQ_MASK_EN | ADC_SAR_1_SAR_IRQ_MODE_EDGE;
 122:Generated_Source\PSoC5/ADC_SAR_1.c **** 
 123:Generated_Source\PSoC5/ADC_SAR_1.c ****     /*Set SAR ADC resolution ADC */
 124:Generated_Source\PSoC5/ADC_SAR_1.c ****     ADC_SAR_1_SetResolution(ADC_SAR_1_DEFAULT_RESOLUTION);
 125:Generated_Source\PSoC5/ADC_SAR_1.c ****     ADC_SAR_1_offset = 0;
 126:Generated_Source\PSoC5/ADC_SAR_1.c **** }
 127:Generated_Source\PSoC5/ADC_SAR_1.c **** 
 128:Generated_Source\PSoC5/ADC_SAR_1.c **** 
 129:Generated_Source\PSoC5/ADC_SAR_1.c **** /*******************************************************************************
 130:Generated_Source\PSoC5/ADC_SAR_1.c **** * Function Name: ADC_SAR_1_Enable
 131:Generated_Source\PSoC5/ADC_SAR_1.c **** ********************************************************************************
 132:Generated_Source\PSoC5/ADC_SAR_1.c **** *
 133:Generated_Source\PSoC5/ADC_SAR_1.c **** * Summary:
 134:Generated_Source\PSoC5/ADC_SAR_1.c **** *  Enables the reference, clock and power for SAR ADC.
 135:Generated_Source\PSoC5/ADC_SAR_1.c **** *
 136:Generated_Source\PSoC5/ADC_SAR_1.c **** * Parameters:
 137:Generated_Source\PSoC5/ADC_SAR_1.c **** *  None.
 138:Generated_Source\PSoC5/ADC_SAR_1.c **** *
 139:Generated_Source\PSoC5/ADC_SAR_1.c **** * Return:
 140:Generated_Source\PSoC5/ADC_SAR_1.c **** *  None.
 141:Generated_Source\PSoC5/ADC_SAR_1.c **** *
 142:Generated_Source\PSoC5/ADC_SAR_1.c **** *******************************************************************************/
 143:Generated_Source\PSoC5/ADC_SAR_1.c **** void ADC_SAR_1_Enable(void)
 144:Generated_Source\PSoC5/ADC_SAR_1.c **** {
 145:Generated_Source\PSoC5/ADC_SAR_1.c ****     uint8 tmpReg;
ARM GAS  C:\Users\sinow\AppData\Local\Temp\ccjMou1W.s 			page 4


 146:Generated_Source\PSoC5/ADC_SAR_1.c ****     uint8 enableInterrupts;
 147:Generated_Source\PSoC5/ADC_SAR_1.c ****     enableInterrupts = CyEnterCriticalSection();
 148:Generated_Source\PSoC5/ADC_SAR_1.c **** 
 149:Generated_Source\PSoC5/ADC_SAR_1.c ****     /* Enable the SAR ADC block in Active Power Mode */
 150:Generated_Source\PSoC5/ADC_SAR_1.c ****     ADC_SAR_1_PWRMGR_SAR_REG |= ADC_SAR_1_ACT_PWR_SAR_EN;
 151:Generated_Source\PSoC5/ADC_SAR_1.c **** 
 152:Generated_Source\PSoC5/ADC_SAR_1.c ****      /* Enable the SAR ADC in Standby Power Mode*/
 153:Generated_Source\PSoC5/ADC_SAR_1.c ****     ADC_SAR_1_STBY_PWRMGR_SAR_REG |= ADC_SAR_1_STBY_PWR_SAR_EN;
 154:Generated_Source\PSoC5/ADC_SAR_1.c **** 
 155:Generated_Source\PSoC5/ADC_SAR_1.c ****     /* This is only valid if there is an internal clock */
 156:Generated_Source\PSoC5/ADC_SAR_1.c ****     #if(ADC_SAR_1_DEFAULT_INTERNAL_CLK)
 157:Generated_Source\PSoC5/ADC_SAR_1.c ****         ADC_SAR_1_PWRMGR_CLK_REG |= ADC_SAR_1_ACT_PWR_CLK_EN;
 158:Generated_Source\PSoC5/ADC_SAR_1.c ****         ADC_SAR_1_STBY_PWRMGR_CLK_REG |= ADC_SAR_1_STBY_PWR_CLK_EN;
 159:Generated_Source\PSoC5/ADC_SAR_1.c ****     #endif /* End ADC_SAR_1_DEFAULT_INTERNAL_CLK */
 160:Generated_Source\PSoC5/ADC_SAR_1.c **** 
 161:Generated_Source\PSoC5/ADC_SAR_1.c ****     /* Enable VCM buffer and Enable Int Ref Amp */
 162:Generated_Source\PSoC5/ADC_SAR_1.c ****     tmpReg = ADC_SAR_1_SAR_CSR3_REG;
 163:Generated_Source\PSoC5/ADC_SAR_1.c ****     tmpReg |= ADC_SAR_1_SAR_EN_BUF_VCM_EN;
 164:Generated_Source\PSoC5/ADC_SAR_1.c ****     /* PD_BUF_VREF is OFF in External reference or Vdda reference mode */
 165:Generated_Source\PSoC5/ADC_SAR_1.c ****     #if((ADC_SAR_1_DEFAULT_REFERENCE == ADC_SAR_1__EXT_REF) || \
 166:Generated_Source\PSoC5/ADC_SAR_1.c ****         (ADC_SAR_1_DEFAULT_RANGE == ADC_SAR_1__VNEG_VDDA_DIFF))
 167:Generated_Source\PSoC5/ADC_SAR_1.c ****         tmpReg &= (uint8)~ADC_SAR_1_SAR_EN_BUF_VREF_EN;
 168:Generated_Source\PSoC5/ADC_SAR_1.c ****     #else /* In INTREF or INTREF Bypassed this buffer is ON */
 169:Generated_Source\PSoC5/ADC_SAR_1.c ****         tmpReg |= ADC_SAR_1_SAR_EN_BUF_VREF_EN;
 170:Generated_Source\PSoC5/ADC_SAR_1.c ****     #endif /* ADC_SAR_1_DEFAULT_REFERENCE == ADC_SAR_1__EXT_REF */
 171:Generated_Source\PSoC5/ADC_SAR_1.c ****     ADC_SAR_1_SAR_CSR3_REG = tmpReg;
 172:Generated_Source\PSoC5/ADC_SAR_1.c **** 
 173:Generated_Source\PSoC5/ADC_SAR_1.c ****     /* Set reference for ADC */
 174:Generated_Source\PSoC5/ADC_SAR_1.c ****     #if(ADC_SAR_1_DEFAULT_RANGE == ADC_SAR_1__VNEG_VDDA_DIFF)
 175:Generated_Source\PSoC5/ADC_SAR_1.c ****         #if(ADC_SAR_1_DEFAULT_REFERENCE == ADC_SAR_1__EXT_REF)
 176:Generated_Source\PSoC5/ADC_SAR_1.c ****             ADC_SAR_1_SAR_CSR6_REG = ADC_SAR_1_INT_BYPASS_EXT_VREF; /* S2 */
 177:Generated_Source\PSoC5/ADC_SAR_1.c ****         #else /* Internal Vdda reference or obsolete bypass mode */
 178:Generated_Source\PSoC5/ADC_SAR_1.c ****             ADC_SAR_1_SAR_CSR6_REG = ADC_SAR_1_VDDA_VREF;           /* S7 */
 179:Generated_Source\PSoC5/ADC_SAR_1.c ****         #endif /* ADC_SAR_1_DEFAULT_REFERENCE == ADC_SAR_1__EXT_REF */
 180:Generated_Source\PSoC5/ADC_SAR_1.c ****     #else  /* Reference goes through internal buffer */
 181:Generated_Source\PSoC5/ADC_SAR_1.c ****         #if(ADC_SAR_1_DEFAULT_REFERENCE == ADC_SAR_1__INT_REF_NOT_BYPASSED)
 182:Generated_Source\PSoC5/ADC_SAR_1.c ****             ADC_SAR_1_SAR_CSR6_REG = ADC_SAR_1_INT_VREF;            /* S3 + S4 */
 183:Generated_Source\PSoC5/ADC_SAR_1.c ****         #else /* INTREF Bypassed of External */
 184:Generated_Source\PSoC5/ADC_SAR_1.c ****             ADC_SAR_1_SAR_CSR6_REG = ADC_SAR_1_INT_BYPASS_EXT_VREF; /* S2 */
 185:Generated_Source\PSoC5/ADC_SAR_1.c ****         #endif /* ADC_SAR_1_DEFAULT_REFERENCE == ADC_SAR_1__INT_REF_NOT_BYPASSED */
 186:Generated_Source\PSoC5/ADC_SAR_1.c ****     #endif /* VNEG_VDDA_DIFF */
 187:Generated_Source\PSoC5/ADC_SAR_1.c **** 
 188:Generated_Source\PSoC5/ADC_SAR_1.c ****     /* Low non-overlap delay for sampling clock signals (for 1MSPS) */
 189:Generated_Source\PSoC5/ADC_SAR_1.c ****     #if(ADC_SAR_1_HIGH_POWER_PULSE == 0u) /* MinPulseWidth <= 50 ns */
 190:Generated_Source\PSoC5/ADC_SAR_1.c ****         ADC_SAR_1_SAR_CSR5_REG &= (uint8)~ADC_SAR_1_SAR_DLY_INC;
 191:Generated_Source\PSoC5/ADC_SAR_1.c ****     #else /* Set High non-overlap delay for sampling clock signals (for <500KSPS)*/
 192:Generated_Source\PSoC5/ADC_SAR_1.c ****         ADC_SAR_1_SAR_CSR5_REG |= ADC_SAR_1_SAR_DLY_INC;
 193:Generated_Source\PSoC5/ADC_SAR_1.c ****     #endif /* ADC_SAR_1_HIGH_POWER_PULSE == 0u */
 194:Generated_Source\PSoC5/ADC_SAR_1.c **** 
 195:Generated_Source\PSoC5/ADC_SAR_1.c ****     /* Increase comparator latch enable delay by 20%, 
 196:Generated_Source\PSoC5/ADC_SAR_1.c ****     *  Increase comparator bias current by 30% without impacting delaysDelay 
 197:Generated_Source\PSoC5/ADC_SAR_1.c ****     *  Default for 1MSPS) 
 198:Generated_Source\PSoC5/ADC_SAR_1.c ****     */
 199:Generated_Source\PSoC5/ADC_SAR_1.c ****     #if(ADC_SAR_1_HIGH_POWER_PULSE == 0u)    /* MinPulseWidth <= 50 ns */
 200:Generated_Source\PSoC5/ADC_SAR_1.c ****         ADC_SAR_1_SAR_CSR5_REG |= ADC_SAR_1_SAR_SEL_CSEL_DFT_CHAR;
 201:Generated_Source\PSoC5/ADC_SAR_1.c ****     #else /* for <500ksps */
 202:Generated_Source\PSoC5/ADC_SAR_1.c ****         ADC_SAR_1_SAR_CSR5_REG &= (uint8)~ADC_SAR_1_SAR_SEL_CSEL_DFT_CHAR;
ARM GAS  C:\Users\sinow\AppData\Local\Temp\ccjMou1W.s 			page 5


 203:Generated_Source\PSoC5/ADC_SAR_1.c ****     #endif /* ADC_SAR_1_HIGH_POWER_PULSE == 0u */
 204:Generated_Source\PSoC5/ADC_SAR_1.c **** 
 205:Generated_Source\PSoC5/ADC_SAR_1.c ****     /* Set default power and other configurations for control register 0 in multiple lines */
 206:Generated_Source\PSoC5/ADC_SAR_1.c ****     ADC_SAR_1_SAR_CSR0_REG = (uint8)((uint8)ADC_SAR_1_DEFAULT_POWER << ADC_SAR_1_SAR_POWER_SHIFT)
 207:Generated_Source\PSoC5/ADC_SAR_1.c ****     /* SAR_HIZ_CLEAR:   Should not be used for LP */
 208:Generated_Source\PSoC5/ADC_SAR_1.c ****     #if ((CY_PSOC5LP) || (ADC_SAR_1_DEFAULT_REFERENCE != ADC_SAR_1__EXT_REF))
 209:Generated_Source\PSoC5/ADC_SAR_1.c ****         | ADC_SAR_1_SAR_HIZ_CLEAR
 210:Generated_Source\PSoC5/ADC_SAR_1.c ****     #endif /* SAR_HIZ_CLEAR */
 211:Generated_Source\PSoC5/ADC_SAR_1.c ****     /*Set Convertion mode */
 212:Generated_Source\PSoC5/ADC_SAR_1.c ****     #if(ADC_SAR_1_DEFAULT_CONV_MODE != ADC_SAR_1__FREE_RUNNING)      /* If triggered mode */
 213:Generated_Source\PSoC5/ADC_SAR_1.c ****         | ADC_SAR_1_SAR_MX_SOF_UDB           /* source: UDB */
 214:Generated_Source\PSoC5/ADC_SAR_1.c ****         | ADC_SAR_1_SAR_SOF_MODE_EDGE        /* Set edge-sensitive sof source */
 215:Generated_Source\PSoC5/ADC_SAR_1.c ****     #endif /* ADC_SAR_1_DEFAULT_CONV_MODE */
 216:Generated_Source\PSoC5/ADC_SAR_1.c ****     ; /* end of multiple line initialization */
 217:Generated_Source\PSoC5/ADC_SAR_1.c **** 
 218:Generated_Source\PSoC5/ADC_SAR_1.c ****     ADC_SAR_1_SAR_TR0_REG = ADC_SAR_1_SAR_CAP_TRIM_2;
 219:Generated_Source\PSoC5/ADC_SAR_1.c **** 
 220:Generated_Source\PSoC5/ADC_SAR_1.c ****     /* Enable clock for SAR ADC*/
 221:Generated_Source\PSoC5/ADC_SAR_1.c ****     ADC_SAR_1_SAR_CLK_REG |= ADC_SAR_1_SAR_MX_CLK_EN;
 222:Generated_Source\PSoC5/ADC_SAR_1.c **** 
 223:Generated_Source\PSoC5/ADC_SAR_1.c ****     CyDelayUs(10u); /* The block is ready to use 10 us after the enable signal is set high. */
 224:Generated_Source\PSoC5/ADC_SAR_1.c **** 
 225:Generated_Source\PSoC5/ADC_SAR_1.c ****     #if(ADC_SAR_1_IRQ_REMOVE == 0u)
 226:Generated_Source\PSoC5/ADC_SAR_1.c ****         /* Clear a pending interrupt */
 227:Generated_Source\PSoC5/ADC_SAR_1.c ****         CyIntClearPending(ADC_SAR_1_INTC_NUMBER);
 228:Generated_Source\PSoC5/ADC_SAR_1.c ****     #endif   /* End ADC_SAR_1_IRQ_REMOVE */
 229:Generated_Source\PSoC5/ADC_SAR_1.c **** 
 230:Generated_Source\PSoC5/ADC_SAR_1.c ****     CyExitCriticalSection(enableInterrupts);
 231:Generated_Source\PSoC5/ADC_SAR_1.c **** }
 232:Generated_Source\PSoC5/ADC_SAR_1.c **** 
 233:Generated_Source\PSoC5/ADC_SAR_1.c **** 
 234:Generated_Source\PSoC5/ADC_SAR_1.c **** /*******************************************************************************
 235:Generated_Source\PSoC5/ADC_SAR_1.c **** * Function Name: ADC_SAR_1_Stop
 236:Generated_Source\PSoC5/ADC_SAR_1.c **** ********************************************************************************
 237:Generated_Source\PSoC5/ADC_SAR_1.c **** *
 238:Generated_Source\PSoC5/ADC_SAR_1.c **** * Summary:
 239:Generated_Source\PSoC5/ADC_SAR_1.c **** *  Stops ADC conversions and puts the ADC into its lowest power mode.
 240:Generated_Source\PSoC5/ADC_SAR_1.c **** *
 241:Generated_Source\PSoC5/ADC_SAR_1.c **** * Parameters:
 242:Generated_Source\PSoC5/ADC_SAR_1.c **** *  None.
 243:Generated_Source\PSoC5/ADC_SAR_1.c **** *
 244:Generated_Source\PSoC5/ADC_SAR_1.c **** * Return:
 245:Generated_Source\PSoC5/ADC_SAR_1.c **** *  None.
 246:Generated_Source\PSoC5/ADC_SAR_1.c **** *
 247:Generated_Source\PSoC5/ADC_SAR_1.c **** *******************************************************************************/
 248:Generated_Source\PSoC5/ADC_SAR_1.c **** void ADC_SAR_1_Stop(void)
 249:Generated_Source\PSoC5/ADC_SAR_1.c **** {
 250:Generated_Source\PSoC5/ADC_SAR_1.c ****     uint8 enableInterrupts;
 251:Generated_Source\PSoC5/ADC_SAR_1.c ****     enableInterrupts = CyEnterCriticalSection();
 252:Generated_Source\PSoC5/ADC_SAR_1.c **** 
 253:Generated_Source\PSoC5/ADC_SAR_1.c ****     /* Stop all conversions */
 254:Generated_Source\PSoC5/ADC_SAR_1.c ****     ADC_SAR_1_SAR_CSR0_REG &= (uint8)~ADC_SAR_1_SAR_SOF_START_CONV;
 255:Generated_Source\PSoC5/ADC_SAR_1.c ****     /* Disable the SAR ADC block in Active Power Mode */
 256:Generated_Source\PSoC5/ADC_SAR_1.c ****     ADC_SAR_1_PWRMGR_SAR_REG &= (uint8)~ADC_SAR_1_ACT_PWR_SAR_EN;
 257:Generated_Source\PSoC5/ADC_SAR_1.c ****     /* Disable the SAR ADC in Standby Power Mode */
 258:Generated_Source\PSoC5/ADC_SAR_1.c ****     ADC_SAR_1_STBY_PWRMGR_SAR_REG &= (uint8)~ADC_SAR_1_STBY_PWR_SAR_EN;
 259:Generated_Source\PSoC5/ADC_SAR_1.c **** 
ARM GAS  C:\Users\sinow\AppData\Local\Temp\ccjMou1W.s 			page 6


 260:Generated_Source\PSoC5/ADC_SAR_1.c ****     /* This is only valid if there is an internal clock */
 261:Generated_Source\PSoC5/ADC_SAR_1.c ****     #if(ADC_SAR_1_DEFAULT_INTERNAL_CLK)
 262:Generated_Source\PSoC5/ADC_SAR_1.c ****         ADC_SAR_1_PWRMGR_CLK_REG &= (uint8)~ADC_SAR_1_ACT_PWR_CLK_EN;
 263:Generated_Source\PSoC5/ADC_SAR_1.c ****         ADC_SAR_1_STBY_PWRMGR_CLK_REG &= (uint8)~ADC_SAR_1_STBY_PWR_CLK_EN;
 264:Generated_Source\PSoC5/ADC_SAR_1.c ****     #endif /* End ADC_SAR_1_DEFAULT_INTERNAL_CLK */
 265:Generated_Source\PSoC5/ADC_SAR_1.c **** 
 266:Generated_Source\PSoC5/ADC_SAR_1.c ****     CyExitCriticalSection(enableInterrupts);
 267:Generated_Source\PSoC5/ADC_SAR_1.c **** 
 268:Generated_Source\PSoC5/ADC_SAR_1.c **** }
 269:Generated_Source\PSoC5/ADC_SAR_1.c **** 
 270:Generated_Source\PSoC5/ADC_SAR_1.c **** 
 271:Generated_Source\PSoC5/ADC_SAR_1.c **** /*******************************************************************************
 272:Generated_Source\PSoC5/ADC_SAR_1.c **** * Function Name: ADC_SAR_1_SetPower
 273:Generated_Source\PSoC5/ADC_SAR_1.c **** ********************************************************************************
 274:Generated_Source\PSoC5/ADC_SAR_1.c **** *
 275:Generated_Source\PSoC5/ADC_SAR_1.c **** * Summary:
 276:Generated_Source\PSoC5/ADC_SAR_1.c **** *  Sets the operational power of the ADC. You should use the higher power
 277:Generated_Source\PSoC5/ADC_SAR_1.c **** *  settings with faster clock speeds.
 278:Generated_Source\PSoC5/ADC_SAR_1.c **** *
 279:Generated_Source\PSoC5/ADC_SAR_1.c **** * Parameters:
 280:Generated_Source\PSoC5/ADC_SAR_1.c **** *  power:  Power setting for ADC
 281:Generated_Source\PSoC5/ADC_SAR_1.c **** *  0 ->    Normal
 282:Generated_Source\PSoC5/ADC_SAR_1.c **** *  1 ->    Medium power
 283:Generated_Source\PSoC5/ADC_SAR_1.c **** *  2 ->    1.25 power
 284:Generated_Source\PSoC5/ADC_SAR_1.c **** *  3 ->    Minimum power.
 285:Generated_Source\PSoC5/ADC_SAR_1.c **** *
 286:Generated_Source\PSoC5/ADC_SAR_1.c **** * Return:
 287:Generated_Source\PSoC5/ADC_SAR_1.c **** *  None.
 288:Generated_Source\PSoC5/ADC_SAR_1.c **** *
 289:Generated_Source\PSoC5/ADC_SAR_1.c **** *******************************************************************************/
 290:Generated_Source\PSoC5/ADC_SAR_1.c **** void ADC_SAR_1_SetPower(uint8 power)
 291:Generated_Source\PSoC5/ADC_SAR_1.c **** {
 292:Generated_Source\PSoC5/ADC_SAR_1.c ****     uint8 tmpReg;
 293:Generated_Source\PSoC5/ADC_SAR_1.c **** 
 294:Generated_Source\PSoC5/ADC_SAR_1.c ****     /* mask off invalid power settings */
 295:Generated_Source\PSoC5/ADC_SAR_1.c ****     power &= ADC_SAR_1_SAR_API_POWER_MASK;
 296:Generated_Source\PSoC5/ADC_SAR_1.c **** 
 297:Generated_Source\PSoC5/ADC_SAR_1.c ****     /* Set Power parameter  */
 298:Generated_Source\PSoC5/ADC_SAR_1.c ****     tmpReg = ADC_SAR_1_SAR_CSR0_REG & (uint8)~ADC_SAR_1_SAR_POWER_MASK;
 299:Generated_Source\PSoC5/ADC_SAR_1.c ****     tmpReg |= (uint8)(power << ADC_SAR_1_SAR_POWER_SHIFT);
 300:Generated_Source\PSoC5/ADC_SAR_1.c ****     ADC_SAR_1_SAR_CSR0_REG = tmpReg;
 301:Generated_Source\PSoC5/ADC_SAR_1.c **** }
 302:Generated_Source\PSoC5/ADC_SAR_1.c **** 
 303:Generated_Source\PSoC5/ADC_SAR_1.c **** 
 304:Generated_Source\PSoC5/ADC_SAR_1.c **** /*******************************************************************************
 305:Generated_Source\PSoC5/ADC_SAR_1.c **** * Function Name: ADC_SAR_1_SetResolution
 306:Generated_Source\PSoC5/ADC_SAR_1.c **** ********************************************************************************
 307:Generated_Source\PSoC5/ADC_SAR_1.c **** *
 308:Generated_Source\PSoC5/ADC_SAR_1.c **** * Summary:
 309:Generated_Source\PSoC5/ADC_SAR_1.c **** *  Sets the Relution of the SAR.
 310:Generated_Source\PSoC5/ADC_SAR_1.c **** *
 311:Generated_Source\PSoC5/ADC_SAR_1.c **** * Parameters:
 312:Generated_Source\PSoC5/ADC_SAR_1.c **** *  resolution:
 313:Generated_Source\PSoC5/ADC_SAR_1.c **** *  12 ->    RES12
 314:Generated_Source\PSoC5/ADC_SAR_1.c **** *  10 ->    RES10
 315:Generated_Source\PSoC5/ADC_SAR_1.c **** *  8  ->    RES8
 316:Generated_Source\PSoC5/ADC_SAR_1.c **** *
ARM GAS  C:\Users\sinow\AppData\Local\Temp\ccjMou1W.s 			page 7


 317:Generated_Source\PSoC5/ADC_SAR_1.c **** * Return:
 318:Generated_Source\PSoC5/ADC_SAR_1.c **** *  None.
 319:Generated_Source\PSoC5/ADC_SAR_1.c **** *
 320:Generated_Source\PSoC5/ADC_SAR_1.c **** * Side Effects:
 321:Generated_Source\PSoC5/ADC_SAR_1.c **** *  The ADC resolution cannot be changed during a conversion cycle. The
 322:Generated_Source\PSoC5/ADC_SAR_1.c **** *  recommended best practice is to stop conversions with
 323:Generated_Source\PSoC5/ADC_SAR_1.c **** *  ADC_StopConvert(), change the resolution, then restart the
 324:Generated_Source\PSoC5/ADC_SAR_1.c **** *  conversions with ADC_StartConvert().
 325:Generated_Source\PSoC5/ADC_SAR_1.c **** *  If you decide not to stop conversions before calling this API, you
 326:Generated_Source\PSoC5/ADC_SAR_1.c **** *  should use ADC_IsEndConversion() to wait until conversion is complete
 327:Generated_Source\PSoC5/ADC_SAR_1.c **** *  before changing the resolution.
 328:Generated_Source\PSoC5/ADC_SAR_1.c **** *  If you call ADC_SetResolution() during a conversion, the resolution will
 329:Generated_Source\PSoC5/ADC_SAR_1.c **** *  not be changed until the current conversion is complete. Data will not be
 330:Generated_Source\PSoC5/ADC_SAR_1.c **** *  available in the new resolution for another 6 + "New Resolution(in bits)"
 331:Generated_Source\PSoC5/ADC_SAR_1.c **** *  clock cycles.
 332:Generated_Source\PSoC5/ADC_SAR_1.c **** *  You may need add a delay of this number of clock cycles after
 333:Generated_Source\PSoC5/ADC_SAR_1.c **** *  ADC_SetResolution() is called before data is valid again.
 334:Generated_Source\PSoC5/ADC_SAR_1.c **** *  Affects ADC_CountsTo_Volts(), ADC_CountsTo_mVolts(), and
 335:Generated_Source\PSoC5/ADC_SAR_1.c **** *  ADC_CountsTo_uVolts() by calculating the correct conversion between ADC
 336:Generated_Source\PSoC5/ADC_SAR_1.c **** *  counts and the applied input voltage. Calculation depends on resolution,
 337:Generated_Source\PSoC5/ADC_SAR_1.c **** *  input range, and voltage reference.
 338:Generated_Source\PSoC5/ADC_SAR_1.c **** *
 339:Generated_Source\PSoC5/ADC_SAR_1.c **** *******************************************************************************/
 340:Generated_Source\PSoC5/ADC_SAR_1.c **** void ADC_SAR_1_SetResolution(uint8 resolution)
 341:Generated_Source\PSoC5/ADC_SAR_1.c **** {
 342:Generated_Source\PSoC5/ADC_SAR_1.c ****     uint8 tmpReg;
 343:Generated_Source\PSoC5/ADC_SAR_1.c **** 
 344:Generated_Source\PSoC5/ADC_SAR_1.c ****     /* Set SAR ADC resolution and sample width: 18 conversion cycles at 12bits + 1 gap */
 345:Generated_Source\PSoC5/ADC_SAR_1.c ****     switch (resolution)
 346:Generated_Source\PSoC5/ADC_SAR_1.c ****     {
 347:Generated_Source\PSoC5/ADC_SAR_1.c ****         case (uint8)ADC_SAR_1__BITS_12:
 348:Generated_Source\PSoC5/ADC_SAR_1.c ****             tmpReg = ADC_SAR_1_SAR_RESOLUTION_12BIT | ADC_SAR_1_SAR_SAMPLE_WIDTH;
 349:Generated_Source\PSoC5/ADC_SAR_1.c ****             break;
 350:Generated_Source\PSoC5/ADC_SAR_1.c ****         case (uint8)ADC_SAR_1__BITS_10:
 351:Generated_Source\PSoC5/ADC_SAR_1.c ****             tmpReg = ADC_SAR_1_SAR_RESOLUTION_10BIT | ADC_SAR_1_SAR_SAMPLE_WIDTH;
 352:Generated_Source\PSoC5/ADC_SAR_1.c ****             break;
 353:Generated_Source\PSoC5/ADC_SAR_1.c ****         case (uint8)ADC_SAR_1__BITS_8:
 354:Generated_Source\PSoC5/ADC_SAR_1.c ****             tmpReg = ADC_SAR_1_SAR_RESOLUTION_8BIT | ADC_SAR_1_SAR_SAMPLE_WIDTH;
 355:Generated_Source\PSoC5/ADC_SAR_1.c ****             break;
 356:Generated_Source\PSoC5/ADC_SAR_1.c ****         default:
 357:Generated_Source\PSoC5/ADC_SAR_1.c ****             tmpReg = ADC_SAR_1_SAR_RESOLUTION_12BIT | ADC_SAR_1_SAR_SAMPLE_WIDTH;
 358:Generated_Source\PSoC5/ADC_SAR_1.c ****             /* Halt CPU in debug mode if resolution is out of valid range */
 359:Generated_Source\PSoC5/ADC_SAR_1.c ****             CYASSERT(0u != 0u);
 360:Generated_Source\PSoC5/ADC_SAR_1.c ****             break;
 361:Generated_Source\PSoC5/ADC_SAR_1.c ****     }
 362:Generated_Source\PSoC5/ADC_SAR_1.c ****     ADC_SAR_1_SAR_CSR2_REG = tmpReg;
 363:Generated_Source\PSoC5/ADC_SAR_1.c **** 
 364:Generated_Source\PSoC5/ADC_SAR_1.c ****      /* Calculate gain for convert counts to volts */
 365:Generated_Source\PSoC5/ADC_SAR_1.c ****     ADC_SAR_1_CalcGain(resolution);
 366:Generated_Source\PSoC5/ADC_SAR_1.c **** }
 367:Generated_Source\PSoC5/ADC_SAR_1.c **** 
 368:Generated_Source\PSoC5/ADC_SAR_1.c **** 
 369:Generated_Source\PSoC5/ADC_SAR_1.c **** #if(ADC_SAR_1_DEFAULT_CONV_MODE != ADC_SAR_1__HARDWARE_TRIGGER)
 370:Generated_Source\PSoC5/ADC_SAR_1.c **** 
 371:Generated_Source\PSoC5/ADC_SAR_1.c **** 
 372:Generated_Source\PSoC5/ADC_SAR_1.c ****     /*******************************************************************************
 373:Generated_Source\PSoC5/ADC_SAR_1.c ****     * Function Name: ADC_SAR_1_StartConvert
ARM GAS  C:\Users\sinow\AppData\Local\Temp\ccjMou1W.s 			page 8


 374:Generated_Source\PSoC5/ADC_SAR_1.c ****     ********************************************************************************
 375:Generated_Source\PSoC5/ADC_SAR_1.c ****     *
 376:Generated_Source\PSoC5/ADC_SAR_1.c ****     * Summary:
 377:Generated_Source\PSoC5/ADC_SAR_1.c ****     *  Forces the ADC to initiate a conversion. In free-running mode, the ADC runs
 378:Generated_Source\PSoC5/ADC_SAR_1.c ****     *  continuously. In software trigger mode, the function also acts as a software
 379:Generated_Source\PSoC5/ADC_SAR_1.c ****     *  version of the SOC and every conversion must be triggered by
 380:Generated_Source\PSoC5/ADC_SAR_1.c ****     *  ADC_SAR_1_StartConvert(). This function is not available when the
 381:Generated_Source\PSoC5/ADC_SAR_1.c ****     *  Hardware Trigger sample mode is selected.
 382:Generated_Source\PSoC5/ADC_SAR_1.c ****     *
 383:Generated_Source\PSoC5/ADC_SAR_1.c ****     * Parameters:
 384:Generated_Source\PSoC5/ADC_SAR_1.c ****     *  None.
 385:Generated_Source\PSoC5/ADC_SAR_1.c ****     *
 386:Generated_Source\PSoC5/ADC_SAR_1.c ****     * Return:
 387:Generated_Source\PSoC5/ADC_SAR_1.c ****     *  None.
 388:Generated_Source\PSoC5/ADC_SAR_1.c ****     *
 389:Generated_Source\PSoC5/ADC_SAR_1.c ****     * Theory:
 390:Generated_Source\PSoC5/ADC_SAR_1.c ****     *  Forces the ADC to initiate a conversion. In Free Running mode, the ADC will
 391:Generated_Source\PSoC5/ADC_SAR_1.c ****     *  run continuously. In a software trigger mode the function also acts as a
 392:Generated_Source\PSoC5/ADC_SAR_1.c ****     *  software version of the SOC. Here every conversion has to be triggered by
 393:Generated_Source\PSoC5/ADC_SAR_1.c ****     *  the routine. This writes into the SOC bit in SAR_CTRL reg.
 394:Generated_Source\PSoC5/ADC_SAR_1.c ****     *
 395:Generated_Source\PSoC5/ADC_SAR_1.c ****     * Side Effects:
 396:Generated_Source\PSoC5/ADC_SAR_1.c ****     *  In a software trigger mode the function switches source for SOF from the
 397:Generated_Source\PSoC5/ADC_SAR_1.c ****     *  external pin to the internal SOF generation. Application should not call
 398:Generated_Source\PSoC5/ADC_SAR_1.c ****     *  StartConvert if external source used for SOF.
 399:Generated_Source\PSoC5/ADC_SAR_1.c ****     *
 400:Generated_Source\PSoC5/ADC_SAR_1.c ****     *******************************************************************************/
 401:Generated_Source\PSoC5/ADC_SAR_1.c ****     void ADC_SAR_1_StartConvert(void)
 402:Generated_Source\PSoC5/ADC_SAR_1.c ****     {
 403:Generated_Source\PSoC5/ADC_SAR_1.c ****         #if(ADC_SAR_1_DEFAULT_CONV_MODE != ADC_SAR_1__FREE_RUNNING)  /* If software triggered mode 
 404:Generated_Source\PSoC5/ADC_SAR_1.c ****             ADC_SAR_1_SAR_CSR0_REG &= (uint8)~ADC_SAR_1_SAR_MX_SOF_UDB;   /* source: SOF bit */
 405:Generated_Source\PSoC5/ADC_SAR_1.c ****         #endif /* End ADC_SAR_1_DEFAULT_CONV_MODE */
 406:Generated_Source\PSoC5/ADC_SAR_1.c **** 
 407:Generated_Source\PSoC5/ADC_SAR_1.c ****         /* Start the conversion */
 408:Generated_Source\PSoC5/ADC_SAR_1.c ****         ADC_SAR_1_SAR_CSR0_REG |= ADC_SAR_1_SAR_SOF_START_CONV;
 409:Generated_Source\PSoC5/ADC_SAR_1.c ****     }
 410:Generated_Source\PSoC5/ADC_SAR_1.c **** 
 411:Generated_Source\PSoC5/ADC_SAR_1.c **** 
 412:Generated_Source\PSoC5/ADC_SAR_1.c ****     /*******************************************************************************
 413:Generated_Source\PSoC5/ADC_SAR_1.c ****     * Function Name: ADC_SAR_1_StopConvert
 414:Generated_Source\PSoC5/ADC_SAR_1.c ****     ********************************************************************************
 415:Generated_Source\PSoC5/ADC_SAR_1.c ****     *
 416:Generated_Source\PSoC5/ADC_SAR_1.c ****     * Summary:
 417:Generated_Source\PSoC5/ADC_SAR_1.c ****     *  Forces the ADC to stop conversions. If a conversion is currently executing,
 418:Generated_Source\PSoC5/ADC_SAR_1.c ****     *  that conversion will complete, but no further conversions will occur. This
 419:Generated_Source\PSoC5/ADC_SAR_1.c ****     *  function is not available when the Hardware Trigger sample mode is selected.
 420:Generated_Source\PSoC5/ADC_SAR_1.c ****     *
 421:Generated_Source\PSoC5/ADC_SAR_1.c ****     * Parameters:
 422:Generated_Source\PSoC5/ADC_SAR_1.c ****     *  None.
 423:Generated_Source\PSoC5/ADC_SAR_1.c ****     *
 424:Generated_Source\PSoC5/ADC_SAR_1.c ****     * Return:
 425:Generated_Source\PSoC5/ADC_SAR_1.c ****     *  None.
 426:Generated_Source\PSoC5/ADC_SAR_1.c ****     *
 427:Generated_Source\PSoC5/ADC_SAR_1.c ****     * Theory:
 428:Generated_Source\PSoC5/ADC_SAR_1.c ****     *  Stops ADC conversion in Free Running mode.
 429:Generated_Source\PSoC5/ADC_SAR_1.c ****     *
 430:Generated_Source\PSoC5/ADC_SAR_1.c ****     * Side Effects:
ARM GAS  C:\Users\sinow\AppData\Local\Temp\ccjMou1W.s 			page 9


 431:Generated_Source\PSoC5/ADC_SAR_1.c ****     *  In Software Trigger sample mode, this function sets a software version of the
 432:Generated_Source\PSoC5/ADC_SAR_1.c ****     *  SOC to low level and switches the SOC source to hardware SOC input.
 433:Generated_Source\PSoC5/ADC_SAR_1.c ****     *
 434:Generated_Source\PSoC5/ADC_SAR_1.c ****     *******************************************************************************/
 435:Generated_Source\PSoC5/ADC_SAR_1.c ****     void ADC_SAR_1_StopConvert(void)
 436:Generated_Source\PSoC5/ADC_SAR_1.c ****     {
 437:Generated_Source\PSoC5/ADC_SAR_1.c ****         /* Stop all conversions */
 438:Generated_Source\PSoC5/ADC_SAR_1.c ****         ADC_SAR_1_SAR_CSR0_REG &= (uint8)~ADC_SAR_1_SAR_SOF_START_CONV;
 439:Generated_Source\PSoC5/ADC_SAR_1.c **** 
 440:Generated_Source\PSoC5/ADC_SAR_1.c ****         #if(ADC_SAR_1_DEFAULT_CONV_MODE != ADC_SAR_1__FREE_RUNNING)  /* If software triggered mode 
 441:Generated_Source\PSoC5/ADC_SAR_1.c ****             /* Return source to UDB for hardware SOF signal */
 442:Generated_Source\PSoC5/ADC_SAR_1.c ****             ADC_SAR_1_SAR_CSR0_REG |= ADC_SAR_1_SAR_MX_SOF_UDB;    /* source: UDB */
 443:Generated_Source\PSoC5/ADC_SAR_1.c ****         #endif /* End ADC_SAR_1_DEFAULT_CONV_MODE */
 444:Generated_Source\PSoC5/ADC_SAR_1.c **** 
 445:Generated_Source\PSoC5/ADC_SAR_1.c ****     }
 446:Generated_Source\PSoC5/ADC_SAR_1.c **** 
 447:Generated_Source\PSoC5/ADC_SAR_1.c **** #endif /* End ADC_SAR_1_DEFAULT_CONV_MODE != ADC_SAR_1__HARDWARE_TRIGGER */
 448:Generated_Source\PSoC5/ADC_SAR_1.c **** 
 449:Generated_Source\PSoC5/ADC_SAR_1.c **** 
 450:Generated_Source\PSoC5/ADC_SAR_1.c **** /*******************************************************************************
 451:Generated_Source\PSoC5/ADC_SAR_1.c **** * Function Name: ADC_SAR_1_IsEndConversion
 452:Generated_Source\PSoC5/ADC_SAR_1.c **** ********************************************************************************
 453:Generated_Source\PSoC5/ADC_SAR_1.c **** *
 454:Generated_Source\PSoC5/ADC_SAR_1.c **** * Summary:
 455:Generated_Source\PSoC5/ADC_SAR_1.c **** *  Immediately returns the status of the conversion or does not return
 456:Generated_Source\PSoC5/ADC_SAR_1.c **** *  (blocking) until the conversion completes, depending on the retMode
 457:Generated_Source\PSoC5/ADC_SAR_1.c **** *  parameter.
 458:Generated_Source\PSoC5/ADC_SAR_1.c **** *
 459:Generated_Source\PSoC5/ADC_SAR_1.c **** * Parameters:
 460:Generated_Source\PSoC5/ADC_SAR_1.c **** *  retMode:  Check conversion return mode.
 461:Generated_Source\PSoC5/ADC_SAR_1.c **** *   ADC_SAR_1_RETURN_STATUS: Immediately returns the status. If the
 462:Generated_Source\PSoC5/ADC_SAR_1.c **** *     value returned is zero, the conversion is not complete, and this function
 463:Generated_Source\PSoC5/ADC_SAR_1.c **** *     should be retried until a nonzero result is returned.
 464:Generated_Source\PSoC5/ADC_SAR_1.c **** *   ADC_SAR_1_WAIT_FOR_RESULT: Does not return a result until the ADC
 465:Generated_Source\PSoC5/ADC_SAR_1.c **** *     conversion is complete.
 466:Generated_Source\PSoC5/ADC_SAR_1.c **** *
 467:Generated_Source\PSoC5/ADC_SAR_1.c **** * Return:
 468:Generated_Source\PSoC5/ADC_SAR_1.c **** *  (uint8)  0 =>  The ADC is still calculating the last result.
 469:Generated_Source\PSoC5/ADC_SAR_1.c **** *           1 =>  The last conversion is complete.
 470:Generated_Source\PSoC5/ADC_SAR_1.c **** *
 471:Generated_Source\PSoC5/ADC_SAR_1.c **** * Side Effects:
 472:Generated_Source\PSoC5/ADC_SAR_1.c **** *  This function reads the end of conversion status, which is cleared on read.
 473:Generated_Source\PSoC5/ADC_SAR_1.c **** *
 474:Generated_Source\PSoC5/ADC_SAR_1.c **** *******************************************************************************/
 475:Generated_Source\PSoC5/ADC_SAR_1.c **** uint8 ADC_SAR_1_IsEndConversion(uint8 retMode)
 476:Generated_Source\PSoC5/ADC_SAR_1.c **** {
 477:Generated_Source\PSoC5/ADC_SAR_1.c ****     uint8 status;
 478:Generated_Source\PSoC5/ADC_SAR_1.c **** 
 479:Generated_Source\PSoC5/ADC_SAR_1.c ****     do
 480:Generated_Source\PSoC5/ADC_SAR_1.c ****     {
 481:Generated_Source\PSoC5/ADC_SAR_1.c ****         status = ADC_SAR_1_SAR_CSR1_REG & ADC_SAR_1_SAR_EOF_1;
 482:Generated_Source\PSoC5/ADC_SAR_1.c ****     } while ((status != ADC_SAR_1_SAR_EOF_1) && (retMode == ADC_SAR_1_WAIT_FOR_RESULT));
 483:Generated_Source\PSoC5/ADC_SAR_1.c ****     /* If convertion complete, wait until EOF bit released */
 484:Generated_Source\PSoC5/ADC_SAR_1.c ****     if(status == ADC_SAR_1_SAR_EOF_1)
 485:Generated_Source\PSoC5/ADC_SAR_1.c ****     {
 486:Generated_Source\PSoC5/ADC_SAR_1.c ****         /* wait one ADC clock to let the EOC status bit release */
 487:Generated_Source\PSoC5/ADC_SAR_1.c ****         CyDelayUs(1u);
ARM GAS  C:\Users\sinow\AppData\Local\Temp\ccjMou1W.s 			page 10


 488:Generated_Source\PSoC5/ADC_SAR_1.c ****         /* Do the unconditional read operation of the CSR1 register to make sure the EOC bit has be
 489:Generated_Source\PSoC5/ADC_SAR_1.c ****         CY_GET_REG8(ADC_SAR_1_SAR_CSR1_PTR);
 490:Generated_Source\PSoC5/ADC_SAR_1.c ****     }
 491:Generated_Source\PSoC5/ADC_SAR_1.c **** 
 492:Generated_Source\PSoC5/ADC_SAR_1.c ****     return(status);
 493:Generated_Source\PSoC5/ADC_SAR_1.c **** }
 494:Generated_Source\PSoC5/ADC_SAR_1.c **** 
 495:Generated_Source\PSoC5/ADC_SAR_1.c **** 
 496:Generated_Source\PSoC5/ADC_SAR_1.c **** /*******************************************************************************
 497:Generated_Source\PSoC5/ADC_SAR_1.c **** * Function Name: ADC_SAR_1_GetResult8
 498:Generated_Source\PSoC5/ADC_SAR_1.c **** ********************************************************************************
 499:Generated_Source\PSoC5/ADC_SAR_1.c **** *
 500:Generated_Source\PSoC5/ADC_SAR_1.c **** * Summary:
 501:Generated_Source\PSoC5/ADC_SAR_1.c **** *  Returns the result of an 8-bit conversion. If the resolution is set greater
 502:Generated_Source\PSoC5/ADC_SAR_1.c **** *  than 8 bits, the function returns the LSB of the result.
 503:Generated_Source\PSoC5/ADC_SAR_1.c **** *  ADC_SAR_1_IsEndConversion() should be called to verify that the data
 504:Generated_Source\PSoC5/ADC_SAR_1.c **** *   sample is ready.
 505:Generated_Source\PSoC5/ADC_SAR_1.c **** *
 506:Generated_Source\PSoC5/ADC_SAR_1.c **** * Parameters:
 507:Generated_Source\PSoC5/ADC_SAR_1.c **** *  None.
 508:Generated_Source\PSoC5/ADC_SAR_1.c **** *
 509:Generated_Source\PSoC5/ADC_SAR_1.c **** * Return:
 510:Generated_Source\PSoC5/ADC_SAR_1.c **** *  The LSB of the last ADC conversion.
 511:Generated_Source\PSoC5/ADC_SAR_1.c **** *
 512:Generated_Source\PSoC5/ADC_SAR_1.c **** * Global Variables:
 513:Generated_Source\PSoC5/ADC_SAR_1.c **** *  ADC_SAR_1_shift - used to convert the ADC counts to the 2s
 514:Generated_Source\PSoC5/ADC_SAR_1.c **** *  compliment form.
 515:Generated_Source\PSoC5/ADC_SAR_1.c **** *
 516:Generated_Source\PSoC5/ADC_SAR_1.c **** * Side Effects:
 517:Generated_Source\PSoC5/ADC_SAR_1.c **** *  Converts the ADC counts to the 2s complement form.
 518:Generated_Source\PSoC5/ADC_SAR_1.c **** *
 519:Generated_Source\PSoC5/ADC_SAR_1.c **** *******************************************************************************/
 520:Generated_Source\PSoC5/ADC_SAR_1.c **** int8 ADC_SAR_1_GetResult8( void )
 521:Generated_Source\PSoC5/ADC_SAR_1.c **** {
 522:Generated_Source\PSoC5/ADC_SAR_1.c ****     return( (int8)ADC_SAR_1_SAR_WRK0_REG - (int8)ADC_SAR_1_shift);
 523:Generated_Source\PSoC5/ADC_SAR_1.c **** }
 524:Generated_Source\PSoC5/ADC_SAR_1.c **** 
 525:Generated_Source\PSoC5/ADC_SAR_1.c **** 
 526:Generated_Source\PSoC5/ADC_SAR_1.c **** /*******************************************************************************
 527:Generated_Source\PSoC5/ADC_SAR_1.c **** * Function Name: ADC_SAR_1_GetResult16
 528:Generated_Source\PSoC5/ADC_SAR_1.c **** ********************************************************************************
 529:Generated_Source\PSoC5/ADC_SAR_1.c **** *
 530:Generated_Source\PSoC5/ADC_SAR_1.c **** * Summary:
 531:Generated_Source\PSoC5/ADC_SAR_1.c **** *  Returns a 16-bit result for a conversion with a result that has a resolution
 532:Generated_Source\PSoC5/ADC_SAR_1.c **** *  of 8 to 12 bits.
 533:Generated_Source\PSoC5/ADC_SAR_1.c **** *  ADC_SAR_1_IsEndConversion() should be called to verify that the data
 534:Generated_Source\PSoC5/ADC_SAR_1.c **** *   sample is ready
 535:Generated_Source\PSoC5/ADC_SAR_1.c **** *
 536:Generated_Source\PSoC5/ADC_SAR_1.c **** * Parameters:
 537:Generated_Source\PSoC5/ADC_SAR_1.c **** *  None.
 538:Generated_Source\PSoC5/ADC_SAR_1.c **** *
 539:Generated_Source\PSoC5/ADC_SAR_1.c **** * Return:
 540:Generated_Source\PSoC5/ADC_SAR_1.c **** *  The 16-bit result of the last ADC conversion
 541:Generated_Source\PSoC5/ADC_SAR_1.c **** *
 542:Generated_Source\PSoC5/ADC_SAR_1.c **** * Global Variables:
 543:Generated_Source\PSoC5/ADC_SAR_1.c **** *  ADC_SAR_1_shift - used to convert the ADC counts to the 2s
 544:Generated_Source\PSoC5/ADC_SAR_1.c **** *  compliment form.
ARM GAS  C:\Users\sinow\AppData\Local\Temp\ccjMou1W.s 			page 11


 545:Generated_Source\PSoC5/ADC_SAR_1.c **** *
 546:Generated_Source\PSoC5/ADC_SAR_1.c **** * Side Effects:
 547:Generated_Source\PSoC5/ADC_SAR_1.c **** *  Converts the ADC counts to the 2s complement form.
 548:Generated_Source\PSoC5/ADC_SAR_1.c **** *
 549:Generated_Source\PSoC5/ADC_SAR_1.c **** *******************************************************************************/
 550:Generated_Source\PSoC5/ADC_SAR_1.c **** int16 ADC_SAR_1_GetResult16( void )
 551:Generated_Source\PSoC5/ADC_SAR_1.c **** {
 552:Generated_Source\PSoC5/ADC_SAR_1.c ****     uint16 res;
 553:Generated_Source\PSoC5/ADC_SAR_1.c **** 
 554:Generated_Source\PSoC5/ADC_SAR_1.c ****     res = CY_GET_REG16(ADC_SAR_1_SAR_WRK_PTR);
 555:Generated_Source\PSoC5/ADC_SAR_1.c **** 
 556:Generated_Source\PSoC5/ADC_SAR_1.c ****     return( (int16)res - ADC_SAR_1_shift );
 557:Generated_Source\PSoC5/ADC_SAR_1.c **** }
 558:Generated_Source\PSoC5/ADC_SAR_1.c **** 
 559:Generated_Source\PSoC5/ADC_SAR_1.c **** 
 560:Generated_Source\PSoC5/ADC_SAR_1.c **** /*******************************************************************************
 561:Generated_Source\PSoC5/ADC_SAR_1.c **** * Function Name: ADC_SAR_1_SetOffset
 562:Generated_Source\PSoC5/ADC_SAR_1.c **** ********************************************************************************
 563:Generated_Source\PSoC5/ADC_SAR_1.c **** *
 564:Generated_Source\PSoC5/ADC_SAR_1.c **** * Summary:
 565:Generated_Source\PSoC5/ADC_SAR_1.c **** *  Sets the ADC offset, which is used by ADC_SAR_1_CountsTo_Volts(),
 566:Generated_Source\PSoC5/ADC_SAR_1.c **** *  ADC_SAR_1_CountsTo_mVolts(), and ADC_SAR_1_CountsTo_uVolts()
 567:Generated_Source\PSoC5/ADC_SAR_1.c **** *  to subtract the offset from the given reading before calculating the voltage
 568:Generated_Source\PSoC5/ADC_SAR_1.c **** *  conversion.
 569:Generated_Source\PSoC5/ADC_SAR_1.c **** *
 570:Generated_Source\PSoC5/ADC_SAR_1.c **** * Parameters:
 571:Generated_Source\PSoC5/ADC_SAR_1.c **** *  int16: This value is measured when the inputs are shorted or connected to
 572:Generated_Source\PSoC5/ADC_SAR_1.c ****    the same input voltage.
 573:Generated_Source\PSoC5/ADC_SAR_1.c **** *
 574:Generated_Source\PSoC5/ADC_SAR_1.c **** * Return:
 575:Generated_Source\PSoC5/ADC_SAR_1.c **** *  None.
 576:Generated_Source\PSoC5/ADC_SAR_1.c **** *
 577:Generated_Source\PSoC5/ADC_SAR_1.c **** * Global Variables:
 578:Generated_Source\PSoC5/ADC_SAR_1.c **** *  The ADC_SAR_1_offset variable modified. This variable is used for
 579:Generated_Source\PSoC5/ADC_SAR_1.c **** *  offset calibration purpose.
 580:Generated_Source\PSoC5/ADC_SAR_1.c **** *  Affects the ADC_SAR_1_CountsTo_Volts,
 581:Generated_Source\PSoC5/ADC_SAR_1.c **** *  ADC_SAR_1_CountsTo_mVolts, ADC_SAR_1_CountsTo_uVolts functions
 582:Generated_Source\PSoC5/ADC_SAR_1.c **** *  by subtracting the given offset.
 583:Generated_Source\PSoC5/ADC_SAR_1.c **** *
 584:Generated_Source\PSoC5/ADC_SAR_1.c **** *******************************************************************************/
 585:Generated_Source\PSoC5/ADC_SAR_1.c **** void ADC_SAR_1_SetOffset(int16 offset)
 586:Generated_Source\PSoC5/ADC_SAR_1.c **** {
 587:Generated_Source\PSoC5/ADC_SAR_1.c ****     ADC_SAR_1_offset = offset;
 588:Generated_Source\PSoC5/ADC_SAR_1.c **** }
 589:Generated_Source\PSoC5/ADC_SAR_1.c **** 
 590:Generated_Source\PSoC5/ADC_SAR_1.c **** 
 591:Generated_Source\PSoC5/ADC_SAR_1.c **** /*******************************************************************************
 592:Generated_Source\PSoC5/ADC_SAR_1.c **** * Function Name: ADC_SAR_1_CalcGain
 593:Generated_Source\PSoC5/ADC_SAR_1.c **** ********************************************************************************
 594:Generated_Source\PSoC5/ADC_SAR_1.c **** *
 595:Generated_Source\PSoC5/ADC_SAR_1.c **** * Summary:
 596:Generated_Source\PSoC5/ADC_SAR_1.c **** *  This function calculates the ADC gain in counts per 10 volt.
 597:Generated_Source\PSoC5/ADC_SAR_1.c **** *
 598:Generated_Source\PSoC5/ADC_SAR_1.c **** * Parameters:
 599:Generated_Source\PSoC5/ADC_SAR_1.c **** *  uint8: resolution
 600:Generated_Source\PSoC5/ADC_SAR_1.c **** *
 601:Generated_Source\PSoC5/ADC_SAR_1.c **** * Return:
ARM GAS  C:\Users\sinow\AppData\Local\Temp\ccjMou1W.s 			page 12


 602:Generated_Source\PSoC5/ADC_SAR_1.c **** *  None.
 603:Generated_Source\PSoC5/ADC_SAR_1.c **** *
 604:Generated_Source\PSoC5/ADC_SAR_1.c **** * Global Variables:
 605:Generated_Source\PSoC5/ADC_SAR_1.c **** *  ADC_SAR_1_shift variable initialized. This variable is used to
 606:Generated_Source\PSoC5/ADC_SAR_1.c **** *  convert the ADC counts to the 2s compliment form.
 607:Generated_Source\PSoC5/ADC_SAR_1.c **** *  ADC_SAR_1_countsPer10Volt variable initialized. This variable is used
 608:Generated_Source\PSoC5/ADC_SAR_1.c **** *  for gain calibration purpose.
 609:Generated_Source\PSoC5/ADC_SAR_1.c **** *
 610:Generated_Source\PSoC5/ADC_SAR_1.c **** *******************************************************************************/
 611:Generated_Source\PSoC5/ADC_SAR_1.c **** static void ADC_SAR_1_CalcGain( uint8 resolution )
 612:Generated_Source\PSoC5/ADC_SAR_1.c **** {
  27              		.loc 1 612 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31              	.LVL0:
  32 0000 08B5     		push	{r3, lr}
  33              		.cfi_def_cfa_offset 8
  34              		.cfi_offset 3, -8
  35              		.cfi_offset 14, -4
 613:Generated_Source\PSoC5/ADC_SAR_1.c ****     int32 counts;
 614:Generated_Source\PSoC5/ADC_SAR_1.c ****     #if(!((ADC_SAR_1_DEFAULT_RANGE == ADC_SAR_1__VSS_TO_VREF) || \
 615:Generated_Source\PSoC5/ADC_SAR_1.c ****          (ADC_SAR_1_DEFAULT_RANGE == ADC_SAR_1__VSSA_TO_VDDA) || \
 616:Generated_Source\PSoC5/ADC_SAR_1.c ****          (ADC_SAR_1_DEFAULT_RANGE == ADC_SAR_1__VSSA_TO_VDAC)) )
 617:Generated_Source\PSoC5/ADC_SAR_1.c ****         uint16 diff_zero;
 618:Generated_Source\PSoC5/ADC_SAR_1.c ****     #endif /* End ADC_SAR_1_DEFAULT_RANGE */
 619:Generated_Source\PSoC5/ADC_SAR_1.c **** 
 620:Generated_Source\PSoC5/ADC_SAR_1.c ****     switch (resolution)
  36              		.loc 1 620 0
  37 0002 0A28     		cmp	r0, #10
  38 0004 0FD0     		beq	.L6
  39 0006 0C28     		cmp	r0, #12
  40 0008 02D0     		beq	.L4
  41 000a 0828     		cmp	r0, #8
  42 000c 06D1     		bne	.L7
  43 000e 02E0     		b	.L5
  44              	.L4:
 621:Generated_Source\PSoC5/ADC_SAR_1.c ****     {
 622:Generated_Source\PSoC5/ADC_SAR_1.c ****         case (uint8)ADC_SAR_1__BITS_12:
 623:Generated_Source\PSoC5/ADC_SAR_1.c ****             counts = (int32)ADC_SAR_1_SAR_WRK_MAX_12BIT;
  45              		.loc 1 623 0
  46 0010 4FF48052 		mov	r2, #4096
  47 0014 09E0     		b	.L3
  48              	.L5:
  49              	.LVL1:
 624:Generated_Source\PSoC5/ADC_SAR_1.c ****             #if(!((ADC_SAR_1_DEFAULT_RANGE == ADC_SAR_1__VSS_TO_VREF) || \
 625:Generated_Source\PSoC5/ADC_SAR_1.c ****                  (ADC_SAR_1_DEFAULT_RANGE == ADC_SAR_1__VSSA_TO_VDDA) || \
 626:Generated_Source\PSoC5/ADC_SAR_1.c ****                  (ADC_SAR_1_DEFAULT_RANGE == ADC_SAR_1__VSSA_TO_VDAC)) )
 627:Generated_Source\PSoC5/ADC_SAR_1.c ****                 diff_zero = ADC_SAR_1_SAR_DIFF_SHIFT;
 628:Generated_Source\PSoC5/ADC_SAR_1.c ****             #endif /* End ADC_SAR_1_DEFAULT_RANGE */
 629:Generated_Source\PSoC5/ADC_SAR_1.c ****             break;
 630:Generated_Source\PSoC5/ADC_SAR_1.c ****         case (uint8)ADC_SAR_1__BITS_10:
 631:Generated_Source\PSoC5/ADC_SAR_1.c ****             counts = (int32)ADC_SAR_1_SAR_WRK_MAX_10BIT;
 632:Generated_Source\PSoC5/ADC_SAR_1.c ****             #if(!((ADC_SAR_1_DEFAULT_RANGE == ADC_SAR_1__VSS_TO_VREF) || \
 633:Generated_Source\PSoC5/ADC_SAR_1.c ****                  (ADC_SAR_1_DEFAULT_RANGE == ADC_SAR_1__VSSA_TO_VDDA) || \
 634:Generated_Source\PSoC5/ADC_SAR_1.c ****                  (ADC_SAR_1_DEFAULT_RANGE == ADC_SAR_1__VSSA_TO_VDAC)) )
 635:Generated_Source\PSoC5/ADC_SAR_1.c ****                 diff_zero = ADC_SAR_1_SAR_DIFF_SHIFT >> 2u;
ARM GAS  C:\Users\sinow\AppData\Local\Temp\ccjMou1W.s 			page 13


 636:Generated_Source\PSoC5/ADC_SAR_1.c ****             #endif /* End ADC_SAR_1_DEFAULT_RANGE */
 637:Generated_Source\PSoC5/ADC_SAR_1.c ****             break;
 638:Generated_Source\PSoC5/ADC_SAR_1.c ****         case (uint8)ADC_SAR_1__BITS_8:
 639:Generated_Source\PSoC5/ADC_SAR_1.c ****             counts = (int32)ADC_SAR_1_SAR_WRK_MAX_8BIT;
  50              		.loc 1 639 0
  51 0016 4FF48072 		mov	r2, #256
 640:Generated_Source\PSoC5/ADC_SAR_1.c ****             #if(!((ADC_SAR_1_DEFAULT_RANGE == ADC_SAR_1__VSS_TO_VREF) || \
 641:Generated_Source\PSoC5/ADC_SAR_1.c ****                  (ADC_SAR_1_DEFAULT_RANGE == ADC_SAR_1__VSSA_TO_VDDA) || \
 642:Generated_Source\PSoC5/ADC_SAR_1.c ****                  (ADC_SAR_1_DEFAULT_RANGE == ADC_SAR_1__VSSA_TO_VDAC)) )
 643:Generated_Source\PSoC5/ADC_SAR_1.c ****                 diff_zero = ADC_SAR_1_SAR_DIFF_SHIFT >> 4u;
 644:Generated_Source\PSoC5/ADC_SAR_1.c ****             #endif /* End ADC_SAR_1_DEFAULT_RANGE */
 645:Generated_Source\PSoC5/ADC_SAR_1.c ****             break;
  52              		.loc 1 645 0
  53 001a 06E0     		b	.L3
  54              	.LVL2:
  55              	.L7:
 646:Generated_Source\PSoC5/ADC_SAR_1.c ****         default: /* Halt CPU in debug mode if resolution is out of valid range */
 647:Generated_Source\PSoC5/ADC_SAR_1.c ****             counts = 0;
 648:Generated_Source\PSoC5/ADC_SAR_1.c ****             #if(!((ADC_SAR_1_DEFAULT_RANGE == ADC_SAR_1__VSS_TO_VREF) || \
 649:Generated_Source\PSoC5/ADC_SAR_1.c ****                  (ADC_SAR_1_DEFAULT_RANGE == ADC_SAR_1__VSSA_TO_VDDA) || \
 650:Generated_Source\PSoC5/ADC_SAR_1.c ****                  (ADC_SAR_1_DEFAULT_RANGE == ADC_SAR_1__VSSA_TO_VDAC)) )
 651:Generated_Source\PSoC5/ADC_SAR_1.c ****                 diff_zero = 0u;
 652:Generated_Source\PSoC5/ADC_SAR_1.c ****             #endif /* End ADC_SAR_1_DEFAULT_RANGE */
 653:Generated_Source\PSoC5/ADC_SAR_1.c ****             CYASSERT(0u != 0u);
  56              		.loc 1 653 0
  57 001c 0020     		movs	r0, #0
  58              	.LVL3:
  59 001e FFF7FEFF 		bl	CyHalt
  60              	.LVL4:
 647:Generated_Source\PSoC5/ADC_SAR_1.c ****             #if(!((ADC_SAR_1_DEFAULT_RANGE == ADC_SAR_1__VSS_TO_VREF) || \
  61              		.loc 1 647 0
  62 0022 0022     		movs	r2, #0
  63 0024 01E0     		b	.L3
  64              	.LVL5:
  65              	.L6:
 631:Generated_Source\PSoC5/ADC_SAR_1.c ****             #if(!((ADC_SAR_1_DEFAULT_RANGE == ADC_SAR_1__VSS_TO_VREF) || \
  66              		.loc 1 631 0
  67 0026 4FF48062 		mov	r2, #1024
  68              	.LVL6:
  69              	.L3:
 654:Generated_Source\PSoC5/ADC_SAR_1.c ****             break;
 655:Generated_Source\PSoC5/ADC_SAR_1.c ****     }
 656:Generated_Source\PSoC5/ADC_SAR_1.c ****     ADC_SAR_1_countsPerVolt = 0; /* Clear obsolete variable */
  70              		.loc 1 656 0
  71 002a 0021     		movs	r1, #0
  72 002c 094B     		ldr	r3, .L9
  73 002e 1980     		strh	r1, [r3]	@ movhi
 657:Generated_Source\PSoC5/ADC_SAR_1.c ****     /* Calculate gain in counts per 10 volts with rounding */
 658:Generated_Source\PSoC5/ADC_SAR_1.c ****     ADC_SAR_1_countsPer10Volt = (((counts * ADC_SAR_1_10MV_COUNTS) +
  74              		.loc 1 658 0
  75 0030 42F21073 		movw	r3, #10000
  76 0034 03FB02F3 		mul	r3, r3, r2
  77 0038 03F6C413 		addw	r3, r3, #2500
 659:Generated_Source\PSoC5/ADC_SAR_1.c ****                         ADC_SAR_1_DEFAULT_REF_VOLTAGE_MV) / (ADC_SAR_1_DEFAULT_REF_VOLTAGE_MV * 2))
  78              		.loc 1 659 0
  79 003c 064A     		ldr	r2, .L9+4
  80              	.LVL7:
ARM GAS  C:\Users\sinow\AppData\Local\Temp\ccjMou1W.s 			page 14


  81 003e 82FB0302 		smull	r0, r2, r2, r3
  82 0042 DB17     		asrs	r3, r3, #31
  83 0044 C3EBE223 		rsb	r3, r3, r2, asr #11
 658:Generated_Source\PSoC5/ADC_SAR_1.c ****                         ADC_SAR_1_DEFAULT_REF_VOLTAGE_MV) / (ADC_SAR_1_DEFAULT_REF_VOLTAGE_MV * 2))
  84              		.loc 1 658 0
  85 0048 044A     		ldr	r2, .L9+8
  86 004a 1360     		str	r3, [r2]
 660:Generated_Source\PSoC5/ADC_SAR_1.c **** 
 661:Generated_Source\PSoC5/ADC_SAR_1.c ****     #if( (ADC_SAR_1_DEFAULT_RANGE == ADC_SAR_1__VSS_TO_VREF) || \
 662:Generated_Source\PSoC5/ADC_SAR_1.c ****          (ADC_SAR_1_DEFAULT_RANGE == ADC_SAR_1__VSSA_TO_VDDA) || \
 663:Generated_Source\PSoC5/ADC_SAR_1.c ****          (ADC_SAR_1_DEFAULT_RANGE == ADC_SAR_1__VSSA_TO_VDAC) )
 664:Generated_Source\PSoC5/ADC_SAR_1.c ****         ADC_SAR_1_shift = 0;
  87              		.loc 1 664 0
  88 004c 044B     		ldr	r3, .L9+12
  89 004e 1980     		strh	r1, [r3]	@ movhi
  90 0050 08BD     		pop	{r3, pc}
  91              	.L10:
  92 0052 00BF     		.align	2
  93              	.L9:
  94 0054 00000000 		.word	ADC_SAR_1_countsPerVolt
  95 0058 AD8BDB68 		.word	1759218605
  96 005c 00000000 		.word	ADC_SAR_1_countsPer10Volt
  97 0060 00000000 		.word	ADC_SAR_1_shift
  98              		.cfi_endproc
  99              	.LFE12:
 100              		.size	ADC_SAR_1_CalcGain, .-ADC_SAR_1_CalcGain
 101              		.section	.text.ADC_SAR_1_Enable,"ax",%progbits
 102              		.align	2
 103              		.global	ADC_SAR_1_Enable
 104              		.thumb
 105              		.thumb_func
 106              		.type	ADC_SAR_1_Enable, %function
 107              	ADC_SAR_1_Enable:
 108              	.LFB2:
 144:Generated_Source\PSoC5/ADC_SAR_1.c ****     uint8 tmpReg;
 109              		.loc 1 144 0
 110              		.cfi_startproc
 111              		@ args = 0, pretend = 0, frame = 0
 112              		@ frame_needed = 0, uses_anonymous_args = 0
 113 0000 10B5     		push	{r4, lr}
 114              		.cfi_def_cfa_offset 8
 115              		.cfi_offset 4, -8
 116              		.cfi_offset 14, -4
 147:Generated_Source\PSoC5/ADC_SAR_1.c **** 
 117              		.loc 1 147 0
 118 0002 FFF7FEFF 		bl	CyEnterCriticalSection
 119              	.LVL8:
 120 0006 0446     		mov	r4, r0
 121              	.LVL9:
 150:Generated_Source\PSoC5/ADC_SAR_1.c **** 
 122              		.loc 1 150 0
 123 0008 194A     		ldr	r2, .L13
 124 000a 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 125 000c 43F00203 		orr	r3, r3, #2
 126 0010 1370     		strb	r3, [r2]
 153:Generated_Source\PSoC5/ADC_SAR_1.c **** 
 127              		.loc 1 153 0
ARM GAS  C:\Users\sinow\AppData\Local\Temp\ccjMou1W.s 			page 15


 128 0012 1032     		adds	r2, r2, #16
 129 0014 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 130 0016 43F00203 		orr	r3, r3, #2
 131 001a 1370     		strb	r3, [r2]
 162:Generated_Source\PSoC5/ADC_SAR_1.c ****     tmpReg |= ADC_SAR_1_SAR_EN_BUF_VCM_EN;
 132              		.loc 1 162 0
 133 001c 02F5AA52 		add	r2, r2, #5440
 134 0020 1032     		adds	r2, r2, #16
 135 0022 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 136              	.LVL10:
 169:Generated_Source\PSoC5/ADC_SAR_1.c ****     #endif /* ADC_SAR_1_DEFAULT_REFERENCE == ADC_SAR_1__EXT_REF */
 137              		.loc 1 169 0
 138 0024 43F00303 		orr	r3, r3, #3
 139              	.LVL11:
 171:Generated_Source\PSoC5/ADC_SAR_1.c **** 
 140              		.loc 1 171 0
 141 0028 1370     		strb	r3, [r2]
 182:Generated_Source\PSoC5/ADC_SAR_1.c ****         #else /* INTREF Bypassed of External */
 142              		.loc 1 182 0
 143 002a 1822     		movs	r2, #24
 144 002c 114B     		ldr	r3, .L13+4
 145              	.LVL12:
 146 002e 1A70     		strb	r2, [r3]
 147              	.LVL13:
 192:Generated_Source\PSoC5/ADC_SAR_1.c ****     #endif /* ADC_SAR_1_HIGH_POWER_PULSE == 0u */
 148              		.loc 1 192 0
 149 0030 013B     		subs	r3, r3, #1
 150 0032 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 151 0034 42F04002 		orr	r2, r2, #64
 152 0038 1A70     		strb	r2, [r3]
 202:Generated_Source\PSoC5/ADC_SAR_1.c ****     #endif /* ADC_SAR_1_HIGH_POWER_PULSE == 0u */
 153              		.loc 1 202 0
 154 003a 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 155 003c 02F0FC02 		and	r2, r2, #252
 156 0040 1A70     		strb	r2, [r3]
 206:Generated_Source\PSoC5/ADC_SAR_1.c ****     /* SAR_HIZ_CLEAR:   Should not be used for LP */
 157              		.loc 1 206 0
 158 0042 C822     		movs	r2, #200
 159 0044 053B     		subs	r3, r3, #5
 160 0046 1A70     		strb	r2, [r3]
 218:Generated_Source\PSoC5/ADC_SAR_1.c **** 
 161              		.loc 1 218 0
 162 0048 0222     		movs	r2, #2
 163 004a A3F59753 		sub	r3, r3, #4832
 164 004e 123B     		subs	r3, r3, #18
 165 0050 1A70     		strb	r2, [r3]
 221:Generated_Source\PSoC5/ADC_SAR_1.c **** 
 166              		.loc 1 221 0
 167 0052 094A     		ldr	r2, .L13+8
 168 0054 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 169 0056 43F00803 		orr	r3, r3, #8
 170 005a 1370     		strb	r3, [r2]
 223:Generated_Source\PSoC5/ADC_SAR_1.c **** 
 171              		.loc 1 223 0
 172 005c 0A20     		movs	r0, #10
 173 005e FFF7FEFF 		bl	CyDelayUs
 174              	.LVL14:
ARM GAS  C:\Users\sinow\AppData\Local\Temp\ccjMou1W.s 			page 16


 227:Generated_Source\PSoC5/ADC_SAR_1.c ****     #endif   /* End ADC_SAR_1_IRQ_REMOVE */
 175              		.loc 1 227 0
 176 0062 0122     		movs	r2, #1
 177 0064 054B     		ldr	r3, .L13+12
 178 0066 1A60     		str	r2, [r3]
 230:Generated_Source\PSoC5/ADC_SAR_1.c **** }
 179              		.loc 1 230 0
 180 0068 2046     		mov	r0, r4
 181 006a FFF7FEFF 		bl	CyExitCriticalSection
 182              	.LVL15:
 183 006e 10BD     		pop	{r4, pc}
 184              	.LVL16:
 185              	.L14:
 186              		.align	2
 187              	.L13:
 188 0070 AB430040 		.word	1073759147
 189 0074 0E590040 		.word	1073764622
 190 0078 2F5B0040 		.word	1073765167
 191 007c 80E200E0 		.word	-536812928
 192              		.cfi_endproc
 193              	.LFE2:
 194              		.size	ADC_SAR_1_Enable, .-ADC_SAR_1_Enable
 195              		.section	.text.ADC_SAR_1_Stop,"ax",%progbits
 196              		.align	2
 197              		.global	ADC_SAR_1_Stop
 198              		.thumb
 199              		.thumb_func
 200              		.type	ADC_SAR_1_Stop, %function
 201              	ADC_SAR_1_Stop:
 202              	.LFB3:
 249:Generated_Source\PSoC5/ADC_SAR_1.c ****     uint8 enableInterrupts;
 203              		.loc 1 249 0
 204              		.cfi_startproc
 205              		@ args = 0, pretend = 0, frame = 0
 206              		@ frame_needed = 0, uses_anonymous_args = 0
 207 0000 08B5     		push	{r3, lr}
 208              		.cfi_def_cfa_offset 8
 209              		.cfi_offset 3, -8
 210              		.cfi_offset 14, -4
 251:Generated_Source\PSoC5/ADC_SAR_1.c **** 
 211              		.loc 1 251 0
 212 0002 FFF7FEFF 		bl	CyEnterCriticalSection
 213              	.LVL17:
 254:Generated_Source\PSoC5/ADC_SAR_1.c ****     /* Disable the SAR ADC block in Active Power Mode */
 214              		.loc 1 254 0
 215 0006 0A4A     		ldr	r2, .L17
 216 0008 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 217 000a 03F0FE03 		and	r3, r3, #254
 218 000e 1370     		strb	r3, [r2]
 256:Generated_Source\PSoC5/ADC_SAR_1.c ****     /* Disable the SAR ADC in Standby Power Mode */
 219              		.loc 1 256 0
 220 0010 A2F5AA52 		sub	r2, r2, #5440
 221 0014 1D3A     		subs	r2, r2, #29
 222 0016 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 223 0018 03F0FD03 		and	r3, r3, #253
 224 001c 1370     		strb	r3, [r2]
 258:Generated_Source\PSoC5/ADC_SAR_1.c **** 
ARM GAS  C:\Users\sinow\AppData\Local\Temp\ccjMou1W.s 			page 17


 225              		.loc 1 258 0
 226 001e 1032     		adds	r2, r2, #16
 227 0020 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 228 0022 03F0FD03 		and	r3, r3, #253
 229 0026 1370     		strb	r3, [r2]
 266:Generated_Source\PSoC5/ADC_SAR_1.c **** 
 230              		.loc 1 266 0
 231 0028 FFF7FEFF 		bl	CyExitCriticalSection
 232              	.LVL18:
 233 002c 08BD     		pop	{r3, pc}
 234              	.L18:
 235 002e 00BF     		.align	2
 236              	.L17:
 237 0030 08590040 		.word	1073764616
 238              		.cfi_endproc
 239              	.LFE3:
 240              		.size	ADC_SAR_1_Stop, .-ADC_SAR_1_Stop
 241              		.section	.text.ADC_SAR_1_SetPower,"ax",%progbits
 242              		.align	2
 243              		.global	ADC_SAR_1_SetPower
 244              		.thumb
 245              		.thumb_func
 246              		.type	ADC_SAR_1_SetPower, %function
 247              	ADC_SAR_1_SetPower:
 248              	.LFB4:
 291:Generated_Source\PSoC5/ADC_SAR_1.c ****     uint8 tmpReg;
 249              		.loc 1 291 0
 250              		.cfi_startproc
 251              		@ args = 0, pretend = 0, frame = 0
 252              		@ frame_needed = 0, uses_anonymous_args = 0
 253              		@ link register save eliminated.
 254              	.LVL19:
 298:Generated_Source\PSoC5/ADC_SAR_1.c ****     tmpReg |= (uint8)(power << ADC_SAR_1_SAR_POWER_SHIFT);
 255              		.loc 1 298 0
 256 0000 044A     		ldr	r2, .L20
 257 0002 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 258 0004 03F03F03 		and	r3, r3, #63
 259              	.LVL20:
 299:Generated_Source\PSoC5/ADC_SAR_1.c ****     ADC_SAR_1_SAR_CSR0_REG = tmpReg;
 260              		.loc 1 299 0
 261 0008 43EA8010 		orr	r0, r3, r0, lsl #6
 262              	.LVL21:
 263 000c C0B2     		uxtb	r0, r0
 264              	.LVL22:
 300:Generated_Source\PSoC5/ADC_SAR_1.c **** }
 265              		.loc 1 300 0
 266 000e 1070     		strb	r0, [r2]
 267 0010 7047     		bx	lr
 268              	.L21:
 269 0012 00BF     		.align	2
 270              	.L20:
 271 0014 08590040 		.word	1073764616
 272              		.cfi_endproc
 273              	.LFE4:
 274              		.size	ADC_SAR_1_SetPower, .-ADC_SAR_1_SetPower
 275              		.section	.text.ADC_SAR_1_SetResolution,"ax",%progbits
 276              		.align	2
ARM GAS  C:\Users\sinow\AppData\Local\Temp\ccjMou1W.s 			page 18


 277              		.global	ADC_SAR_1_SetResolution
 278              		.thumb
 279              		.thumb_func
 280              		.type	ADC_SAR_1_SetResolution, %function
 281              	ADC_SAR_1_SetResolution:
 282              	.LFB5:
 341:Generated_Source\PSoC5/ADC_SAR_1.c ****     uint8 tmpReg;
 283              		.loc 1 341 0
 284              		.cfi_startproc
 285              		@ args = 0, pretend = 0, frame = 0
 286              		@ frame_needed = 0, uses_anonymous_args = 0
 287              	.LVL23:
 288 0000 10B5     		push	{r4, lr}
 289              		.cfi_def_cfa_offset 8
 290              		.cfi_offset 4, -8
 291              		.cfi_offset 14, -4
 292 0002 0446     		mov	r4, r0
 345:Generated_Source\PSoC5/ADC_SAR_1.c ****     {
 293              		.loc 1 345 0
 294 0004 0A28     		cmp	r0, #10
 295 0006 0DD0     		beq	.L27
 296 0008 0C28     		cmp	r0, #12
 297 000a 02D0     		beq	.L25
 298 000c 0828     		cmp	r0, #8
 299 000e 04D1     		bne	.L28
 300 0010 01E0     		b	.L26
 301              	.L25:
 348:Generated_Source\PSoC5/ADC_SAR_1.c ****             break;
 302              		.loc 1 348 0
 303 0012 C222     		movs	r2, #194
 304 0014 07E0     		b	.L24
 305              	.L26:
 306              	.LVL24:
 354:Generated_Source\PSoC5/ADC_SAR_1.c ****             break;
 307              		.loc 1 354 0
 308 0016 4222     		movs	r2, #66
 355:Generated_Source\PSoC5/ADC_SAR_1.c ****         default:
 309              		.loc 1 355 0
 310 0018 05E0     		b	.L24
 311              	.LVL25:
 312              	.L28:
 359:Generated_Source\PSoC5/ADC_SAR_1.c ****             break;
 313              		.loc 1 359 0
 314 001a 0020     		movs	r0, #0
 315              	.LVL26:
 316 001c FFF7FEFF 		bl	CyHalt
 317              	.LVL27:
 357:Generated_Source\PSoC5/ADC_SAR_1.c ****             /* Halt CPU in debug mode if resolution is out of valid range */
 318              		.loc 1 357 0
 319 0020 C222     		movs	r2, #194
 320 0022 00E0     		b	.L24
 321              	.LVL28:
 322              	.L27:
 351:Generated_Source\PSoC5/ADC_SAR_1.c ****             break;
 323              		.loc 1 351 0
 324 0024 8222     		movs	r2, #130
 325              	.LVL29:
ARM GAS  C:\Users\sinow\AppData\Local\Temp\ccjMou1W.s 			page 19


 326              	.L24:
 362:Generated_Source\PSoC5/ADC_SAR_1.c **** 
 327              		.loc 1 362 0
 328 0026 034B     		ldr	r3, .L30
 329 0028 1A70     		strb	r2, [r3]
 365:Generated_Source\PSoC5/ADC_SAR_1.c **** }
 330              		.loc 1 365 0
 331 002a 2046     		mov	r0, r4
 332 002c FFF7FEFF 		bl	ADC_SAR_1_CalcGain
 333              	.LVL30:
 334 0030 10BD     		pop	{r4, pc}
 335              	.L31:
 336 0032 00BF     		.align	2
 337              	.L30:
 338 0034 0A590040 		.word	1073764618
 339              		.cfi_endproc
 340              	.LFE5:
 341              		.size	ADC_SAR_1_SetResolution, .-ADC_SAR_1_SetResolution
 342              		.section	.text.ADC_SAR_1_Init,"ax",%progbits
 343              		.align	2
 344              		.global	ADC_SAR_1_Init
 345              		.thumb
 346              		.thumb_func
 347              		.type	ADC_SAR_1_Init, %function
 348              	ADC_SAR_1_Init:
 349              	.LFB1:
 107:Generated_Source\PSoC5/ADC_SAR_1.c **** 
 350              		.loc 1 107 0
 351              		.cfi_startproc
 352              		@ args = 0, pretend = 0, frame = 0
 353              		@ frame_needed = 0, uses_anonymous_args = 0
 354 0000 08B5     		push	{r3, lr}
 355              		.cfi_def_cfa_offset 8
 356              		.cfi_offset 3, -8
 357              		.cfi_offset 14, -4
 116:Generated_Source\PSoC5/ADC_SAR_1.c ****         (void)CyIntSetVector(ADC_SAR_1_INTC_NUMBER, &ADC_SAR_1_ISR);
 358              		.loc 1 116 0
 359 0002 0721     		movs	r1, #7
 360 0004 0020     		movs	r0, #0
 361 0006 FFF7FEFF 		bl	CyIntSetPriority
 362              	.LVL31:
 117:Generated_Source\PSoC5/ADC_SAR_1.c ****     #endif   /* End ADC_SAR_1_IRQ_REMOVE */
 363              		.loc 1 117 0
 364 000a 0849     		ldr	r1, .L34
 365 000c 0020     		movs	r0, #0
 366 000e FFF7FEFF 		bl	CyIntSetVector
 367              	.LVL32:
 121:Generated_Source\PSoC5/ADC_SAR_1.c **** 
 368              		.loc 1 121 0
 369 0012 074A     		ldr	r2, .L34+4
 370 0014 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 371 0016 43F00603 		orr	r3, r3, #6
 372 001a 1370     		strb	r3, [r2]
 124:Generated_Source\PSoC5/ADC_SAR_1.c ****     ADC_SAR_1_offset = 0;
 373              		.loc 1 124 0
 374 001c 0820     		movs	r0, #8
 375 001e FFF7FEFF 		bl	ADC_SAR_1_SetResolution
ARM GAS  C:\Users\sinow\AppData\Local\Temp\ccjMou1W.s 			page 20


 376              	.LVL33:
 125:Generated_Source\PSoC5/ADC_SAR_1.c **** }
 377              		.loc 1 125 0
 378 0022 0022     		movs	r2, #0
 379 0024 034B     		ldr	r3, .L34+8
 380 0026 1A80     		strh	r2, [r3]	@ movhi
 381 0028 08BD     		pop	{r3, pc}
 382              	.L35:
 383 002a 00BF     		.align	2
 384              	.L34:
 385 002c 00000000 		.word	ADC_SAR_1_ISR
 386 0030 09590040 		.word	1073764617
 387 0034 00000000 		.word	ADC_SAR_1_offset
 388              		.cfi_endproc
 389              	.LFE1:
 390              		.size	ADC_SAR_1_Init, .-ADC_SAR_1_Init
 391              		.section	.text.ADC_SAR_1_Start,"ax",%progbits
 392              		.align	2
 393              		.global	ADC_SAR_1_Start
 394              		.thumb
 395              		.thumb_func
 396              		.type	ADC_SAR_1_Start, %function
 397              	ADC_SAR_1_Start:
 398              	.LFB0:
  75:Generated_Source\PSoC5/ADC_SAR_1.c **** 
 399              		.loc 1 75 0
 400              		.cfi_startproc
 401              		@ args = 0, pretend = 0, frame = 0
 402              		@ frame_needed = 0, uses_anonymous_args = 0
 403 0000 08B5     		push	{r3, lr}
 404              		.cfi_def_cfa_offset 8
 405              		.cfi_offset 3, -8
 406              		.cfi_offset 14, -4
  78:Generated_Source\PSoC5/ADC_SAR_1.c ****     {
 407              		.loc 1 78 0
 408 0002 054B     		ldr	r3, .L39
 409 0004 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 410 0006 23B9     		cbnz	r3, .L37
  80:Generated_Source\PSoC5/ADC_SAR_1.c ****         ADC_SAR_1_initVar = 1u;
 411              		.loc 1 80 0
 412 0008 FFF7FEFF 		bl	ADC_SAR_1_Init
 413              	.LVL34:
  81:Generated_Source\PSoC5/ADC_SAR_1.c ****     }
 414              		.loc 1 81 0
 415 000c 0122     		movs	r2, #1
 416 000e 024B     		ldr	r3, .L39
 417 0010 1A70     		strb	r2, [r3]
 418              	.L37:
  83:Generated_Source\PSoC5/ADC_SAR_1.c **** }
 419              		.loc 1 83 0
 420 0012 FFF7FEFF 		bl	ADC_SAR_1_Enable
 421              	.LVL35:
 422 0016 08BD     		pop	{r3, pc}
 423              	.L40:
 424              		.align	2
 425              	.L39:
 426 0018 00000000 		.word	.LANCHOR0
ARM GAS  C:\Users\sinow\AppData\Local\Temp\ccjMou1W.s 			page 21


 427              		.cfi_endproc
 428              	.LFE0:
 429              		.size	ADC_SAR_1_Start, .-ADC_SAR_1_Start
 430              		.section	.text.ADC_SAR_1_StartConvert,"ax",%progbits
 431              		.align	2
 432              		.global	ADC_SAR_1_StartConvert
 433              		.thumb
 434              		.thumb_func
 435              		.type	ADC_SAR_1_StartConvert, %function
 436              	ADC_SAR_1_StartConvert:
 437              	.LFB6:
 402:Generated_Source\PSoC5/ADC_SAR_1.c ****         #if(ADC_SAR_1_DEFAULT_CONV_MODE != ADC_SAR_1__FREE_RUNNING)  /* If software triggered mode 
 438              		.loc 1 402 0
 439              		.cfi_startproc
 440              		@ args = 0, pretend = 0, frame = 0
 441              		@ frame_needed = 0, uses_anonymous_args = 0
 442              		@ link register save eliminated.
 408:Generated_Source\PSoC5/ADC_SAR_1.c ****     }
 443              		.loc 1 408 0
 444 0000 024A     		ldr	r2, .L42
 445 0002 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 446 0004 43F00103 		orr	r3, r3, #1
 447 0008 1370     		strb	r3, [r2]
 448 000a 7047     		bx	lr
 449              	.L43:
 450              		.align	2
 451              	.L42:
 452 000c 08590040 		.word	1073764616
 453              		.cfi_endproc
 454              	.LFE6:
 455              		.size	ADC_SAR_1_StartConvert, .-ADC_SAR_1_StartConvert
 456              		.section	.text.ADC_SAR_1_StopConvert,"ax",%progbits
 457              		.align	2
 458              		.global	ADC_SAR_1_StopConvert
 459              		.thumb
 460              		.thumb_func
 461              		.type	ADC_SAR_1_StopConvert, %function
 462              	ADC_SAR_1_StopConvert:
 463              	.LFB7:
 436:Generated_Source\PSoC5/ADC_SAR_1.c ****         /* Stop all conversions */
 464              		.loc 1 436 0
 465              		.cfi_startproc
 466              		@ args = 0, pretend = 0, frame = 0
 467              		@ frame_needed = 0, uses_anonymous_args = 0
 468              		@ link register save eliminated.
 438:Generated_Source\PSoC5/ADC_SAR_1.c **** 
 469              		.loc 1 438 0
 470 0000 024A     		ldr	r2, .L45
 471 0002 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 472 0004 03F0FE03 		and	r3, r3, #254
 473 0008 1370     		strb	r3, [r2]
 474 000a 7047     		bx	lr
 475              	.L46:
 476              		.align	2
 477              	.L45:
 478 000c 08590040 		.word	1073764616
 479              		.cfi_endproc
ARM GAS  C:\Users\sinow\AppData\Local\Temp\ccjMou1W.s 			page 22


 480              	.LFE7:
 481              		.size	ADC_SAR_1_StopConvert, .-ADC_SAR_1_StopConvert
 482              		.section	.text.ADC_SAR_1_IsEndConversion,"ax",%progbits
 483              		.align	2
 484              		.global	ADC_SAR_1_IsEndConversion
 485              		.thumb
 486              		.thumb_func
 487              		.type	ADC_SAR_1_IsEndConversion, %function
 488              	ADC_SAR_1_IsEndConversion:
 489              	.LFB8:
 476:Generated_Source\PSoC5/ADC_SAR_1.c ****     uint8 status;
 490              		.loc 1 476 0
 491              		.cfi_startproc
 492              		@ args = 0, pretend = 0, frame = 0
 493              		@ frame_needed = 0, uses_anonymous_args = 0
 494              	.LVL36:
 495 0000 10B5     		push	{r4, lr}
 496              		.cfi_def_cfa_offset 8
 497              		.cfi_offset 4, -8
 498              		.cfi_offset 14, -4
 499              	.L49:
 481:Generated_Source\PSoC5/ADC_SAR_1.c ****     } while ((status != ADC_SAR_1_SAR_EOF_1) && (retMode == ADC_SAR_1_WAIT_FOR_RESULT));
 500              		.loc 1 481 0 discriminator 2
 501 0002 074B     		ldr	r3, .L52
 502 0004 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 503              	.LVL37:
 482:Generated_Source\PSoC5/ADC_SAR_1.c ****     /* If convertion complete, wait until EOF bit released */
 504              		.loc 1 482 0 discriminator 2
 505 0006 13F00104 		ands	r4, r3, #1
 506 000a 01D1     		bne	.L48
 482:Generated_Source\PSoC5/ADC_SAR_1.c ****     /* If convertion complete, wait until EOF bit released */
 507              		.loc 1 482 0 is_stmt 0 discriminator 1
 508 000c 0028     		cmp	r0, #0
 509 000e F8D0     		beq	.L49
 510              	.L48:
 484:Generated_Source\PSoC5/ADC_SAR_1.c ****     {
 511              		.loc 1 484 0 is_stmt 1
 512 0010 24B1     		cbz	r4, .L50
 487:Generated_Source\PSoC5/ADC_SAR_1.c ****         /* Do the unconditional read operation of the CSR1 register to make sure the EOC bit has be
 513              		.loc 1 487 0
 514 0012 0120     		movs	r0, #1
 515              	.LVL38:
 516 0014 FFF7FEFF 		bl	CyDelayUs
 517              	.LVL39:
 489:Generated_Source\PSoC5/ADC_SAR_1.c ****     }
 518              		.loc 1 489 0
 519 0018 014B     		ldr	r3, .L52
 520 001a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 521              	.L50:
 493:Generated_Source\PSoC5/ADC_SAR_1.c **** 
 522              		.loc 1 493 0
 523 001c 2046     		mov	r0, r4
 524 001e 10BD     		pop	{r4, pc}
 525              	.L53:
 526              		.align	2
 527              	.L52:
 528 0020 09590040 		.word	1073764617
ARM GAS  C:\Users\sinow\AppData\Local\Temp\ccjMou1W.s 			page 23


 529              		.cfi_endproc
 530              	.LFE8:
 531              		.size	ADC_SAR_1_IsEndConversion, .-ADC_SAR_1_IsEndConversion
 532              		.section	.text.ADC_SAR_1_GetResult8,"ax",%progbits
 533              		.align	2
 534              		.global	ADC_SAR_1_GetResult8
 535              		.thumb
 536              		.thumb_func
 537              		.type	ADC_SAR_1_GetResult8, %function
 538              	ADC_SAR_1_GetResult8:
 539              	.LFB9:
 521:Generated_Source\PSoC5/ADC_SAR_1.c ****     return( (int8)ADC_SAR_1_SAR_WRK0_REG - (int8)ADC_SAR_1_shift);
 540              		.loc 1 521 0
 541              		.cfi_startproc
 542              		@ args = 0, pretend = 0, frame = 0
 543              		@ frame_needed = 0, uses_anonymous_args = 0
 544              		@ link register save eliminated.
 522:Generated_Source\PSoC5/ADC_SAR_1.c **** }
 545              		.loc 1 522 0
 546 0000 034B     		ldr	r3, .L55
 547 0002 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 548 0004 034A     		ldr	r2, .L55+4
 549 0006 1088     		ldrh	r0, [r2]
 550 0008 00B2     		sxth	r0, r0
 551 000a 181A     		subs	r0, r3, r0
 523:Generated_Source\PSoC5/ADC_SAR_1.c **** 
 552              		.loc 1 523 0
 553 000c 40B2     		sxtb	r0, r0
 554 000e 7047     		bx	lr
 555              	.L56:
 556              		.align	2
 557              	.L55:
 558 0010 A25B0040 		.word	1073765282
 559 0014 00000000 		.word	ADC_SAR_1_shift
 560              		.cfi_endproc
 561              	.LFE9:
 562              		.size	ADC_SAR_1_GetResult8, .-ADC_SAR_1_GetResult8
 563              		.section	.text.ADC_SAR_1_GetResult16,"ax",%progbits
 564              		.align	2
 565              		.global	ADC_SAR_1_GetResult16
 566              		.thumb
 567              		.thumb_func
 568              		.type	ADC_SAR_1_GetResult16, %function
 569              	ADC_SAR_1_GetResult16:
 570              	.LFB10:
 551:Generated_Source\PSoC5/ADC_SAR_1.c ****     uint16 res;
 571              		.loc 1 551 0
 572              		.cfi_startproc
 573              		@ args = 0, pretend = 0, frame = 0
 574              		@ frame_needed = 0, uses_anonymous_args = 0
 575              		@ link register save eliminated.
 554:Generated_Source\PSoC5/ADC_SAR_1.c **** 
 576              		.loc 1 554 0
 577 0000 034B     		ldr	r3, .L58
 578 0002 1888     		ldrh	r0, [r3]
 579 0004 80B2     		uxth	r0, r0
 580              	.LVL40:
ARM GAS  C:\Users\sinow\AppData\Local\Temp\ccjMou1W.s 			page 24


 556:Generated_Source\PSoC5/ADC_SAR_1.c **** }
 581              		.loc 1 556 0
 582 0006 034B     		ldr	r3, .L58+4
 583 0008 1B88     		ldrh	r3, [r3]
 584 000a C01A     		subs	r0, r0, r3
 585              	.LVL41:
 557:Generated_Source\PSoC5/ADC_SAR_1.c **** 
 586              		.loc 1 557 0
 587 000c 00B2     		sxth	r0, r0
 588 000e 7047     		bx	lr
 589              	.L59:
 590              		.align	2
 591              	.L58:
 592 0010 A25B0040 		.word	1073765282
 593 0014 00000000 		.word	ADC_SAR_1_shift
 594              		.cfi_endproc
 595              	.LFE10:
 596              		.size	ADC_SAR_1_GetResult16, .-ADC_SAR_1_GetResult16
 597              		.section	.text.ADC_SAR_1_SetOffset,"ax",%progbits
 598              		.align	2
 599              		.global	ADC_SAR_1_SetOffset
 600              		.thumb
 601              		.thumb_func
 602              		.type	ADC_SAR_1_SetOffset, %function
 603              	ADC_SAR_1_SetOffset:
 604              	.LFB11:
 586:Generated_Source\PSoC5/ADC_SAR_1.c ****     ADC_SAR_1_offset = offset;
 605              		.loc 1 586 0
 606              		.cfi_startproc
 607              		@ args = 0, pretend = 0, frame = 0
 608              		@ frame_needed = 0, uses_anonymous_args = 0
 609              		@ link register save eliminated.
 610              	.LVL42:
 587:Generated_Source\PSoC5/ADC_SAR_1.c **** }
 611              		.loc 1 587 0
 612 0000 014B     		ldr	r3, .L61
 613 0002 1880     		strh	r0, [r3]	@ movhi
 614 0004 7047     		bx	lr
 615              	.L62:
 616 0006 00BF     		.align	2
 617              	.L61:
 618 0008 00000000 		.word	ADC_SAR_1_offset
 619              		.cfi_endproc
 620              	.LFE11:
 621              		.size	ADC_SAR_1_SetOffset, .-ADC_SAR_1_SetOffset
 622              		.section	.text.ADC_SAR_1_SetGain,"ax",%progbits
 623              		.align	2
 624              		.global	ADC_SAR_1_SetGain
 625              		.thumb
 626              		.thumb_func
 627              		.type	ADC_SAR_1_SetGain, %function
 628              	ADC_SAR_1_SetGain:
 629              	.LFB13:
 665:Generated_Source\PSoC5/ADC_SAR_1.c ****     #else
 666:Generated_Source\PSoC5/ADC_SAR_1.c ****         ADC_SAR_1_shift = diff_zero;
 667:Generated_Source\PSoC5/ADC_SAR_1.c ****     #endif /* End ADC_SAR_1_DEFAULT_RANGE */
 668:Generated_Source\PSoC5/ADC_SAR_1.c **** }
ARM GAS  C:\Users\sinow\AppData\Local\Temp\ccjMou1W.s 			page 25


 669:Generated_Source\PSoC5/ADC_SAR_1.c **** 
 670:Generated_Source\PSoC5/ADC_SAR_1.c **** 
 671:Generated_Source\PSoC5/ADC_SAR_1.c **** /*******************************************************************************
 672:Generated_Source\PSoC5/ADC_SAR_1.c **** * Function Name: ADC_SAR_1_SetGain
 673:Generated_Source\PSoC5/ADC_SAR_1.c **** ********************************************************************************
 674:Generated_Source\PSoC5/ADC_SAR_1.c **** *
 675:Generated_Source\PSoC5/ADC_SAR_1.c **** * Summary:
 676:Generated_Source\PSoC5/ADC_SAR_1.c **** *  Sets the ADC gain in counts per volt for the voltage conversion functions
 677:Generated_Source\PSoC5/ADC_SAR_1.c **** *  that follow. This value is set by default by the reference and input range
 678:Generated_Source\PSoC5/ADC_SAR_1.c **** *  settings. It should only be used to further calibrate the ADC with a known
 679:Generated_Source\PSoC5/ADC_SAR_1.c **** *  input or if the ADC is using an external reference.
 680:Generated_Source\PSoC5/ADC_SAR_1.c **** *
 681:Generated_Source\PSoC5/ADC_SAR_1.c **** * Parameters:
 682:Generated_Source\PSoC5/ADC_SAR_1.c **** *  int16 adcGain counts per volt
 683:Generated_Source\PSoC5/ADC_SAR_1.c **** *
 684:Generated_Source\PSoC5/ADC_SAR_1.c **** * Return:
 685:Generated_Source\PSoC5/ADC_SAR_1.c **** *  None.
 686:Generated_Source\PSoC5/ADC_SAR_1.c **** *
 687:Generated_Source\PSoC5/ADC_SAR_1.c **** * Global Variables:
 688:Generated_Source\PSoC5/ADC_SAR_1.c **** *  ADC_SAR_1_countsPer10Volt variable modified. This variable is used
 689:Generated_Source\PSoC5/ADC_SAR_1.c **** *  for gain calibration purpose.
 690:Generated_Source\PSoC5/ADC_SAR_1.c **** *
 691:Generated_Source\PSoC5/ADC_SAR_1.c **** *******************************************************************************/
 692:Generated_Source\PSoC5/ADC_SAR_1.c **** void ADC_SAR_1_SetGain(int16 adcGain)
 693:Generated_Source\PSoC5/ADC_SAR_1.c **** {
 630              		.loc 1 693 0
 631              		.cfi_startproc
 632              		@ args = 0, pretend = 0, frame = 0
 633              		@ frame_needed = 0, uses_anonymous_args = 0
 634              		@ link register save eliminated.
 635              	.LVL43:
 694:Generated_Source\PSoC5/ADC_SAR_1.c ****     ADC_SAR_1_countsPer10Volt = (int32)adcGain * 10;
 636              		.loc 1 694 0
 637 0000 00EB8000 		add	r0, r0, r0, lsl #2
 638              	.LVL44:
 639 0004 4300     		lsls	r3, r0, #1
 640 0006 014A     		ldr	r2, .L64
 641 0008 1360     		str	r3, [r2]
 642 000a 7047     		bx	lr
 643              	.L65:
 644              		.align	2
 645              	.L64:
 646 000c 00000000 		.word	ADC_SAR_1_countsPer10Volt
 647              		.cfi_endproc
 648              	.LFE13:
 649              		.size	ADC_SAR_1_SetGain, .-ADC_SAR_1_SetGain
 650              		.section	.text.ADC_SAR_1_SetScaledGain,"ax",%progbits
 651              		.align	2
 652              		.global	ADC_SAR_1_SetScaledGain
 653              		.thumb
 654              		.thumb_func
 655              		.type	ADC_SAR_1_SetScaledGain, %function
 656              	ADC_SAR_1_SetScaledGain:
 657              	.LFB14:
 695:Generated_Source\PSoC5/ADC_SAR_1.c **** }
 696:Generated_Source\PSoC5/ADC_SAR_1.c **** 
 697:Generated_Source\PSoC5/ADC_SAR_1.c **** 
ARM GAS  C:\Users\sinow\AppData\Local\Temp\ccjMou1W.s 			page 26


 698:Generated_Source\PSoC5/ADC_SAR_1.c **** /*******************************************************************************
 699:Generated_Source\PSoC5/ADC_SAR_1.c **** * Function Name: ADC_SAR_1_SetScaledGain
 700:Generated_Source\PSoC5/ADC_SAR_1.c **** ********************************************************************************
 701:Generated_Source\PSoC5/ADC_SAR_1.c **** *
 702:Generated_Source\PSoC5/ADC_SAR_1.c **** * Summary:
 703:Generated_Source\PSoC5/ADC_SAR_1.c **** *  Sets the ADC gain in counts per 10 volt for the voltage conversion functions
 704:Generated_Source\PSoC5/ADC_SAR_1.c **** *  that follow. This value is set by default by the reference and input range
 705:Generated_Source\PSoC5/ADC_SAR_1.c **** *  settings. It should only be used to further calibrate the ADC with a known
 706:Generated_Source\PSoC5/ADC_SAR_1.c **** *  input or if the ADC is using an external reference.
 707:Generated_Source\PSoC5/ADC_SAR_1.c **** *
 708:Generated_Source\PSoC5/ADC_SAR_1.c **** * Parameters:
 709:Generated_Source\PSoC5/ADC_SAR_1.c **** *  int32 adcGain  counts per 10 volt
 710:Generated_Source\PSoC5/ADC_SAR_1.c **** *
 711:Generated_Source\PSoC5/ADC_SAR_1.c **** * Return:
 712:Generated_Source\PSoC5/ADC_SAR_1.c **** *  None.
 713:Generated_Source\PSoC5/ADC_SAR_1.c **** *
 714:Generated_Source\PSoC5/ADC_SAR_1.c **** * Global Variables:
 715:Generated_Source\PSoC5/ADC_SAR_1.c **** *  ADC_SAR_1_countsPer10Volt variable modified. This variable is used
 716:Generated_Source\PSoC5/ADC_SAR_1.c **** *  for gain calibration purpose.
 717:Generated_Source\PSoC5/ADC_SAR_1.c **** *
 718:Generated_Source\PSoC5/ADC_SAR_1.c **** *******************************************************************************/
 719:Generated_Source\PSoC5/ADC_SAR_1.c **** void ADC_SAR_1_SetScaledGain(int32 adcGain)
 720:Generated_Source\PSoC5/ADC_SAR_1.c **** {
 658              		.loc 1 720 0
 659              		.cfi_startproc
 660              		@ args = 0, pretend = 0, frame = 0
 661              		@ frame_needed = 0, uses_anonymous_args = 0
 662              		@ link register save eliminated.
 663              	.LVL45:
 721:Generated_Source\PSoC5/ADC_SAR_1.c ****     ADC_SAR_1_countsPer10Volt = adcGain;
 664              		.loc 1 721 0
 665 0000 014B     		ldr	r3, .L67
 666 0002 1860     		str	r0, [r3]
 667 0004 7047     		bx	lr
 668              	.L68:
 669 0006 00BF     		.align	2
 670              	.L67:
 671 0008 00000000 		.word	ADC_SAR_1_countsPer10Volt
 672              		.cfi_endproc
 673              	.LFE14:
 674              		.size	ADC_SAR_1_SetScaledGain, .-ADC_SAR_1_SetScaledGain
 675              		.section	.text.ADC_SAR_1_CountsTo_mVolts,"ax",%progbits
 676              		.align	2
 677              		.global	ADC_SAR_1_CountsTo_mVolts
 678              		.thumb
 679              		.thumb_func
 680              		.type	ADC_SAR_1_CountsTo_mVolts, %function
 681              	ADC_SAR_1_CountsTo_mVolts:
 682              	.LFB15:
 722:Generated_Source\PSoC5/ADC_SAR_1.c **** }
 723:Generated_Source\PSoC5/ADC_SAR_1.c **** 
 724:Generated_Source\PSoC5/ADC_SAR_1.c **** 
 725:Generated_Source\PSoC5/ADC_SAR_1.c **** /*******************************************************************************
 726:Generated_Source\PSoC5/ADC_SAR_1.c **** * Function Name: ADC_SAR_1_CountsTo_mVolts
 727:Generated_Source\PSoC5/ADC_SAR_1.c **** ********************************************************************************
 728:Generated_Source\PSoC5/ADC_SAR_1.c **** *
 729:Generated_Source\PSoC5/ADC_SAR_1.c **** * Summary:
ARM GAS  C:\Users\sinow\AppData\Local\Temp\ccjMou1W.s 			page 27


 730:Generated_Source\PSoC5/ADC_SAR_1.c **** *  Converts the ADC output to millivolts as a 16-bit integer.
 731:Generated_Source\PSoC5/ADC_SAR_1.c **** *
 732:Generated_Source\PSoC5/ADC_SAR_1.c **** * Parameters:
 733:Generated_Source\PSoC5/ADC_SAR_1.c **** *  int16 adcCounts:  Result from the ADC conversion
 734:Generated_Source\PSoC5/ADC_SAR_1.c **** *
 735:Generated_Source\PSoC5/ADC_SAR_1.c **** * Return:
 736:Generated_Source\PSoC5/ADC_SAR_1.c **** *  int16 Result in mVolts
 737:Generated_Source\PSoC5/ADC_SAR_1.c **** *
 738:Generated_Source\PSoC5/ADC_SAR_1.c **** * Global Variables:
 739:Generated_Source\PSoC5/ADC_SAR_1.c **** *  ADC_SAR_1_offset variable used.
 740:Generated_Source\PSoC5/ADC_SAR_1.c **** *  ADC_SAR_1_countsPer10Volt variable used.
 741:Generated_Source\PSoC5/ADC_SAR_1.c **** *
 742:Generated_Source\PSoC5/ADC_SAR_1.c **** *******************************************************************************/
 743:Generated_Source\PSoC5/ADC_SAR_1.c **** int16 ADC_SAR_1_CountsTo_mVolts(int16 adcCounts)
 744:Generated_Source\PSoC5/ADC_SAR_1.c **** {
 683              		.loc 1 744 0
 684              		.cfi_startproc
 685              		@ args = 0, pretend = 0, frame = 0
 686              		@ frame_needed = 0, uses_anonymous_args = 0
 687              		@ link register save eliminated.
 688              	.LVL46:
 689 0000 10B4     		push	{r4}
 690              		.cfi_def_cfa_offset 4
 691              		.cfi_offset 4, -4
 745:Generated_Source\PSoC5/ADC_SAR_1.c ****     int16 mVolts;
 746:Generated_Source\PSoC5/ADC_SAR_1.c ****     int32 countsPer10Volt;
 747:Generated_Source\PSoC5/ADC_SAR_1.c **** 
 748:Generated_Source\PSoC5/ADC_SAR_1.c ****     if(ADC_SAR_1_countsPerVolt != 0)
 692              		.loc 1 748 0
 693 0002 124B     		ldr	r3, .L75
 694 0004 1B88     		ldrh	r3, [r3]
 695 0006 1BB2     		sxth	r3, r3
 696 0008 33B1     		cbz	r3, .L70
 749:Generated_Source\PSoC5/ADC_SAR_1.c ****     {   /* Support obsolete method */
 750:Generated_Source\PSoC5/ADC_SAR_1.c ****         countsPer10Volt = (int32)ADC_SAR_1_countsPerVolt * 10;
 697              		.loc 1 750 0
 698 000a 104B     		ldr	r3, .L75
 699 000c 1B88     		ldrh	r3, [r3]
 700 000e 1BB2     		sxth	r3, r3
 701 0010 03EB8303 		add	r3, r3, r3, lsl #2
 702 0014 5C00     		lsls	r4, r3, #1
 703              	.LVL47:
 704 0016 01E0     		b	.L71
 705              	.LVL48:
 706              	.L70:
 751:Generated_Source\PSoC5/ADC_SAR_1.c ****     }
 752:Generated_Source\PSoC5/ADC_SAR_1.c ****     else
 753:Generated_Source\PSoC5/ADC_SAR_1.c ****     {
 754:Generated_Source\PSoC5/ADC_SAR_1.c ****         countsPer10Volt = ADC_SAR_1_countsPer10Volt;
 707              		.loc 1 754 0
 708 0018 0D4B     		ldr	r3, .L75+4
 709 001a 1C68     		ldr	r4, [r3]
 710              	.LVL49:
 711              	.L71:
 755:Generated_Source\PSoC5/ADC_SAR_1.c ****     }
 756:Generated_Source\PSoC5/ADC_SAR_1.c **** 
 757:Generated_Source\PSoC5/ADC_SAR_1.c ****     /* Subtract ADC offset */
ARM GAS  C:\Users\sinow\AppData\Local\Temp\ccjMou1W.s 			page 28


 758:Generated_Source\PSoC5/ADC_SAR_1.c ****     adcCounts -= ADC_SAR_1_offset;
 712              		.loc 1 758 0
 713 001c 0D4B     		ldr	r3, .L75+8
 714 001e 1988     		ldrh	r1, [r3]
 715 0020 411A     		subs	r1, r0, r1
 716 0022 09B2     		sxth	r1, r1
 717              	.LVL50:
 759:Generated_Source\PSoC5/ADC_SAR_1.c ****     /* Convert to millivolts with rounding */
 760:Generated_Source\PSoC5/ADC_SAR_1.c ****     mVolts = (int16)( (( (int32)adcCounts * ADC_SAR_1_10MV_COUNTS ) + ( (adcCounts > 0) ?
 718              		.loc 1 760 0
 719 0024 42F21073 		movw	r3, #10000
 720 0028 03FB01F2 		mul	r2, r3, r1
 761:Generated_Source\PSoC5/ADC_SAR_1.c ****                        (countsPer10Volt / 2) : (-(countsPer10Volt / 2)) )) / countsPer10Volt);
 721              		.loc 1 761 0
 722 002c 0029     		cmp	r1, #0
 723 002e 03DD     		ble	.L72
 724              		.loc 1 761 0 is_stmt 0 discriminator 1
 725 0030 04EBD470 		add	r0, r4, r4, lsr #31
 726 0034 4010     		asrs	r0, r0, #1
 727 0036 03E0     		b	.L73
 728              	.L72:
 729              		.loc 1 761 0 discriminator 2
 730 0038 04EBD470 		add	r0, r4, r4, lsr #31
 731 003c 4010     		asrs	r0, r0, #1
 732 003e 4042     		negs	r0, r0
 733              	.L73:
 760:Generated_Source\PSoC5/ADC_SAR_1.c ****                        (countsPer10Volt / 2) : (-(countsPer10Volt / 2)) )) / countsPer10Volt);
 734              		.loc 1 760 0 is_stmt 1
 735 0040 8318     		adds	r3, r0, r2
 736              		.loc 1 761 0
 737 0042 93FBF4F0 		sdiv	r0, r3, r4
 738              	.LVL51:
 762:Generated_Source\PSoC5/ADC_SAR_1.c **** 
 763:Generated_Source\PSoC5/ADC_SAR_1.c ****     return( mVolts );
 764:Generated_Source\PSoC5/ADC_SAR_1.c **** }
 739              		.loc 1 764 0
 740 0046 00B2     		sxth	r0, r0
 741 0048 10BC     		pop	{r4}
 742              		.cfi_restore 4
 743              		.cfi_def_cfa_offset 0
 744              	.LVL52:
 745 004a 7047     		bx	lr
 746              	.L76:
 747              		.align	2
 748              	.L75:
 749 004c 00000000 		.word	ADC_SAR_1_countsPerVolt
 750 0050 00000000 		.word	ADC_SAR_1_countsPer10Volt
 751 0054 00000000 		.word	ADC_SAR_1_offset
 752              		.cfi_endproc
 753              	.LFE15:
 754              		.size	ADC_SAR_1_CountsTo_mVolts, .-ADC_SAR_1_CountsTo_mVolts
 755              		.global	__aeabi_ldivmod
 756              		.section	.text.ADC_SAR_1_CountsTo_uVolts,"ax",%progbits
 757              		.align	2
 758              		.global	ADC_SAR_1_CountsTo_uVolts
 759              		.thumb
 760              		.thumb_func
ARM GAS  C:\Users\sinow\AppData\Local\Temp\ccjMou1W.s 			page 29


 761              		.type	ADC_SAR_1_CountsTo_uVolts, %function
 762              	ADC_SAR_1_CountsTo_uVolts:
 763              	.LFB16:
 765:Generated_Source\PSoC5/ADC_SAR_1.c **** 
 766:Generated_Source\PSoC5/ADC_SAR_1.c **** 
 767:Generated_Source\PSoC5/ADC_SAR_1.c **** /*******************************************************************************
 768:Generated_Source\PSoC5/ADC_SAR_1.c **** * Function Name: ADC_SAR_1_CountsTo_uVolts
 769:Generated_Source\PSoC5/ADC_SAR_1.c **** ********************************************************************************
 770:Generated_Source\PSoC5/ADC_SAR_1.c **** *
 771:Generated_Source\PSoC5/ADC_SAR_1.c **** * Summary:
 772:Generated_Source\PSoC5/ADC_SAR_1.c **** *  Converts the ADC output to microvolts as a 32-bit integer.
 773:Generated_Source\PSoC5/ADC_SAR_1.c **** *
 774:Generated_Source\PSoC5/ADC_SAR_1.c **** * Parameters:
 775:Generated_Source\PSoC5/ADC_SAR_1.c **** *  int16 adcCounts: Result from the ADC conversion
 776:Generated_Source\PSoC5/ADC_SAR_1.c **** *
 777:Generated_Source\PSoC5/ADC_SAR_1.c **** * Return:
 778:Generated_Source\PSoC5/ADC_SAR_1.c **** *  int32 Result in micro Volts
 779:Generated_Source\PSoC5/ADC_SAR_1.c **** *
 780:Generated_Source\PSoC5/ADC_SAR_1.c **** * Global Variables:
 781:Generated_Source\PSoC5/ADC_SAR_1.c **** *  ADC_SAR_1_offset variable used.
 782:Generated_Source\PSoC5/ADC_SAR_1.c **** *  ADC_SAR_1_countsPer10Volt used to convert ADC counts to uVolts.
 783:Generated_Source\PSoC5/ADC_SAR_1.c **** *
 784:Generated_Source\PSoC5/ADC_SAR_1.c **** *******************************************************************************/
 785:Generated_Source\PSoC5/ADC_SAR_1.c **** int32 ADC_SAR_1_CountsTo_uVolts(int16 adcCounts)
 786:Generated_Source\PSoC5/ADC_SAR_1.c **** {
 764              		.loc 1 786 0
 765              		.cfi_startproc
 766              		@ args = 0, pretend = 0, frame = 0
 767              		@ frame_needed = 0, uses_anonymous_args = 0
 768              	.LVL53:
 769 0000 38B5     		push	{r3, r4, r5, lr}
 770              		.cfi_def_cfa_offset 16
 771              		.cfi_offset 3, -16
 772              		.cfi_offset 4, -12
 773              		.cfi_offset 5, -8
 774              		.cfi_offset 14, -4
 787:Generated_Source\PSoC5/ADC_SAR_1.c **** 
 788:Generated_Source\PSoC5/ADC_SAR_1.c ****     int64 uVolts;
 789:Generated_Source\PSoC5/ADC_SAR_1.c ****     int32 countsPer10Volt;
 790:Generated_Source\PSoC5/ADC_SAR_1.c **** 
 791:Generated_Source\PSoC5/ADC_SAR_1.c ****     if(ADC_SAR_1_countsPerVolt != 0)
 775              		.loc 1 791 0
 776 0002 0D4B     		ldr	r3, .L81
 777 0004 1B88     		ldrh	r3, [r3]
 778 0006 1BB2     		sxth	r3, r3
 779 0008 33B1     		cbz	r3, .L78
 792:Generated_Source\PSoC5/ADC_SAR_1.c ****     {   /* Support obsolete method */
 793:Generated_Source\PSoC5/ADC_SAR_1.c ****         countsPer10Volt = (int32)ADC_SAR_1_countsPerVolt * 10;
 780              		.loc 1 793 0
 781 000a 0B4B     		ldr	r3, .L81
 782 000c 1B88     		ldrh	r3, [r3]
 783 000e 1BB2     		sxth	r3, r3
 784 0010 03EB8303 		add	r3, r3, r3, lsl #2
 785 0014 5A00     		lsls	r2, r3, #1
 786              	.LVL54:
 787 0016 01E0     		b	.L79
 788              	.LVL55:
ARM GAS  C:\Users\sinow\AppData\Local\Temp\ccjMou1W.s 			page 30


 789              	.L78:
 794:Generated_Source\PSoC5/ADC_SAR_1.c ****     }
 795:Generated_Source\PSoC5/ADC_SAR_1.c ****     else
 796:Generated_Source\PSoC5/ADC_SAR_1.c ****     {
 797:Generated_Source\PSoC5/ADC_SAR_1.c ****         countsPer10Volt = ADC_SAR_1_countsPer10Volt;
 790              		.loc 1 797 0
 791 0018 084B     		ldr	r3, .L81+4
 792 001a 1A68     		ldr	r2, [r3]
 793              	.LVL56:
 794              	.L79:
 798:Generated_Source\PSoC5/ADC_SAR_1.c ****     }
 799:Generated_Source\PSoC5/ADC_SAR_1.c **** 
 800:Generated_Source\PSoC5/ADC_SAR_1.c ****     /* Subtract ADC offset */
 801:Generated_Source\PSoC5/ADC_SAR_1.c ****     adcCounts -= ADC_SAR_1_offset;
 795              		.loc 1 801 0
 796 001c 084B     		ldr	r3, .L81+8
 797 001e 1C88     		ldrh	r4, [r3]
 798 0020 041B     		subs	r4, r0, r4
 799              	.LVL57:
 802:Generated_Source\PSoC5/ADC_SAR_1.c ****     /* To convert adcCounts to microVolts it is required to be multiplied
 803:Generated_Source\PSoC5/ADC_SAR_1.c ****     *  on 10 million and later divide on gain in counts per 10V.
 804:Generated_Source\PSoC5/ADC_SAR_1.c ****     */
 805:Generated_Source\PSoC5/ADC_SAR_1.c ****     uVolts = (( (int64)adcCounts * ADC_SAR_1_10UV_COUNTS ) / countsPer10Volt);
 800              		.loc 1 805 0
 801 0022 24B2     		sxth	r4, r4
 802 0024 E517     		asrs	r5, r4, #31
 803 0026 074B     		ldr	r3, .L81+12
 804 0028 A4FB0301 		umull	r0, r1, r4, r3
 805 002c 03FB0511 		mla	r1, r3, r5, r1
 806 0030 D317     		asrs	r3, r2, #31
 807 0032 FFF7FEFF 		bl	__aeabi_ldivmod
 808              	.LVL58:
 806:Generated_Source\PSoC5/ADC_SAR_1.c **** 
 807:Generated_Source\PSoC5/ADC_SAR_1.c ****     return((int32) uVolts );
 808:Generated_Source\PSoC5/ADC_SAR_1.c **** }
 809              		.loc 1 808 0
 810 0036 38BD     		pop	{r3, r4, r5, pc}
 811              	.LVL59:
 812              	.L82:
 813              		.align	2
 814              	.L81:
 815 0038 00000000 		.word	ADC_SAR_1_countsPerVolt
 816 003c 00000000 		.word	ADC_SAR_1_countsPer10Volt
 817 0040 00000000 		.word	ADC_SAR_1_offset
 818 0044 80969800 		.word	10000000
 819              		.cfi_endproc
 820              	.LFE16:
 821              		.size	ADC_SAR_1_CountsTo_uVolts, .-ADC_SAR_1_CountsTo_uVolts
 822              		.global	__aeabi_i2f
 823              		.global	__aeabi_fmul
 824              		.global	__aeabi_fdiv
 825              		.section	.text.ADC_SAR_1_CountsTo_Volts,"ax",%progbits
 826              		.align	2
 827              		.global	ADC_SAR_1_CountsTo_Volts
 828              		.thumb
 829              		.thumb_func
 830              		.type	ADC_SAR_1_CountsTo_Volts, %function
ARM GAS  C:\Users\sinow\AppData\Local\Temp\ccjMou1W.s 			page 31


 831              	ADC_SAR_1_CountsTo_Volts:
 832              	.LFB17:
 809:Generated_Source\PSoC5/ADC_SAR_1.c **** 
 810:Generated_Source\PSoC5/ADC_SAR_1.c **** 
 811:Generated_Source\PSoC5/ADC_SAR_1.c **** /*******************************************************************************
 812:Generated_Source\PSoC5/ADC_SAR_1.c **** * Function Name: ADC_SAR_1_CountsTo_Volts
 813:Generated_Source\PSoC5/ADC_SAR_1.c **** ********************************************************************************
 814:Generated_Source\PSoC5/ADC_SAR_1.c **** *
 815:Generated_Source\PSoC5/ADC_SAR_1.c **** * Summary:
 816:Generated_Source\PSoC5/ADC_SAR_1.c **** *  Converts the ADC output to volts as a floating-point number.
 817:Generated_Source\PSoC5/ADC_SAR_1.c **** *
 818:Generated_Source\PSoC5/ADC_SAR_1.c **** * Parameters:
 819:Generated_Source\PSoC5/ADC_SAR_1.c **** *  int16 adcCounts: Result from the ADC conversion
 820:Generated_Source\PSoC5/ADC_SAR_1.c **** *
 821:Generated_Source\PSoC5/ADC_SAR_1.c **** * Return:
 822:Generated_Source\PSoC5/ADC_SAR_1.c **** *  float Result in Volts
 823:Generated_Source\PSoC5/ADC_SAR_1.c **** *
 824:Generated_Source\PSoC5/ADC_SAR_1.c **** * Global Variables:
 825:Generated_Source\PSoC5/ADC_SAR_1.c **** *  ADC_SAR_1_offset variable used.
 826:Generated_Source\PSoC5/ADC_SAR_1.c **** *  ADC_SAR_1_countsPer10Volt used to convert ADC counts to Volts.
 827:Generated_Source\PSoC5/ADC_SAR_1.c **** *
 828:Generated_Source\PSoC5/ADC_SAR_1.c **** *******************************************************************************/
 829:Generated_Source\PSoC5/ADC_SAR_1.c **** float32 ADC_SAR_1_CountsTo_Volts(int16 adcCounts)
 830:Generated_Source\PSoC5/ADC_SAR_1.c **** {
 833              		.loc 1 830 0
 834              		.cfi_startproc
 835              		@ args = 0, pretend = 0, frame = 0
 836              		@ frame_needed = 0, uses_anonymous_args = 0
 837              	.LVL60:
 838 0000 38B5     		push	{r3, r4, r5, lr}
 839              		.cfi_def_cfa_offset 16
 840              		.cfi_offset 3, -16
 841              		.cfi_offset 4, -12
 842              		.cfi_offset 5, -8
 843              		.cfi_offset 14, -4
 831:Generated_Source\PSoC5/ADC_SAR_1.c ****     float32 volts;
 832:Generated_Source\PSoC5/ADC_SAR_1.c ****     int32 countsPer10Volt;
 833:Generated_Source\PSoC5/ADC_SAR_1.c **** 
 834:Generated_Source\PSoC5/ADC_SAR_1.c ****     if(ADC_SAR_1_countsPerVolt != 0)
 844              		.loc 1 834 0
 845 0002 0F4B     		ldr	r3, .L87
 846 0004 1B88     		ldrh	r3, [r3]
 847 0006 1BB2     		sxth	r3, r3
 848 0008 33B1     		cbz	r3, .L84
 835:Generated_Source\PSoC5/ADC_SAR_1.c ****     {   /* Support obsolete method */
 836:Generated_Source\PSoC5/ADC_SAR_1.c ****         countsPer10Volt = (int32)ADC_SAR_1_countsPerVolt * 10;
 849              		.loc 1 836 0
 850 000a 0D4B     		ldr	r3, .L87
 851 000c 1B88     		ldrh	r3, [r3]
 852 000e 1BB2     		sxth	r3, r3
 853 0010 03EB8303 		add	r3, r3, r3, lsl #2
 854 0014 5C00     		lsls	r4, r3, #1
 855              	.LVL61:
 856 0016 01E0     		b	.L85
 857              	.LVL62:
 858              	.L84:
 837:Generated_Source\PSoC5/ADC_SAR_1.c ****     }
ARM GAS  C:\Users\sinow\AppData\Local\Temp\ccjMou1W.s 			page 32


 838:Generated_Source\PSoC5/ADC_SAR_1.c ****     else
 839:Generated_Source\PSoC5/ADC_SAR_1.c ****     {
 840:Generated_Source\PSoC5/ADC_SAR_1.c ****         countsPer10Volt = ADC_SAR_1_countsPer10Volt;
 859              		.loc 1 840 0
 860 0018 0A4B     		ldr	r3, .L87+4
 861 001a 1C68     		ldr	r4, [r3]
 862              	.LVL63:
 863              	.L85:
 841:Generated_Source\PSoC5/ADC_SAR_1.c ****     }
 842:Generated_Source\PSoC5/ADC_SAR_1.c **** 
 843:Generated_Source\PSoC5/ADC_SAR_1.c ****     /* Subtract ADC offset */
 844:Generated_Source\PSoC5/ADC_SAR_1.c ****     adcCounts -= ADC_SAR_1_offset;
 864              		.loc 1 844 0
 865 001c 0A4B     		ldr	r3, .L87+8
 866 001e 1B88     		ldrh	r3, [r3]
 867 0020 C01A     		subs	r0, r0, r3
 868              	.LVL64:
 845:Generated_Source\PSoC5/ADC_SAR_1.c **** 
 846:Generated_Source\PSoC5/ADC_SAR_1.c ****     volts = ((float32)adcCounts * ADC_SAR_1_10V_COUNTS) / (float32)countsPer10Volt;
 869              		.loc 1 846 0
 870 0022 00B2     		sxth	r0, r0
 871 0024 FFF7FEFF 		bl	__aeabi_i2f
 872              	.LVL65:
 873 0028 0849     		ldr	r1, .L87+12
 874 002a FFF7FEFF 		bl	__aeabi_fmul
 875              	.LVL66:
 876 002e 0546     		mov	r5, r0
 877 0030 2046     		mov	r0, r4
 878 0032 FFF7FEFF 		bl	__aeabi_i2f
 879              	.LVL67:
 880 0036 0146     		mov	r1, r0
 881 0038 2846     		mov	r0, r5
 882 003a FFF7FEFF 		bl	__aeabi_fdiv
 883              	.LVL68:
 847:Generated_Source\PSoC5/ADC_SAR_1.c **** 
 848:Generated_Source\PSoC5/ADC_SAR_1.c ****     return( volts );
 849:Generated_Source\PSoC5/ADC_SAR_1.c **** }
 884              		.loc 1 849 0
 885 003e 38BD     		pop	{r3, r4, r5, pc}
 886              	.LVL69:
 887              	.L88:
 888              		.align	2
 889              	.L87:
 890 0040 00000000 		.word	ADC_SAR_1_countsPerVolt
 891 0044 00000000 		.word	ADC_SAR_1_countsPer10Volt
 892 0048 00000000 		.word	ADC_SAR_1_offset
 893 004c 00002041 		.word	1092616192
 894              		.cfi_endproc
 895              	.LFE17:
 896              		.size	ADC_SAR_1_CountsTo_Volts, .-ADC_SAR_1_CountsTo_Volts
 897              		.comm	ADC_SAR_1_shift,2,2
 898              		.comm	ADC_SAR_1_countsPer10Volt,4,4
 899              		.comm	ADC_SAR_1_countsPerVolt,2,2
 900              		.comm	ADC_SAR_1_offset,2,2
 901              		.global	ADC_SAR_1_initVar
 902              		.bss
 903              		.set	.LANCHOR0,. + 0
ARM GAS  C:\Users\sinow\AppData\Local\Temp\ccjMou1W.s 			page 33


 904              		.type	ADC_SAR_1_initVar, %object
 905              		.size	ADC_SAR_1_initVar, 1
 906              	ADC_SAR_1_initVar:
 907 0000 00       		.space	1
 908              		.text
 909              	.Letext0:
 910              		.file 2 "Generated_Source\\PSoC5\\cytypes.h"
 911              		.file 3 "Generated_Source\\PSoC5\\CyLib.h"
 912              		.section	.debug_info,"",%progbits
 913              	.Ldebug_info0:
 914 0000 9E050000 		.4byte	0x59e
 915 0004 0400     		.2byte	0x4
 916 0006 00000000 		.4byte	.Ldebug_abbrev0
 917 000a 04       		.byte	0x4
 918 000b 01       		.uleb128 0x1
 919 000c D5020000 		.4byte	.LASF65
 920 0010 0C       		.byte	0xc
 921 0011 84030000 		.4byte	.LASF66
 922 0015 24020000 		.4byte	.LASF67
 923 0019 00000000 		.4byte	.Ldebug_ranges0+0
 924 001d 00000000 		.4byte	0
 925 0021 00000000 		.4byte	.Ldebug_line0
 926 0025 02       		.uleb128 0x2
 927 0026 04       		.byte	0x4
 928 0027 05       		.byte	0x5
 929 0028 696E7400 		.ascii	"int\000"
 930 002c 03       		.uleb128 0x3
 931 002d 04       		.byte	0x4
 932 002e 07       		.byte	0x7
 933 002f E8000000 		.4byte	.LASF0
 934 0033 03       		.uleb128 0x3
 935 0034 08       		.byte	0x8
 936 0035 05       		.byte	0x5
 937 0036 63000000 		.4byte	.LASF1
 938 003a 03       		.uleb128 0x3
 939 003b 08       		.byte	0x8
 940 003c 04       		.byte	0x4
 941 003d 88010000 		.4byte	.LASF2
 942 0041 03       		.uleb128 0x3
 943 0042 01       		.byte	0x1
 944 0043 06       		.byte	0x6
 945 0044 71000000 		.4byte	.LASF3
 946 0048 03       		.uleb128 0x3
 947 0049 01       		.byte	0x1
 948 004a 08       		.byte	0x8
 949 004b 72020000 		.4byte	.LASF4
 950 004f 03       		.uleb128 0x3
 951 0050 02       		.byte	0x2
 952 0051 05       		.byte	0x5
 953 0052 9A020000 		.4byte	.LASF5
 954 0056 03       		.uleb128 0x3
 955 0057 02       		.byte	0x2
 956 0058 07       		.byte	0x7
 957 0059 2B010000 		.4byte	.LASF6
 958 005d 03       		.uleb128 0x3
 959 005e 04       		.byte	0x4
 960 005f 05       		.byte	0x5
ARM GAS  C:\Users\sinow\AppData\Local\Temp\ccjMou1W.s 			page 34


 961 0060 83000000 		.4byte	.LASF7
 962 0064 03       		.uleb128 0x3
 963 0065 04       		.byte	0x4
 964 0066 07       		.byte	0x7
 965 0067 FC000000 		.4byte	.LASF8
 966 006b 03       		.uleb128 0x3
 967 006c 08       		.byte	0x8
 968 006d 07       		.byte	0x7
 969 006e 4C000000 		.4byte	.LASF9
 970 0072 03       		.uleb128 0x3
 971 0073 04       		.byte	0x4
 972 0074 07       		.byte	0x7
 973 0075 7F010000 		.4byte	.LASF10
 974 0079 03       		.uleb128 0x3
 975 007a 01       		.byte	0x1
 976 007b 08       		.byte	0x8
 977 007c A7030000 		.4byte	.LASF11
 978 0080 04       		.uleb128 0x4
 979 0081 A3000000 		.4byte	.LASF12
 980 0085 02       		.byte	0x2
 981 0086 E401     		.2byte	0x1e4
 982 0088 48000000 		.4byte	0x48
 983 008c 04       		.uleb128 0x4
 984 008d 00000000 		.4byte	.LASF13
 985 0091 02       		.byte	0x2
 986 0092 E501     		.2byte	0x1e5
 987 0094 56000000 		.4byte	0x56
 988 0098 04       		.uleb128 0x4
 989 0099 BA000000 		.4byte	.LASF14
 990 009d 02       		.byte	0x2
 991 009e E601     		.2byte	0x1e6
 992 00a0 64000000 		.4byte	0x64
 993 00a4 04       		.uleb128 0x4
 994 00a5 4D010000 		.4byte	.LASF15
 995 00a9 02       		.byte	0x2
 996 00aa E701     		.2byte	0x1e7
 997 00ac 41000000 		.4byte	0x41
 998 00b0 04       		.uleb128 0x4
 999 00b1 43040000 		.4byte	.LASF16
 1000 00b5 02       		.byte	0x2
 1001 00b6 E801     		.2byte	0x1e8
 1002 00b8 4F000000 		.4byte	0x4f
 1003 00bc 04       		.uleb128 0x4
 1004 00bd 7D000000 		.4byte	.LASF17
 1005 00c1 02       		.byte	0x2
 1006 00c2 E901     		.2byte	0x1e9
 1007 00c4 5D000000 		.4byte	0x5d
 1008 00c8 04       		.uleb128 0x4
 1009 00c9 77010000 		.4byte	.LASF18
 1010 00cd 02       		.byte	0x2
 1011 00ce EA01     		.2byte	0x1ea
 1012 00d0 D4000000 		.4byte	0xd4
 1013 00d4 03       		.uleb128 0x3
 1014 00d5 04       		.byte	0x4
 1015 00d6 04       		.byte	0x4
 1016 00d7 01020000 		.4byte	.LASF19
 1017 00db 03       		.uleb128 0x3
ARM GAS  C:\Users\sinow\AppData\Local\Temp\ccjMou1W.s 			page 35


 1018 00dc 08       		.byte	0x8
 1019 00dd 04       		.byte	0x4
 1020 00de B3000000 		.4byte	.LASF20
 1021 00e2 04       		.uleb128 0x4
 1022 00e3 D6010000 		.4byte	.LASF21
 1023 00e7 02       		.byte	0x2
 1024 00e8 EF01     		.2byte	0x1ef
 1025 00ea 33000000 		.4byte	0x33
 1026 00ee 04       		.uleb128 0x4
 1027 00ef 1F020000 		.4byte	.LASF22
 1028 00f3 02       		.byte	0x2
 1029 00f4 8E02     		.2byte	0x28e
 1030 00f6 FA000000 		.4byte	0xfa
 1031 00fa 05       		.uleb128 0x5
 1032 00fb 80000000 		.4byte	0x80
 1033 00ff 04       		.uleb128 0x4
 1034 0100 9D000000 		.4byte	.LASF23
 1035 0104 02       		.byte	0x2
 1036 0105 8F02     		.2byte	0x28f
 1037 0107 0B010000 		.4byte	0x10b
 1038 010b 05       		.uleb128 0x5
 1039 010c 8C000000 		.4byte	0x8c
 1040 0110 04       		.uleb128 0x4
 1041 0111 59010000 		.4byte	.LASF24
 1042 0115 02       		.byte	0x2
 1043 0116 9002     		.2byte	0x290
 1044 0118 1C010000 		.4byte	0x11c
 1045 011c 05       		.uleb128 0x5
 1046 011d 98000000 		.4byte	0x98
 1047 0121 06       		.uleb128 0x6
 1048 0122 39000000 		.4byte	.LASF68
 1049 0126 01       		.byte	0x1
 1050 0127 6302     		.2byte	0x263
 1051 0129 00000000 		.4byte	.LFB12
 1052 012d 64000000 		.4byte	.LFE12-.LFB12
 1053 0131 01       		.uleb128 0x1
 1054 0132 9C       		.byte	0x9c
 1055 0133 67010000 		.4byte	0x167
 1056 0137 07       		.uleb128 0x7
 1057 0138 79030000 		.4byte	.LASF31
 1058 013c 01       		.byte	0x1
 1059 013d 6302     		.2byte	0x263
 1060 013f 80000000 		.4byte	0x80
 1061 0143 00000000 		.4byte	.LLST0
 1062 0147 08       		.uleb128 0x8
 1063 0148 32000000 		.4byte	.LASF25
 1064 014c 01       		.byte	0x1
 1065 014d 6502     		.2byte	0x265
 1066 014f BC000000 		.4byte	0xbc
 1067 0153 3A000000 		.4byte	.LLST1
 1068 0157 09       		.uleb128 0x9
 1069 0158 22000000 		.4byte	.LVL4
 1070 015c 5F050000 		.4byte	0x55f
 1071 0160 0A       		.uleb128 0xa
 1072 0161 01       		.uleb128 0x1
 1073 0162 50       		.byte	0x50
 1074 0163 01       		.uleb128 0x1
ARM GAS  C:\Users\sinow\AppData\Local\Temp\ccjMou1W.s 			page 36


 1075 0164 30       		.byte	0x30
 1076 0165 00       		.byte	0
 1077 0166 00       		.byte	0
 1078 0167 0B       		.uleb128 0xb
 1079 0168 AC020000 		.4byte	.LASF28
 1080 016c 01       		.byte	0x1
 1081 016d 8F       		.byte	0x8f
 1082 016e 00000000 		.4byte	.LFB2
 1083 0172 80000000 		.4byte	.LFE2-.LFB2
 1084 0176 01       		.uleb128 0x1
 1085 0177 9C       		.byte	0x9c
 1086 0178 C7010000 		.4byte	0x1c7
 1087 017c 0C       		.uleb128 0xc
 1088 017d 7A040000 		.4byte	.LASF26
 1089 0181 01       		.byte	0x1
 1090 0182 91       		.byte	0x91
 1091 0183 80000000 		.4byte	0x80
 1092 0187 67000000 		.4byte	.LLST2
 1093 018b 0C       		.uleb128 0xc
 1094 018c EC030000 		.4byte	.LASF27
 1095 0190 01       		.byte	0x1
 1096 0191 92       		.byte	0x92
 1097 0192 80000000 		.4byte	0x80
 1098 0196 98000000 		.4byte	.LLST3
 1099 019a 0D       		.uleb128 0xd
 1100 019b 06000000 		.4byte	.LVL8
 1101 019f 6A050000 		.4byte	0x56a
 1102 01a3 0E       		.uleb128 0xe
 1103 01a4 62000000 		.4byte	.LVL14
 1104 01a8 75050000 		.4byte	0x575
 1105 01ac B6010000 		.4byte	0x1b6
 1106 01b0 0A       		.uleb128 0xa
 1107 01b1 01       		.uleb128 0x1
 1108 01b2 50       		.byte	0x50
 1109 01b3 01       		.uleb128 0x1
 1110 01b4 3A       		.byte	0x3a
 1111 01b5 00       		.byte	0
 1112 01b6 09       		.uleb128 0x9
 1113 01b7 6E000000 		.4byte	.LVL15
 1114 01bb 80050000 		.4byte	0x580
 1115 01bf 0A       		.uleb128 0xa
 1116 01c0 01       		.uleb128 0x1
 1117 01c1 50       		.byte	0x50
 1118 01c2 02       		.uleb128 0x2
 1119 01c3 74       		.byte	0x74
 1120 01c4 00       		.sleb128 0
 1121 01c5 00       		.byte	0
 1122 01c6 00       		.byte	0
 1123 01c7 0B       		.uleb128 0xb
 1124 01c8 91040000 		.4byte	.LASF29
 1125 01cc 01       		.byte	0x1
 1126 01cd F8       		.byte	0xf8
 1127 01ce 00000000 		.4byte	.LFB3
 1128 01d2 34000000 		.4byte	.LFE3-.LFB3
 1129 01d6 01       		.uleb128 0x1
 1130 01d7 9C       		.byte	0x9c
 1131 01d8 FE010000 		.4byte	0x1fe
ARM GAS  C:\Users\sinow\AppData\Local\Temp\ccjMou1W.s 			page 37


 1132 01dc 0C       		.uleb128 0xc
 1133 01dd EC030000 		.4byte	.LASF27
 1134 01e1 01       		.byte	0x1
 1135 01e2 FA       		.byte	0xfa
 1136 01e3 80000000 		.4byte	0x80
 1137 01e7 AB000000 		.4byte	.LLST4
 1138 01eb 0D       		.uleb128 0xd
 1139 01ec 06000000 		.4byte	.LVL17
 1140 01f0 6A050000 		.4byte	0x56a
 1141 01f4 0D       		.uleb128 0xd
 1142 01f5 2C000000 		.4byte	.LVL18
 1143 01f9 80050000 		.4byte	0x580
 1144 01fd 00       		.byte	0
 1145 01fe 0F       		.uleb128 0xf
 1146 01ff 1E040000 		.4byte	.LASF30
 1147 0203 01       		.byte	0x1
 1148 0204 2201     		.2byte	0x122
 1149 0206 00000000 		.4byte	.LFB4
 1150 020a 18000000 		.4byte	.LFE4-.LFB4
 1151 020e 01       		.uleb128 0x1
 1152 020f 9C       		.byte	0x9c
 1153 0210 35020000 		.4byte	0x235
 1154 0214 07       		.uleb128 0x7
 1155 0215 19020000 		.4byte	.LASF32
 1156 0219 01       		.byte	0x1
 1157 021a 2201     		.2byte	0x122
 1158 021c 80000000 		.4byte	0x80
 1159 0220 BE000000 		.4byte	.LLST5
 1160 0224 08       		.uleb128 0x8
 1161 0225 7A040000 		.4byte	.LASF26
 1162 0229 01       		.byte	0x1
 1163 022a 2401     		.2byte	0x124
 1164 022c 80000000 		.4byte	0x80
 1165 0230 F0000000 		.4byte	.LLST6
 1166 0234 00       		.byte	0
 1167 0235 0F       		.uleb128 0xf
 1168 0236 94010000 		.4byte	.LASF33
 1169 023a 01       		.byte	0x1
 1170 023b 5401     		.2byte	0x154
 1171 023d 00000000 		.4byte	.LFB5
 1172 0241 38000000 		.4byte	.LFE5-.LFB5
 1173 0245 01       		.uleb128 0x1
 1174 0246 9C       		.byte	0x9c
 1175 0247 8F020000 		.4byte	0x28f
 1176 024b 07       		.uleb128 0x7
 1177 024c 79030000 		.4byte	.LASF31
 1178 0250 01       		.byte	0x1
 1179 0251 5401     		.2byte	0x154
 1180 0253 80000000 		.4byte	0x80
 1181 0257 0E010000 		.4byte	.LLST7
 1182 025b 08       		.uleb128 0x8
 1183 025c 7A040000 		.4byte	.LASF26
 1184 0260 01       		.byte	0x1
 1185 0261 5601     		.2byte	0x156
 1186 0263 80000000 		.4byte	0x80
 1187 0267 48010000 		.4byte	.LLST8
 1188 026b 0E       		.uleb128 0xe
ARM GAS  C:\Users\sinow\AppData\Local\Temp\ccjMou1W.s 			page 38


 1189 026c 20000000 		.4byte	.LVL27
 1190 0270 5F050000 		.4byte	0x55f
 1191 0274 7E020000 		.4byte	0x27e
 1192 0278 0A       		.uleb128 0xa
 1193 0279 01       		.uleb128 0x1
 1194 027a 50       		.byte	0x50
 1195 027b 01       		.uleb128 0x1
 1196 027c 30       		.byte	0x30
 1197 027d 00       		.byte	0
 1198 027e 09       		.uleb128 0x9
 1199 027f 30000000 		.4byte	.LVL30
 1200 0283 21010000 		.4byte	0x121
 1201 0287 0A       		.uleb128 0xa
 1202 0288 01       		.uleb128 0x1
 1203 0289 50       		.byte	0x50
 1204 028a 02       		.uleb128 0x2
 1205 028b 74       		.byte	0x74
 1206 028c 00       		.sleb128 0
 1207 028d 00       		.byte	0
 1208 028e 00       		.byte	0
 1209 028f 0B       		.uleb128 0xb
 1210 0290 3E010000 		.4byte	.LASF34
 1211 0294 01       		.byte	0x1
 1212 0295 6A       		.byte	0x6a
 1213 0296 00000000 		.4byte	.LFB1
 1214 029a 38000000 		.4byte	.LFE1-.LFB1
 1215 029e 01       		.uleb128 0x1
 1216 029f 9C       		.byte	0x9c
 1217 02a0 DF020000 		.4byte	0x2df
 1218 02a4 0E       		.uleb128 0xe
 1219 02a5 0A000000 		.4byte	.LVL31
 1220 02a9 8B050000 		.4byte	0x58b
 1221 02ad BC020000 		.4byte	0x2bc
 1222 02b1 0A       		.uleb128 0xa
 1223 02b2 01       		.uleb128 0x1
 1224 02b3 50       		.byte	0x50
 1225 02b4 01       		.uleb128 0x1
 1226 02b5 30       		.byte	0x30
 1227 02b6 0A       		.uleb128 0xa
 1228 02b7 01       		.uleb128 0x1
 1229 02b8 51       		.byte	0x51
 1230 02b9 01       		.uleb128 0x1
 1231 02ba 37       		.byte	0x37
 1232 02bb 00       		.byte	0
 1233 02bc 0E       		.uleb128 0xe
 1234 02bd 12000000 		.4byte	.LVL32
 1235 02c1 96050000 		.4byte	0x596
 1236 02c5 CF020000 		.4byte	0x2cf
 1237 02c9 0A       		.uleb128 0xa
 1238 02ca 01       		.uleb128 0x1
 1239 02cb 50       		.byte	0x50
 1240 02cc 01       		.uleb128 0x1
 1241 02cd 30       		.byte	0x30
 1242 02ce 00       		.byte	0
 1243 02cf 09       		.uleb128 0x9
 1244 02d0 22000000 		.4byte	.LVL33
 1245 02d4 35020000 		.4byte	0x235
ARM GAS  C:\Users\sinow\AppData\Local\Temp\ccjMou1W.s 			page 39


 1246 02d8 0A       		.uleb128 0xa
 1247 02d9 01       		.uleb128 0x1
 1248 02da 50       		.byte	0x50
 1249 02db 01       		.uleb128 0x1
 1250 02dc 38       		.byte	0x38
 1251 02dd 00       		.byte	0
 1252 02de 00       		.byte	0
 1253 02df 0B       		.uleb128 0xb
 1254 02e0 C6010000 		.4byte	.LASF35
 1255 02e4 01       		.byte	0x1
 1256 02e5 4A       		.byte	0x4a
 1257 02e6 00000000 		.4byte	.LFB0
 1258 02ea 1C000000 		.4byte	.LFE0-.LFB0
 1259 02ee 01       		.uleb128 0x1
 1260 02ef 9C       		.byte	0x9c
 1261 02f0 07030000 		.4byte	0x307
 1262 02f4 0D       		.uleb128 0xd
 1263 02f5 0C000000 		.4byte	.LVL34
 1264 02f9 8F020000 		.4byte	0x28f
 1265 02fd 0D       		.uleb128 0xd
 1266 02fe 16000000 		.4byte	.LVL35
 1267 0302 67010000 		.4byte	0x167
 1268 0306 00       		.byte	0
 1269 0307 10       		.uleb128 0x10
 1270 0308 63040000 		.4byte	.LASF36
 1271 030c 01       		.byte	0x1
 1272 030d 9101     		.2byte	0x191
 1273 030f 00000000 		.4byte	.LFB6
 1274 0313 10000000 		.4byte	.LFE6-.LFB6
 1275 0317 01       		.uleb128 0x1
 1276 0318 9C       		.byte	0x9c
 1277 0319 10       		.uleb128 0x10
 1278 031a CC030000 		.4byte	.LASF37
 1279 031e 01       		.byte	0x1
 1280 031f B301     		.2byte	0x1b3
 1281 0321 00000000 		.4byte	.LFB7
 1282 0325 10000000 		.4byte	.LFE7-.LFB7
 1283 0329 01       		.uleb128 0x1
 1284 032a 9C       		.byte	0x9c
 1285 032b 11       		.uleb128 0x11
 1286 032c 04040000 		.4byte	.LASF40
 1287 0330 01       		.byte	0x1
 1288 0331 DB01     		.2byte	0x1db
 1289 0333 80000000 		.4byte	0x80
 1290 0337 00000000 		.4byte	.LFB8
 1291 033b 24000000 		.4byte	.LFE8-.LFB8
 1292 033f 01       		.uleb128 0x1
 1293 0340 9C       		.byte	0x9c
 1294 0341 75030000 		.4byte	0x375
 1295 0345 07       		.uleb128 0x7
 1296 0346 E0000000 		.4byte	.LASF38
 1297 034a 01       		.byte	0x1
 1298 034b DB01     		.2byte	0x1db
 1299 034d 80000000 		.4byte	0x80
 1300 0351 75010000 		.4byte	.LLST9
 1301 0355 08       		.uleb128 0x8
 1302 0356 FD030000 		.4byte	.LASF39
ARM GAS  C:\Users\sinow\AppData\Local\Temp\ccjMou1W.s 			page 40


 1303 035a 01       		.byte	0x1
 1304 035b DD01     		.2byte	0x1dd
 1305 035d 80000000 		.4byte	0x80
 1306 0361 96010000 		.4byte	.LLST10
 1307 0365 09       		.uleb128 0x9
 1308 0366 18000000 		.4byte	.LVL39
 1309 036a 75050000 		.4byte	0x575
 1310 036e 0A       		.uleb128 0xa
 1311 036f 01       		.uleb128 0x1
 1312 0370 50       		.byte	0x50
 1313 0371 01       		.uleb128 0x1
 1314 0372 31       		.byte	0x31
 1315 0373 00       		.byte	0
 1316 0374 00       		.byte	0
 1317 0375 12       		.uleb128 0x12
 1318 0376 07000000 		.4byte	.LASF69
 1319 037a 01       		.byte	0x1
 1320 037b 0802     		.2byte	0x208
 1321 037d A4000000 		.4byte	0xa4
 1322 0381 00000000 		.4byte	.LFB9
 1323 0385 18000000 		.4byte	.LFE9-.LFB9
 1324 0389 01       		.uleb128 0x1
 1325 038a 9C       		.byte	0x9c
 1326 038b 11       		.uleb128 0x11
 1327 038c 63030000 		.4byte	.LASF41
 1328 0390 01       		.byte	0x1
 1329 0391 2602     		.2byte	0x226
 1330 0393 B0000000 		.4byte	0xb0
 1331 0397 00000000 		.4byte	.LFB10
 1332 039b 18000000 		.4byte	.LFE10-.LFB10
 1333 039f 01       		.uleb128 0x1
 1334 03a0 9C       		.byte	0x9c
 1335 03a1 B6030000 		.4byte	0x3b6
 1336 03a5 13       		.uleb128 0x13
 1337 03a6 72657300 		.ascii	"res\000"
 1338 03aa 01       		.byte	0x1
 1339 03ab 2802     		.2byte	0x228
 1340 03ad 8C000000 		.4byte	0x8c
 1341 03b1 AD010000 		.4byte	.LLST11
 1342 03b5 00       		.byte	0
 1343 03b6 0F       		.uleb128 0xf
 1344 03b7 DC010000 		.4byte	.LASF42
 1345 03bb 01       		.byte	0x1
 1346 03bc 4902     		.2byte	0x249
 1347 03be 00000000 		.4byte	.LFB11
 1348 03c2 0C000000 		.4byte	.LFE11-.LFB11
 1349 03c6 01       		.uleb128 0x1
 1350 03c7 9C       		.byte	0x9c
 1351 03c8 DB030000 		.4byte	0x3db
 1352 03cc 14       		.uleb128 0x14
 1353 03cd C5030000 		.4byte	.LASF43
 1354 03d1 01       		.byte	0x1
 1355 03d2 4902     		.2byte	0x249
 1356 03d4 B0000000 		.4byte	0xb0
 1357 03d8 01       		.uleb128 0x1
 1358 03d9 50       		.byte	0x50
 1359 03da 00       		.byte	0
ARM GAS  C:\Users\sinow\AppData\Local\Temp\ccjMou1W.s 			page 41


 1360 03db 0F       		.uleb128 0xf
 1361 03dc 31040000 		.4byte	.LASF44
 1362 03e0 01       		.byte	0x1
 1363 03e1 B402     		.2byte	0x2b4
 1364 03e3 00000000 		.4byte	.LFB13
 1365 03e7 10000000 		.4byte	.LFE13-.LFB13
 1366 03eb 01       		.uleb128 0x1
 1367 03ec 9C       		.byte	0x9c
 1368 03ed 02040000 		.4byte	0x402
 1369 03f1 07       		.uleb128 0x7
 1370 03f2 A4020000 		.4byte	.LASF45
 1371 03f6 01       		.byte	0x1
 1372 03f7 B402     		.2byte	0x2b4
 1373 03f9 B0000000 		.4byte	0xb0
 1374 03fd C0010000 		.4byte	.LLST12
 1375 0401 00       		.byte	0
 1376 0402 0F       		.uleb128 0xf
 1377 0403 BD020000 		.4byte	.LASF46
 1378 0407 01       		.byte	0x1
 1379 0408 CF02     		.2byte	0x2cf
 1380 040a 00000000 		.4byte	.LFB14
 1381 040e 0C000000 		.4byte	.LFE14-.LFB14
 1382 0412 01       		.uleb128 0x1
 1383 0413 9C       		.byte	0x9c
 1384 0414 27040000 		.4byte	0x427
 1385 0418 14       		.uleb128 0x14
 1386 0419 A4020000 		.4byte	.LASF45
 1387 041d 01       		.byte	0x1
 1388 041e CF02     		.2byte	0x2cf
 1389 0420 BC000000 		.4byte	0xbc
 1390 0424 01       		.uleb128 0x1
 1391 0425 50       		.byte	0x50
 1392 0426 00       		.byte	0
 1393 0427 11       		.uleb128 0x11
 1394 0428 80020000 		.4byte	.LASF47
 1395 042c 01       		.byte	0x1
 1396 042d E702     		.2byte	0x2e7
 1397 042f B0000000 		.4byte	0xb0
 1398 0433 00000000 		.4byte	.LFB15
 1399 0437 58000000 		.4byte	.LFE15-.LFB15
 1400 043b 01       		.uleb128 0x1
 1401 043c 9C       		.byte	0x9c
 1402 043d 70040000 		.4byte	0x470
 1403 0441 07       		.uleb128 0x7
 1404 0442 E2030000 		.4byte	.LASF48
 1405 0446 01       		.byte	0x1
 1406 0447 E702     		.2byte	0x2e7
 1407 0449 B0000000 		.4byte	0xb0
 1408 044d E1010000 		.4byte	.LLST13
 1409 0451 15       		.uleb128 0x15
 1410 0452 52010000 		.4byte	.LASF49
 1411 0456 01       		.byte	0x1
 1412 0457 E902     		.2byte	0x2e9
 1413 0459 B0000000 		.4byte	0xb0
 1414 045d 01       		.uleb128 0x1
 1415 045e 50       		.byte	0x50
 1416 045f 08       		.uleb128 0x8
ARM GAS  C:\Users\sinow\AppData\Local\Temp\ccjMou1W.s 			page 42


 1417 0460 C1000000 		.4byte	.LASF50
 1418 0464 01       		.byte	0x1
 1419 0465 EA02     		.2byte	0x2ea
 1420 0467 BC000000 		.4byte	0xbc
 1421 046b FF010000 		.4byte	.LLST14
 1422 046f 00       		.byte	0
 1423 0470 16       		.uleb128 0x16
 1424 0471 AC010000 		.4byte	.LASF51
 1425 0475 01       		.byte	0x1
 1426 0476 1103     		.2byte	0x311
 1427 0478 BC000000 		.4byte	0xbc
 1428 047c 00000000 		.4byte	.LFB16
 1429 0480 48000000 		.4byte	.LFE16-.LFB16
 1430 0484 01       		.uleb128 0x1
 1431 0485 9C       		.byte	0x9c
 1432 0486 B7040000 		.4byte	0x4b7
 1433 048a 07       		.uleb128 0x7
 1434 048b E2030000 		.4byte	.LASF48
 1435 048f 01       		.byte	0x1
 1436 0490 1103     		.2byte	0x311
 1437 0492 B0000000 		.4byte	0xb0
 1438 0496 1D020000 		.4byte	.LLST15
 1439 049a 17       		.uleb128 0x17
 1440 049b F5000000 		.4byte	.LASF70
 1441 049f 01       		.byte	0x1
 1442 04a0 1403     		.2byte	0x314
 1443 04a2 E2000000 		.4byte	0xe2
 1444 04a6 08       		.uleb128 0x8
 1445 04a7 C1000000 		.4byte	.LASF50
 1446 04ab 01       		.byte	0x1
 1447 04ac 1503     		.2byte	0x315
 1448 04ae BC000000 		.4byte	0xbc
 1449 04b2 3B020000 		.4byte	.LLST16
 1450 04b6 00       		.byte	0
 1451 04b7 16       		.uleb128 0x16
 1452 04b8 AC030000 		.4byte	.LASF52
 1453 04bc 01       		.byte	0x1
 1454 04bd 3D03     		.2byte	0x33d
 1455 04bf C8000000 		.4byte	0xc8
 1456 04c3 00000000 		.4byte	.LFB17
 1457 04c7 50000000 		.4byte	.LFE17-.LFB17
 1458 04cb 01       		.uleb128 0x1
 1459 04cc 9C       		.byte	0x9c
 1460 04cd 00050000 		.4byte	0x500
 1461 04d1 07       		.uleb128 0x7
 1462 04d2 E2030000 		.4byte	.LASF48
 1463 04d6 01       		.byte	0x1
 1464 04d7 3D03     		.2byte	0x33d
 1465 04d9 B0000000 		.4byte	0xb0
 1466 04dd 59020000 		.4byte	.LLST17
 1467 04e1 15       		.uleb128 0x15
 1468 04e2 0E010000 		.4byte	.LASF53
 1469 04e6 01       		.byte	0x1
 1470 04e7 3F03     		.2byte	0x33f
 1471 04e9 C8000000 		.4byte	0xc8
 1472 04ed 01       		.uleb128 0x1
 1473 04ee 50       		.byte	0x50
ARM GAS  C:\Users\sinow\AppData\Local\Temp\ccjMou1W.s 			page 43


 1474 04ef 08       		.uleb128 0x8
 1475 04f0 C1000000 		.4byte	.LASF50
 1476 04f4 01       		.byte	0x1
 1477 04f5 4003     		.2byte	0x340
 1478 04f7 BC000000 		.4byte	0xbc
 1479 04fb 77020000 		.4byte	.LLST18
 1480 04ff 00       		.byte	0
 1481 0500 18       		.uleb128 0x18
 1482 0501 07020000 		.4byte	.LASF54
 1483 0505 01       		.byte	0x1
 1484 0506 23       		.byte	0x23
 1485 0507 80000000 		.4byte	0x80
 1486 050b 05       		.uleb128 0x5
 1487 050c 03       		.byte	0x3
 1488 050d 00000000 		.4byte	ADC_SAR_1_initVar
 1489 0511 18       		.uleb128 0x18
 1490 0512 8C000000 		.4byte	.LASF55
 1491 0516 01       		.byte	0x1
 1492 0517 24       		.byte	0x24
 1493 0518 22050000 		.4byte	0x522
 1494 051c 05       		.uleb128 0x5
 1495 051d 03       		.byte	0x3
 1496 051e 00000000 		.4byte	ADC_SAR_1_offset
 1497 0522 05       		.uleb128 0x5
 1498 0523 B0000000 		.4byte	0xb0
 1499 0527 18       		.uleb128 0x18
 1500 0528 5F010000 		.4byte	.LASF56
 1501 052c 01       		.byte	0x1
 1502 052d 25       		.byte	0x25
 1503 052e 22050000 		.4byte	0x522
 1504 0532 05       		.uleb128 0x5
 1505 0533 03       		.byte	0x3
 1506 0534 00000000 		.4byte	ADC_SAR_1_countsPerVolt
 1507 0538 18       		.uleb128 0x18
 1508 0539 49040000 		.4byte	.LASF57
 1509 053d 01       		.byte	0x1
 1510 053e 26       		.byte	0x26
 1511 053f 49050000 		.4byte	0x549
 1512 0543 05       		.uleb128 0x5
 1513 0544 03       		.byte	0x3
 1514 0545 00000000 		.4byte	ADC_SAR_1_countsPer10Volt
 1515 0549 05       		.uleb128 0x5
 1516 054a BC000000 		.4byte	0xbc
 1517 054e 18       		.uleb128 0x18
 1518 054f 81040000 		.4byte	.LASF58
 1519 0553 01       		.byte	0x1
 1520 0554 27       		.byte	0x27
 1521 0555 22050000 		.4byte	0x522
 1522 0559 05       		.uleb128 0x5
 1523 055a 03       		.byte	0x3
 1524 055b 00000000 		.4byte	ADC_SAR_1_shift
 1525 055f 19       		.uleb128 0x19
 1526 0560 6B020000 		.4byte	.LASF59
 1527 0564 6B020000 		.4byte	.LASF59
 1528 0568 03       		.byte	0x3
 1529 0569 7F       		.byte	0x7f
 1530 056a 19       		.uleb128 0x19
ARM GAS  C:\Users\sinow\AppData\Local\Temp\ccjMou1W.s 			page 44


 1531 056b 14010000 		.4byte	.LASF60
 1532 056f 14010000 		.4byte	.LASF60
 1533 0573 03       		.byte	0x3
 1534 0574 7D       		.byte	0x7d
 1535 0575 19       		.uleb128 0x19
 1536 0576 A9000000 		.4byte	.LASF61
 1537 057a A9000000 		.4byte	.LASF61
 1538 057e 03       		.byte	0x3
 1539 057f 77       		.byte	0x77
 1540 0580 19       		.uleb128 0x19
 1541 0581 1C000000 		.4byte	.LASF62
 1542 0585 1C000000 		.4byte	.LASF62
 1543 0589 03       		.byte	0x3
 1544 058a 7E       		.byte	0x7e
 1545 058b 19       		.uleb128 0x19
 1546 058c F0010000 		.4byte	.LASF63
 1547 0590 F0010000 		.4byte	.LASF63
 1548 0594 03       		.byte	0x3
 1549 0595 8B       		.byte	0x8b
 1550 0596 19       		.uleb128 0x19
 1551 0597 D1000000 		.4byte	.LASF64
 1552 059b D1000000 		.4byte	.LASF64
 1553 059f 03       		.byte	0x3
 1554 05a0 88       		.byte	0x88
 1555 05a1 00       		.byte	0
 1556              		.section	.debug_abbrev,"",%progbits
 1557              	.Ldebug_abbrev0:
 1558 0000 01       		.uleb128 0x1
 1559 0001 11       		.uleb128 0x11
 1560 0002 01       		.byte	0x1
 1561 0003 25       		.uleb128 0x25
 1562 0004 0E       		.uleb128 0xe
 1563 0005 13       		.uleb128 0x13
 1564 0006 0B       		.uleb128 0xb
 1565 0007 03       		.uleb128 0x3
 1566 0008 0E       		.uleb128 0xe
 1567 0009 1B       		.uleb128 0x1b
 1568 000a 0E       		.uleb128 0xe
 1569 000b 55       		.uleb128 0x55
 1570 000c 17       		.uleb128 0x17
 1571 000d 11       		.uleb128 0x11
 1572 000e 01       		.uleb128 0x1
 1573 000f 10       		.uleb128 0x10
 1574 0010 17       		.uleb128 0x17
 1575 0011 00       		.byte	0
 1576 0012 00       		.byte	0
 1577 0013 02       		.uleb128 0x2
 1578 0014 24       		.uleb128 0x24
 1579 0015 00       		.byte	0
 1580 0016 0B       		.uleb128 0xb
 1581 0017 0B       		.uleb128 0xb
 1582 0018 3E       		.uleb128 0x3e
 1583 0019 0B       		.uleb128 0xb
 1584 001a 03       		.uleb128 0x3
 1585 001b 08       		.uleb128 0x8
 1586 001c 00       		.byte	0
 1587 001d 00       		.byte	0
ARM GAS  C:\Users\sinow\AppData\Local\Temp\ccjMou1W.s 			page 45


 1588 001e 03       		.uleb128 0x3
 1589 001f 24       		.uleb128 0x24
 1590 0020 00       		.byte	0
 1591 0021 0B       		.uleb128 0xb
 1592 0022 0B       		.uleb128 0xb
 1593 0023 3E       		.uleb128 0x3e
 1594 0024 0B       		.uleb128 0xb
 1595 0025 03       		.uleb128 0x3
 1596 0026 0E       		.uleb128 0xe
 1597 0027 00       		.byte	0
 1598 0028 00       		.byte	0
 1599 0029 04       		.uleb128 0x4
 1600 002a 16       		.uleb128 0x16
 1601 002b 00       		.byte	0
 1602 002c 03       		.uleb128 0x3
 1603 002d 0E       		.uleb128 0xe
 1604 002e 3A       		.uleb128 0x3a
 1605 002f 0B       		.uleb128 0xb
 1606 0030 3B       		.uleb128 0x3b
 1607 0031 05       		.uleb128 0x5
 1608 0032 49       		.uleb128 0x49
 1609 0033 13       		.uleb128 0x13
 1610 0034 00       		.byte	0
 1611 0035 00       		.byte	0
 1612 0036 05       		.uleb128 0x5
 1613 0037 35       		.uleb128 0x35
 1614 0038 00       		.byte	0
 1615 0039 49       		.uleb128 0x49
 1616 003a 13       		.uleb128 0x13
 1617 003b 00       		.byte	0
 1618 003c 00       		.byte	0
 1619 003d 06       		.uleb128 0x6
 1620 003e 2E       		.uleb128 0x2e
 1621 003f 01       		.byte	0x1
 1622 0040 03       		.uleb128 0x3
 1623 0041 0E       		.uleb128 0xe
 1624 0042 3A       		.uleb128 0x3a
 1625 0043 0B       		.uleb128 0xb
 1626 0044 3B       		.uleb128 0x3b
 1627 0045 05       		.uleb128 0x5
 1628 0046 27       		.uleb128 0x27
 1629 0047 19       		.uleb128 0x19
 1630 0048 11       		.uleb128 0x11
 1631 0049 01       		.uleb128 0x1
 1632 004a 12       		.uleb128 0x12
 1633 004b 06       		.uleb128 0x6
 1634 004c 40       		.uleb128 0x40
 1635 004d 18       		.uleb128 0x18
 1636 004e 9742     		.uleb128 0x2117
 1637 0050 19       		.uleb128 0x19
 1638 0051 01       		.uleb128 0x1
 1639 0052 13       		.uleb128 0x13
 1640 0053 00       		.byte	0
 1641 0054 00       		.byte	0
 1642 0055 07       		.uleb128 0x7
 1643 0056 05       		.uleb128 0x5
 1644 0057 00       		.byte	0
ARM GAS  C:\Users\sinow\AppData\Local\Temp\ccjMou1W.s 			page 46


 1645 0058 03       		.uleb128 0x3
 1646 0059 0E       		.uleb128 0xe
 1647 005a 3A       		.uleb128 0x3a
 1648 005b 0B       		.uleb128 0xb
 1649 005c 3B       		.uleb128 0x3b
 1650 005d 05       		.uleb128 0x5
 1651 005e 49       		.uleb128 0x49
 1652 005f 13       		.uleb128 0x13
 1653 0060 02       		.uleb128 0x2
 1654 0061 17       		.uleb128 0x17
 1655 0062 00       		.byte	0
 1656 0063 00       		.byte	0
 1657 0064 08       		.uleb128 0x8
 1658 0065 34       		.uleb128 0x34
 1659 0066 00       		.byte	0
 1660 0067 03       		.uleb128 0x3
 1661 0068 0E       		.uleb128 0xe
 1662 0069 3A       		.uleb128 0x3a
 1663 006a 0B       		.uleb128 0xb
 1664 006b 3B       		.uleb128 0x3b
 1665 006c 05       		.uleb128 0x5
 1666 006d 49       		.uleb128 0x49
 1667 006e 13       		.uleb128 0x13
 1668 006f 02       		.uleb128 0x2
 1669 0070 17       		.uleb128 0x17
 1670 0071 00       		.byte	0
 1671 0072 00       		.byte	0
 1672 0073 09       		.uleb128 0x9
 1673 0074 898201   		.uleb128 0x4109
 1674 0077 01       		.byte	0x1
 1675 0078 11       		.uleb128 0x11
 1676 0079 01       		.uleb128 0x1
 1677 007a 31       		.uleb128 0x31
 1678 007b 13       		.uleb128 0x13
 1679 007c 00       		.byte	0
 1680 007d 00       		.byte	0
 1681 007e 0A       		.uleb128 0xa
 1682 007f 8A8201   		.uleb128 0x410a
 1683 0082 00       		.byte	0
 1684 0083 02       		.uleb128 0x2
 1685 0084 18       		.uleb128 0x18
 1686 0085 9142     		.uleb128 0x2111
 1687 0087 18       		.uleb128 0x18
 1688 0088 00       		.byte	0
 1689 0089 00       		.byte	0
 1690 008a 0B       		.uleb128 0xb
 1691 008b 2E       		.uleb128 0x2e
 1692 008c 01       		.byte	0x1
 1693 008d 3F       		.uleb128 0x3f
 1694 008e 19       		.uleb128 0x19
 1695 008f 03       		.uleb128 0x3
 1696 0090 0E       		.uleb128 0xe
 1697 0091 3A       		.uleb128 0x3a
 1698 0092 0B       		.uleb128 0xb
 1699 0093 3B       		.uleb128 0x3b
 1700 0094 0B       		.uleb128 0xb
 1701 0095 27       		.uleb128 0x27
ARM GAS  C:\Users\sinow\AppData\Local\Temp\ccjMou1W.s 			page 47


 1702 0096 19       		.uleb128 0x19
 1703 0097 11       		.uleb128 0x11
 1704 0098 01       		.uleb128 0x1
 1705 0099 12       		.uleb128 0x12
 1706 009a 06       		.uleb128 0x6
 1707 009b 40       		.uleb128 0x40
 1708 009c 18       		.uleb128 0x18
 1709 009d 9742     		.uleb128 0x2117
 1710 009f 19       		.uleb128 0x19
 1711 00a0 01       		.uleb128 0x1
 1712 00a1 13       		.uleb128 0x13
 1713 00a2 00       		.byte	0
 1714 00a3 00       		.byte	0
 1715 00a4 0C       		.uleb128 0xc
 1716 00a5 34       		.uleb128 0x34
 1717 00a6 00       		.byte	0
 1718 00a7 03       		.uleb128 0x3
 1719 00a8 0E       		.uleb128 0xe
 1720 00a9 3A       		.uleb128 0x3a
 1721 00aa 0B       		.uleb128 0xb
 1722 00ab 3B       		.uleb128 0x3b
 1723 00ac 0B       		.uleb128 0xb
 1724 00ad 49       		.uleb128 0x49
 1725 00ae 13       		.uleb128 0x13
 1726 00af 02       		.uleb128 0x2
 1727 00b0 17       		.uleb128 0x17
 1728 00b1 00       		.byte	0
 1729 00b2 00       		.byte	0
 1730 00b3 0D       		.uleb128 0xd
 1731 00b4 898201   		.uleb128 0x4109
 1732 00b7 00       		.byte	0
 1733 00b8 11       		.uleb128 0x11
 1734 00b9 01       		.uleb128 0x1
 1735 00ba 31       		.uleb128 0x31
 1736 00bb 13       		.uleb128 0x13
 1737 00bc 00       		.byte	0
 1738 00bd 00       		.byte	0
 1739 00be 0E       		.uleb128 0xe
 1740 00bf 898201   		.uleb128 0x4109
 1741 00c2 01       		.byte	0x1
 1742 00c3 11       		.uleb128 0x11
 1743 00c4 01       		.uleb128 0x1
 1744 00c5 31       		.uleb128 0x31
 1745 00c6 13       		.uleb128 0x13
 1746 00c7 01       		.uleb128 0x1
 1747 00c8 13       		.uleb128 0x13
 1748 00c9 00       		.byte	0
 1749 00ca 00       		.byte	0
 1750 00cb 0F       		.uleb128 0xf
 1751 00cc 2E       		.uleb128 0x2e
 1752 00cd 01       		.byte	0x1
 1753 00ce 3F       		.uleb128 0x3f
 1754 00cf 19       		.uleb128 0x19
 1755 00d0 03       		.uleb128 0x3
 1756 00d1 0E       		.uleb128 0xe
 1757 00d2 3A       		.uleb128 0x3a
 1758 00d3 0B       		.uleb128 0xb
ARM GAS  C:\Users\sinow\AppData\Local\Temp\ccjMou1W.s 			page 48


 1759 00d4 3B       		.uleb128 0x3b
 1760 00d5 05       		.uleb128 0x5
 1761 00d6 27       		.uleb128 0x27
 1762 00d7 19       		.uleb128 0x19
 1763 00d8 11       		.uleb128 0x11
 1764 00d9 01       		.uleb128 0x1
 1765 00da 12       		.uleb128 0x12
 1766 00db 06       		.uleb128 0x6
 1767 00dc 40       		.uleb128 0x40
 1768 00dd 18       		.uleb128 0x18
 1769 00de 9742     		.uleb128 0x2117
 1770 00e0 19       		.uleb128 0x19
 1771 00e1 01       		.uleb128 0x1
 1772 00e2 13       		.uleb128 0x13
 1773 00e3 00       		.byte	0
 1774 00e4 00       		.byte	0
 1775 00e5 10       		.uleb128 0x10
 1776 00e6 2E       		.uleb128 0x2e
 1777 00e7 00       		.byte	0
 1778 00e8 3F       		.uleb128 0x3f
 1779 00e9 19       		.uleb128 0x19
 1780 00ea 03       		.uleb128 0x3
 1781 00eb 0E       		.uleb128 0xe
 1782 00ec 3A       		.uleb128 0x3a
 1783 00ed 0B       		.uleb128 0xb
 1784 00ee 3B       		.uleb128 0x3b
 1785 00ef 05       		.uleb128 0x5
 1786 00f0 27       		.uleb128 0x27
 1787 00f1 19       		.uleb128 0x19
 1788 00f2 11       		.uleb128 0x11
 1789 00f3 01       		.uleb128 0x1
 1790 00f4 12       		.uleb128 0x12
 1791 00f5 06       		.uleb128 0x6
 1792 00f6 40       		.uleb128 0x40
 1793 00f7 18       		.uleb128 0x18
 1794 00f8 9742     		.uleb128 0x2117
 1795 00fa 19       		.uleb128 0x19
 1796 00fb 00       		.byte	0
 1797 00fc 00       		.byte	0
 1798 00fd 11       		.uleb128 0x11
 1799 00fe 2E       		.uleb128 0x2e
 1800 00ff 01       		.byte	0x1
 1801 0100 3F       		.uleb128 0x3f
 1802 0101 19       		.uleb128 0x19
 1803 0102 03       		.uleb128 0x3
 1804 0103 0E       		.uleb128 0xe
 1805 0104 3A       		.uleb128 0x3a
 1806 0105 0B       		.uleb128 0xb
 1807 0106 3B       		.uleb128 0x3b
 1808 0107 05       		.uleb128 0x5
 1809 0108 27       		.uleb128 0x27
 1810 0109 19       		.uleb128 0x19
 1811 010a 49       		.uleb128 0x49
 1812 010b 13       		.uleb128 0x13
 1813 010c 11       		.uleb128 0x11
 1814 010d 01       		.uleb128 0x1
 1815 010e 12       		.uleb128 0x12
ARM GAS  C:\Users\sinow\AppData\Local\Temp\ccjMou1W.s 			page 49


 1816 010f 06       		.uleb128 0x6
 1817 0110 40       		.uleb128 0x40
 1818 0111 18       		.uleb128 0x18
 1819 0112 9742     		.uleb128 0x2117
 1820 0114 19       		.uleb128 0x19
 1821 0115 01       		.uleb128 0x1
 1822 0116 13       		.uleb128 0x13
 1823 0117 00       		.byte	0
 1824 0118 00       		.byte	0
 1825 0119 12       		.uleb128 0x12
 1826 011a 2E       		.uleb128 0x2e
 1827 011b 00       		.byte	0
 1828 011c 3F       		.uleb128 0x3f
 1829 011d 19       		.uleb128 0x19
 1830 011e 03       		.uleb128 0x3
 1831 011f 0E       		.uleb128 0xe
 1832 0120 3A       		.uleb128 0x3a
 1833 0121 0B       		.uleb128 0xb
 1834 0122 3B       		.uleb128 0x3b
 1835 0123 05       		.uleb128 0x5
 1836 0124 27       		.uleb128 0x27
 1837 0125 19       		.uleb128 0x19
 1838 0126 49       		.uleb128 0x49
 1839 0127 13       		.uleb128 0x13
 1840 0128 11       		.uleb128 0x11
 1841 0129 01       		.uleb128 0x1
 1842 012a 12       		.uleb128 0x12
 1843 012b 06       		.uleb128 0x6
 1844 012c 40       		.uleb128 0x40
 1845 012d 18       		.uleb128 0x18
 1846 012e 9742     		.uleb128 0x2117
 1847 0130 19       		.uleb128 0x19
 1848 0131 00       		.byte	0
 1849 0132 00       		.byte	0
 1850 0133 13       		.uleb128 0x13
 1851 0134 34       		.uleb128 0x34
 1852 0135 00       		.byte	0
 1853 0136 03       		.uleb128 0x3
 1854 0137 08       		.uleb128 0x8
 1855 0138 3A       		.uleb128 0x3a
 1856 0139 0B       		.uleb128 0xb
 1857 013a 3B       		.uleb128 0x3b
 1858 013b 05       		.uleb128 0x5
 1859 013c 49       		.uleb128 0x49
 1860 013d 13       		.uleb128 0x13
 1861 013e 02       		.uleb128 0x2
 1862 013f 17       		.uleb128 0x17
 1863 0140 00       		.byte	0
 1864 0141 00       		.byte	0
 1865 0142 14       		.uleb128 0x14
 1866 0143 05       		.uleb128 0x5
 1867 0144 00       		.byte	0
 1868 0145 03       		.uleb128 0x3
 1869 0146 0E       		.uleb128 0xe
 1870 0147 3A       		.uleb128 0x3a
 1871 0148 0B       		.uleb128 0xb
 1872 0149 3B       		.uleb128 0x3b
ARM GAS  C:\Users\sinow\AppData\Local\Temp\ccjMou1W.s 			page 50


 1873 014a 05       		.uleb128 0x5
 1874 014b 49       		.uleb128 0x49
 1875 014c 13       		.uleb128 0x13
 1876 014d 02       		.uleb128 0x2
 1877 014e 18       		.uleb128 0x18
 1878 014f 00       		.byte	0
 1879 0150 00       		.byte	0
 1880 0151 15       		.uleb128 0x15
 1881 0152 34       		.uleb128 0x34
 1882 0153 00       		.byte	0
 1883 0154 03       		.uleb128 0x3
 1884 0155 0E       		.uleb128 0xe
 1885 0156 3A       		.uleb128 0x3a
 1886 0157 0B       		.uleb128 0xb
 1887 0158 3B       		.uleb128 0x3b
 1888 0159 05       		.uleb128 0x5
 1889 015a 49       		.uleb128 0x49
 1890 015b 13       		.uleb128 0x13
 1891 015c 02       		.uleb128 0x2
 1892 015d 18       		.uleb128 0x18
 1893 015e 00       		.byte	0
 1894 015f 00       		.byte	0
 1895 0160 16       		.uleb128 0x16
 1896 0161 2E       		.uleb128 0x2e
 1897 0162 01       		.byte	0x1
 1898 0163 3F       		.uleb128 0x3f
 1899 0164 19       		.uleb128 0x19
 1900 0165 03       		.uleb128 0x3
 1901 0166 0E       		.uleb128 0xe
 1902 0167 3A       		.uleb128 0x3a
 1903 0168 0B       		.uleb128 0xb
 1904 0169 3B       		.uleb128 0x3b
 1905 016a 05       		.uleb128 0x5
 1906 016b 27       		.uleb128 0x27
 1907 016c 19       		.uleb128 0x19
 1908 016d 49       		.uleb128 0x49
 1909 016e 13       		.uleb128 0x13
 1910 016f 11       		.uleb128 0x11
 1911 0170 01       		.uleb128 0x1
 1912 0171 12       		.uleb128 0x12
 1913 0172 06       		.uleb128 0x6
 1914 0173 40       		.uleb128 0x40
 1915 0174 18       		.uleb128 0x18
 1916 0175 9642     		.uleb128 0x2116
 1917 0177 19       		.uleb128 0x19
 1918 0178 01       		.uleb128 0x1
 1919 0179 13       		.uleb128 0x13
 1920 017a 00       		.byte	0
 1921 017b 00       		.byte	0
 1922 017c 17       		.uleb128 0x17
 1923 017d 34       		.uleb128 0x34
 1924 017e 00       		.byte	0
 1925 017f 03       		.uleb128 0x3
 1926 0180 0E       		.uleb128 0xe
 1927 0181 3A       		.uleb128 0x3a
 1928 0182 0B       		.uleb128 0xb
 1929 0183 3B       		.uleb128 0x3b
ARM GAS  C:\Users\sinow\AppData\Local\Temp\ccjMou1W.s 			page 51


 1930 0184 05       		.uleb128 0x5
 1931 0185 49       		.uleb128 0x49
 1932 0186 13       		.uleb128 0x13
 1933 0187 00       		.byte	0
 1934 0188 00       		.byte	0
 1935 0189 18       		.uleb128 0x18
 1936 018a 34       		.uleb128 0x34
 1937 018b 00       		.byte	0
 1938 018c 03       		.uleb128 0x3
 1939 018d 0E       		.uleb128 0xe
 1940 018e 3A       		.uleb128 0x3a
 1941 018f 0B       		.uleb128 0xb
 1942 0190 3B       		.uleb128 0x3b
 1943 0191 0B       		.uleb128 0xb
 1944 0192 49       		.uleb128 0x49
 1945 0193 13       		.uleb128 0x13
 1946 0194 3F       		.uleb128 0x3f
 1947 0195 19       		.uleb128 0x19
 1948 0196 02       		.uleb128 0x2
 1949 0197 18       		.uleb128 0x18
 1950 0198 00       		.byte	0
 1951 0199 00       		.byte	0
 1952 019a 19       		.uleb128 0x19
 1953 019b 2E       		.uleb128 0x2e
 1954 019c 00       		.byte	0
 1955 019d 3F       		.uleb128 0x3f
 1956 019e 19       		.uleb128 0x19
 1957 019f 3C       		.uleb128 0x3c
 1958 01a0 19       		.uleb128 0x19
 1959 01a1 6E       		.uleb128 0x6e
 1960 01a2 0E       		.uleb128 0xe
 1961 01a3 03       		.uleb128 0x3
 1962 01a4 0E       		.uleb128 0xe
 1963 01a5 3A       		.uleb128 0x3a
 1964 01a6 0B       		.uleb128 0xb
 1965 01a7 3B       		.uleb128 0x3b
 1966 01a8 0B       		.uleb128 0xb
 1967 01a9 00       		.byte	0
 1968 01aa 00       		.byte	0
 1969 01ab 00       		.byte	0
 1970              		.section	.debug_loc,"",%progbits
 1971              	.Ldebug_loc0:
 1972              	.LLST0:
 1973 0000 00000000 		.4byte	.LVL0
 1974 0004 1E000000 		.4byte	.LVL3
 1975 0008 0100     		.2byte	0x1
 1976 000a 50       		.byte	0x50
 1977 000b 1E000000 		.4byte	.LVL3
 1978 000f 26000000 		.4byte	.LVL5
 1979 0013 0400     		.2byte	0x4
 1980 0015 F3       		.byte	0xf3
 1981 0016 01       		.uleb128 0x1
 1982 0017 50       		.byte	0x50
 1983 0018 9F       		.byte	0x9f
 1984 0019 26000000 		.4byte	.LVL5
 1985 001d 2A000000 		.4byte	.LVL6
 1986 0021 0100     		.2byte	0x1
ARM GAS  C:\Users\sinow\AppData\Local\Temp\ccjMou1W.s 			page 52


 1987 0023 50       		.byte	0x50
 1988 0024 2A000000 		.4byte	.LVL6
 1989 0028 64000000 		.4byte	.LFE12
 1990 002c 0400     		.2byte	0x4
 1991 002e F3       		.byte	0xf3
 1992 002f 01       		.uleb128 0x1
 1993 0030 50       		.byte	0x50
 1994 0031 9F       		.byte	0x9f
 1995 0032 00000000 		.4byte	0
 1996 0036 00000000 		.4byte	0
 1997              	.LLST1:
 1998 003a 16000000 		.4byte	.LVL1
 1999 003e 1C000000 		.4byte	.LVL2
 2000 0042 0400     		.2byte	0x4
 2001 0044 0A       		.byte	0xa
 2002 0045 0001     		.2byte	0x100
 2003 0047 9F       		.byte	0x9f
 2004 0048 1C000000 		.4byte	.LVL2
 2005 004c 26000000 		.4byte	.LVL5
 2006 0050 0200     		.2byte	0x2
 2007 0052 30       		.byte	0x30
 2008 0053 9F       		.byte	0x9f
 2009 0054 2A000000 		.4byte	.LVL6
 2010 0058 3E000000 		.4byte	.LVL7
 2011 005c 0100     		.2byte	0x1
 2012 005e 52       		.byte	0x52
 2013 005f 00000000 		.4byte	0
 2014 0063 00000000 		.4byte	0
 2015              	.LLST2:
 2016 0067 24000000 		.4byte	.LVL10
 2017 006b 28000000 		.4byte	.LVL11
 2018 006f 0500     		.2byte	0x5
 2019 0071 73       		.byte	0x73
 2020 0072 00       		.sleb128 0
 2021 0073 32       		.byte	0x32
 2022 0074 21       		.byte	0x21
 2023 0075 9F       		.byte	0x9f
 2024 0076 28000000 		.4byte	.LVL11
 2025 007a 2E000000 		.4byte	.LVL12
 2026 007e 0100     		.2byte	0x1
 2027 0080 53       		.byte	0x53
 2028 0081 2E000000 		.4byte	.LVL12
 2029 0085 30000000 		.4byte	.LVL13
 2030 0089 0500     		.2byte	0x5
 2031 008b 0C       		.byte	0xc
 2032 008c 0B590040 		.4byte	0x4000590b
 2033 0090 00000000 		.4byte	0
 2034 0094 00000000 		.4byte	0
 2035              	.LLST3:
 2036 0098 08000000 		.4byte	.LVL9
 2037 009c 70000000 		.4byte	.LVL16
 2038 00a0 0100     		.2byte	0x1
 2039 00a2 54       		.byte	0x54
 2040 00a3 00000000 		.4byte	0
 2041 00a7 00000000 		.4byte	0
 2042              	.LLST4:
 2043 00ab 06000000 		.4byte	.LVL17
ARM GAS  C:\Users\sinow\AppData\Local\Temp\ccjMou1W.s 			page 53


 2044 00af 2B000000 		.4byte	.LVL18-1
 2045 00b3 0100     		.2byte	0x1
 2046 00b5 50       		.byte	0x50
 2047 00b6 00000000 		.4byte	0
 2048 00ba 00000000 		.4byte	0
 2049              	.LLST5:
 2050 00be 00000000 		.4byte	.LVL19
 2051 00c2 00000000 		.4byte	.LVL19
 2052 00c6 0100     		.2byte	0x1
 2053 00c8 50       		.byte	0x50
 2054 00c9 00000000 		.4byte	.LVL19
 2055 00cd 0C000000 		.4byte	.LVL21
 2056 00d1 0500     		.2byte	0x5
 2057 00d3 70       		.byte	0x70
 2058 00d4 00       		.sleb128 0
 2059 00d5 33       		.byte	0x33
 2060 00d6 1A       		.byte	0x1a
 2061 00d7 9F       		.byte	0x9f
 2062 00d8 0C000000 		.4byte	.LVL21
 2063 00dc 18000000 		.4byte	.LFE4
 2064 00e0 0600     		.2byte	0x6
 2065 00e2 F3       		.byte	0xf3
 2066 00e3 01       		.uleb128 0x1
 2067 00e4 50       		.byte	0x50
 2068 00e5 33       		.byte	0x33
 2069 00e6 1A       		.byte	0x1a
 2070 00e7 9F       		.byte	0x9f
 2071 00e8 00000000 		.4byte	0
 2072 00ec 00000000 		.4byte	0
 2073              	.LLST6:
 2074 00f0 08000000 		.4byte	.LVL20
 2075 00f4 0E000000 		.4byte	.LVL22
 2076 00f8 0100     		.2byte	0x1
 2077 00fa 53       		.byte	0x53
 2078 00fb 0E000000 		.4byte	.LVL22
 2079 00ff 18000000 		.4byte	.LFE4
 2080 0103 0100     		.2byte	0x1
 2081 0105 50       		.byte	0x50
 2082 0106 00000000 		.4byte	0
 2083 010a 00000000 		.4byte	0
 2084              	.LLST7:
 2085 010e 00000000 		.4byte	.LVL23
 2086 0112 1C000000 		.4byte	.LVL26
 2087 0116 0100     		.2byte	0x1
 2088 0118 50       		.byte	0x50
 2089 0119 1C000000 		.4byte	.LVL26
 2090 011d 24000000 		.4byte	.LVL28
 2091 0121 0400     		.2byte	0x4
 2092 0123 F3       		.byte	0xf3
 2093 0124 01       		.uleb128 0x1
 2094 0125 50       		.byte	0x50
 2095 0126 9F       		.byte	0x9f
 2096 0127 24000000 		.4byte	.LVL28
 2097 012b 26000000 		.4byte	.LVL29
 2098 012f 0100     		.2byte	0x1
 2099 0131 50       		.byte	0x50
 2100 0132 26000000 		.4byte	.LVL29
ARM GAS  C:\Users\sinow\AppData\Local\Temp\ccjMou1W.s 			page 54


 2101 0136 38000000 		.4byte	.LFE5
 2102 013a 0400     		.2byte	0x4
 2103 013c F3       		.byte	0xf3
 2104 013d 01       		.uleb128 0x1
 2105 013e 50       		.byte	0x50
 2106 013f 9F       		.byte	0x9f
 2107 0140 00000000 		.4byte	0
 2108 0144 00000000 		.4byte	0
 2109              	.LLST8:
 2110 0148 16000000 		.4byte	.LVL24
 2111 014c 1A000000 		.4byte	.LVL25
 2112 0150 0300     		.2byte	0x3
 2113 0152 08       		.byte	0x8
 2114 0153 42       		.byte	0x42
 2115 0154 9F       		.byte	0x9f
 2116 0155 1A000000 		.4byte	.LVL25
 2117 0159 24000000 		.4byte	.LVL28
 2118 015d 0300     		.2byte	0x3
 2119 015f 09       		.byte	0x9
 2120 0160 C2       		.byte	0xc2
 2121 0161 9F       		.byte	0x9f
 2122 0162 26000000 		.4byte	.LVL29
 2123 0166 2F000000 		.4byte	.LVL30-1
 2124 016a 0100     		.2byte	0x1
 2125 016c 52       		.byte	0x52
 2126 016d 00000000 		.4byte	0
 2127 0171 00000000 		.4byte	0
 2128              	.LLST9:
 2129 0175 00000000 		.4byte	.LVL36
 2130 0179 14000000 		.4byte	.LVL38
 2131 017d 0100     		.2byte	0x1
 2132 017f 50       		.byte	0x50
 2133 0180 14000000 		.4byte	.LVL38
 2134 0184 24000000 		.4byte	.LFE8
 2135 0188 0400     		.2byte	0x4
 2136 018a F3       		.byte	0xf3
 2137 018b 01       		.uleb128 0x1
 2138 018c 50       		.byte	0x50
 2139 018d 9F       		.byte	0x9f
 2140 018e 00000000 		.4byte	0
 2141 0192 00000000 		.4byte	0
 2142              	.LLST10:
 2143 0196 06000000 		.4byte	.LVL37
 2144 019a 17000000 		.4byte	.LVL39-1
 2145 019e 0500     		.2byte	0x5
 2146 01a0 73       		.byte	0x73
 2147 01a1 00       		.sleb128 0
 2148 01a2 31       		.byte	0x31
 2149 01a3 1A       		.byte	0x1a
 2150 01a4 9F       		.byte	0x9f
 2151 01a5 00000000 		.4byte	0
 2152 01a9 00000000 		.4byte	0
 2153              	.LLST11:
 2154 01ad 06000000 		.4byte	.LVL40
 2155 01b1 0C000000 		.4byte	.LVL41
 2156 01b5 0100     		.2byte	0x1
 2157 01b7 50       		.byte	0x50
ARM GAS  C:\Users\sinow\AppData\Local\Temp\ccjMou1W.s 			page 55


 2158 01b8 00000000 		.4byte	0
 2159 01bc 00000000 		.4byte	0
 2160              	.LLST12:
 2161 01c0 00000000 		.4byte	.LVL43
 2162 01c4 04000000 		.4byte	.LVL44
 2163 01c8 0100     		.2byte	0x1
 2164 01ca 50       		.byte	0x50
 2165 01cb 04000000 		.4byte	.LVL44
 2166 01cf 10000000 		.4byte	.LFE13
 2167 01d3 0400     		.2byte	0x4
 2168 01d5 F3       		.byte	0xf3
 2169 01d6 01       		.uleb128 0x1
 2170 01d7 50       		.byte	0x50
 2171 01d8 9F       		.byte	0x9f
 2172 01d9 00000000 		.4byte	0
 2173 01dd 00000000 		.4byte	0
 2174              	.LLST13:
 2175 01e1 00000000 		.4byte	.LVL46
 2176 01e5 24000000 		.4byte	.LVL50
 2177 01e9 0100     		.2byte	0x1
 2178 01eb 50       		.byte	0x50
 2179 01ec 24000000 		.4byte	.LVL50
 2180 01f0 58000000 		.4byte	.LFE15
 2181 01f4 0100     		.2byte	0x1
 2182 01f6 51       		.byte	0x51
 2183 01f7 00000000 		.4byte	0
 2184 01fb 00000000 		.4byte	0
 2185              	.LLST14:
 2186 01ff 16000000 		.4byte	.LVL47
 2187 0203 18000000 		.4byte	.LVL48
 2188 0207 0100     		.2byte	0x1
 2189 0209 54       		.byte	0x54
 2190 020a 1C000000 		.4byte	.LVL49
 2191 020e 4A000000 		.4byte	.LVL52
 2192 0212 0100     		.2byte	0x1
 2193 0214 54       		.byte	0x54
 2194 0215 00000000 		.4byte	0
 2195 0219 00000000 		.4byte	0
 2196              	.LLST15:
 2197 021d 00000000 		.4byte	.LVL53
 2198 0221 22000000 		.4byte	.LVL57
 2199 0225 0100     		.2byte	0x1
 2200 0227 50       		.byte	0x50
 2201 0228 22000000 		.4byte	.LVL57
 2202 022c 38000000 		.4byte	.LVL59
 2203 0230 0100     		.2byte	0x1
 2204 0232 54       		.byte	0x54
 2205 0233 00000000 		.4byte	0
 2206 0237 00000000 		.4byte	0
 2207              	.LLST16:
 2208 023b 16000000 		.4byte	.LVL54
 2209 023f 18000000 		.4byte	.LVL55
 2210 0243 0100     		.2byte	0x1
 2211 0245 52       		.byte	0x52
 2212 0246 1C000000 		.4byte	.LVL56
 2213 024a 35000000 		.4byte	.LVL58-1
 2214 024e 0100     		.2byte	0x1
ARM GAS  C:\Users\sinow\AppData\Local\Temp\ccjMou1W.s 			page 56


 2215 0250 52       		.byte	0x52
 2216 0251 00000000 		.4byte	0
 2217 0255 00000000 		.4byte	0
 2218              	.LLST17:
 2219 0259 00000000 		.4byte	.LVL60
 2220 025d 22000000 		.4byte	.LVL64
 2221 0261 0100     		.2byte	0x1
 2222 0263 50       		.byte	0x50
 2223 0264 22000000 		.4byte	.LVL64
 2224 0268 27000000 		.4byte	.LVL65-1
 2225 026c 0100     		.2byte	0x1
 2226 026e 50       		.byte	0x50
 2227 026f 00000000 		.4byte	0
 2228 0273 00000000 		.4byte	0
 2229              	.LLST18:
 2230 0277 16000000 		.4byte	.LVL61
 2231 027b 18000000 		.4byte	.LVL62
 2232 027f 0100     		.2byte	0x1
 2233 0281 54       		.byte	0x54
 2234 0282 1C000000 		.4byte	.LVL63
 2235 0286 40000000 		.4byte	.LVL69
 2236 028a 0100     		.2byte	0x1
 2237 028c 54       		.byte	0x54
 2238 028d 00000000 		.4byte	0
 2239 0291 00000000 		.4byte	0
 2240              		.section	.debug_aranges,"",%progbits
 2241 0000 A4000000 		.4byte	0xa4
 2242 0004 0200     		.2byte	0x2
 2243 0006 00000000 		.4byte	.Ldebug_info0
 2244 000a 04       		.byte	0x4
 2245 000b 00       		.byte	0
 2246 000c 0000     		.2byte	0
 2247 000e 0000     		.2byte	0
 2248 0010 00000000 		.4byte	.LFB12
 2249 0014 64000000 		.4byte	.LFE12-.LFB12
 2250 0018 00000000 		.4byte	.LFB2
 2251 001c 80000000 		.4byte	.LFE2-.LFB2
 2252 0020 00000000 		.4byte	.LFB3
 2253 0024 34000000 		.4byte	.LFE3-.LFB3
 2254 0028 00000000 		.4byte	.LFB4
 2255 002c 18000000 		.4byte	.LFE4-.LFB4
 2256 0030 00000000 		.4byte	.LFB5
 2257 0034 38000000 		.4byte	.LFE5-.LFB5
 2258 0038 00000000 		.4byte	.LFB1
 2259 003c 38000000 		.4byte	.LFE1-.LFB1
 2260 0040 00000000 		.4byte	.LFB0
 2261 0044 1C000000 		.4byte	.LFE0-.LFB0
 2262 0048 00000000 		.4byte	.LFB6
 2263 004c 10000000 		.4byte	.LFE6-.LFB6
 2264 0050 00000000 		.4byte	.LFB7
 2265 0054 10000000 		.4byte	.LFE7-.LFB7
 2266 0058 00000000 		.4byte	.LFB8
 2267 005c 24000000 		.4byte	.LFE8-.LFB8
 2268 0060 00000000 		.4byte	.LFB9
 2269 0064 18000000 		.4byte	.LFE9-.LFB9
 2270 0068 00000000 		.4byte	.LFB10
 2271 006c 18000000 		.4byte	.LFE10-.LFB10
ARM GAS  C:\Users\sinow\AppData\Local\Temp\ccjMou1W.s 			page 57


 2272 0070 00000000 		.4byte	.LFB11
 2273 0074 0C000000 		.4byte	.LFE11-.LFB11
 2274 0078 00000000 		.4byte	.LFB13
 2275 007c 10000000 		.4byte	.LFE13-.LFB13
 2276 0080 00000000 		.4byte	.LFB14
 2277 0084 0C000000 		.4byte	.LFE14-.LFB14
 2278 0088 00000000 		.4byte	.LFB15
 2279 008c 58000000 		.4byte	.LFE15-.LFB15
 2280 0090 00000000 		.4byte	.LFB16
 2281 0094 48000000 		.4byte	.LFE16-.LFB16
 2282 0098 00000000 		.4byte	.LFB17
 2283 009c 50000000 		.4byte	.LFE17-.LFB17
 2284 00a0 00000000 		.4byte	0
 2285 00a4 00000000 		.4byte	0
 2286              		.section	.debug_ranges,"",%progbits
 2287              	.Ldebug_ranges0:
 2288 0000 00000000 		.4byte	.LFB12
 2289 0004 64000000 		.4byte	.LFE12
 2290 0008 00000000 		.4byte	.LFB2
 2291 000c 80000000 		.4byte	.LFE2
 2292 0010 00000000 		.4byte	.LFB3
 2293 0014 34000000 		.4byte	.LFE3
 2294 0018 00000000 		.4byte	.LFB4
 2295 001c 18000000 		.4byte	.LFE4
 2296 0020 00000000 		.4byte	.LFB5
 2297 0024 38000000 		.4byte	.LFE5
 2298 0028 00000000 		.4byte	.LFB1
 2299 002c 38000000 		.4byte	.LFE1
 2300 0030 00000000 		.4byte	.LFB0
 2301 0034 1C000000 		.4byte	.LFE0
 2302 0038 00000000 		.4byte	.LFB6
 2303 003c 10000000 		.4byte	.LFE6
 2304 0040 00000000 		.4byte	.LFB7
 2305 0044 10000000 		.4byte	.LFE7
 2306 0048 00000000 		.4byte	.LFB8
 2307 004c 24000000 		.4byte	.LFE8
 2308 0050 00000000 		.4byte	.LFB9
 2309 0054 18000000 		.4byte	.LFE9
 2310 0058 00000000 		.4byte	.LFB10
 2311 005c 18000000 		.4byte	.LFE10
 2312 0060 00000000 		.4byte	.LFB11
 2313 0064 0C000000 		.4byte	.LFE11
 2314 0068 00000000 		.4byte	.LFB13
 2315 006c 10000000 		.4byte	.LFE13
 2316 0070 00000000 		.4byte	.LFB14
 2317 0074 0C000000 		.4byte	.LFE14
 2318 0078 00000000 		.4byte	.LFB15
 2319 007c 58000000 		.4byte	.LFE15
 2320 0080 00000000 		.4byte	.LFB16
 2321 0084 48000000 		.4byte	.LFE16
 2322 0088 00000000 		.4byte	.LFB17
 2323 008c 50000000 		.4byte	.LFE17
 2324 0090 00000000 		.4byte	0
 2325 0094 00000000 		.4byte	0
 2326              		.section	.debug_line,"",%progbits
 2327              	.Ldebug_line0:
 2328 0000 04020000 		.section	.debug_str,"MS",%progbits,1
ARM GAS  C:\Users\sinow\AppData\Local\Temp\ccjMou1W.s 			page 58


 2328      02005100 
 2328      00000201 
 2328      FB0E0D00 
 2328      01010101 
 2329              	.LASF13:
 2330 0000 75696E74 		.ascii	"uint16\000"
 2330      313600
 2331              	.LASF69:
 2332 0007 4144435F 		.ascii	"ADC_SAR_1_GetResult8\000"
 2332      5341525F 
 2332      315F4765 
 2332      74526573 
 2332      756C7438 
 2333              	.LASF62:
 2334 001c 43794578 		.ascii	"CyExitCriticalSection\000"
 2334      69744372 
 2334      69746963 
 2334      616C5365 
 2334      6374696F 
 2335              	.LASF25:
 2336 0032 636F756E 		.ascii	"counts\000"
 2336      747300
 2337              	.LASF68:
 2338 0039 4144435F 		.ascii	"ADC_SAR_1_CalcGain\000"
 2338      5341525F 
 2338      315F4361 
 2338      6C634761 
 2338      696E00
 2339              	.LASF9:
 2340 004c 6C6F6E67 		.ascii	"long long unsigned int\000"
 2340      206C6F6E 
 2340      6720756E 
 2340      7369676E 
 2340      65642069 
 2341              	.LASF1:
 2342 0063 6C6F6E67 		.ascii	"long long int\000"
 2342      206C6F6E 
 2342      6720696E 
 2342      7400
 2343              	.LASF3:
 2344 0071 7369676E 		.ascii	"signed char\000"
 2344      65642063 
 2344      68617200 
 2345              	.LASF17:
 2346 007d 696E7433 		.ascii	"int32\000"
 2346      3200
 2347              	.LASF7:
 2348 0083 6C6F6E67 		.ascii	"long int\000"
 2348      20696E74 
 2348      00
 2349              	.LASF55:
 2350 008c 4144435F 		.ascii	"ADC_SAR_1_offset\000"
 2350      5341525F 
 2350      315F6F66 
 2350      66736574 
 2350      00
 2351              	.LASF23:
ARM GAS  C:\Users\sinow\AppData\Local\Temp\ccjMou1W.s 			page 59


 2352 009d 72656731 		.ascii	"reg16\000"
 2352      3600
 2353              	.LASF12:
 2354 00a3 75696E74 		.ascii	"uint8\000"
 2354      3800
 2355              	.LASF61:
 2356 00a9 43794465 		.ascii	"CyDelayUs\000"
 2356      6C617955 
 2356      7300
 2357              	.LASF20:
 2358 00b3 646F7562 		.ascii	"double\000"
 2358      6C6500
 2359              	.LASF14:
 2360 00ba 75696E74 		.ascii	"uint32\000"
 2360      333200
 2361              	.LASF50:
 2362 00c1 636F756E 		.ascii	"countsPer10Volt\000"
 2362      74735065 
 2362      72313056 
 2362      6F6C7400 
 2363              	.LASF64:
 2364 00d1 4379496E 		.ascii	"CyIntSetVector\000"
 2364      74536574 
 2364      56656374 
 2364      6F7200
 2365              	.LASF38:
 2366 00e0 7265744D 		.ascii	"retMode\000"
 2366      6F646500 
 2367              	.LASF0:
 2368 00e8 756E7369 		.ascii	"unsigned int\000"
 2368      676E6564 
 2368      20696E74 
 2368      00
 2369              	.LASF70:
 2370 00f5 75566F6C 		.ascii	"uVolts\000"
 2370      747300
 2371              	.LASF8:
 2372 00fc 6C6F6E67 		.ascii	"long unsigned int\000"
 2372      20756E73 
 2372      69676E65 
 2372      6420696E 
 2372      7400
 2373              	.LASF53:
 2374 010e 766F6C74 		.ascii	"volts\000"
 2374      7300
 2375              	.LASF60:
 2376 0114 4379456E 		.ascii	"CyEnterCriticalSection\000"
 2376      74657243 
 2376      72697469 
 2376      63616C53 
 2376      65637469 
 2377              	.LASF6:
 2378 012b 73686F72 		.ascii	"short unsigned int\000"
 2378      7420756E 
 2378      7369676E 
 2378      65642069 
 2378      6E7400
ARM GAS  C:\Users\sinow\AppData\Local\Temp\ccjMou1W.s 			page 60


 2379              	.LASF34:
 2380 013e 4144435F 		.ascii	"ADC_SAR_1_Init\000"
 2380      5341525F 
 2380      315F496E 
 2380      697400
 2381              	.LASF15:
 2382 014d 696E7438 		.ascii	"int8\000"
 2382      00
 2383              	.LASF49:
 2384 0152 6D566F6C 		.ascii	"mVolts\000"
 2384      747300
 2385              	.LASF24:
 2386 0159 72656733 		.ascii	"reg32\000"
 2386      3200
 2387              	.LASF56:
 2388 015f 4144435F 		.ascii	"ADC_SAR_1_countsPerVolt\000"
 2388      5341525F 
 2388      315F636F 
 2388      756E7473 
 2388      50657256 
 2389              	.LASF18:
 2390 0177 666C6F61 		.ascii	"float32\000"
 2390      74333200 
 2391              	.LASF10:
 2392 017f 73697A65 		.ascii	"sizetype\000"
 2392      74797065 
 2392      00
 2393              	.LASF2:
 2394 0188 6C6F6E67 		.ascii	"long double\000"
 2394      20646F75 
 2394      626C6500 
 2395              	.LASF33:
 2396 0194 4144435F 		.ascii	"ADC_SAR_1_SetResolution\000"
 2396      5341525F 
 2396      315F5365 
 2396      74526573 
 2396      6F6C7574 
 2397              	.LASF51:
 2398 01ac 4144435F 		.ascii	"ADC_SAR_1_CountsTo_uVolts\000"
 2398      5341525F 
 2398      315F436F 
 2398      756E7473 
 2398      546F5F75 
 2399              	.LASF35:
 2400 01c6 4144435F 		.ascii	"ADC_SAR_1_Start\000"
 2400      5341525F 
 2400      315F5374 
 2400      61727400 
 2401              	.LASF21:
 2402 01d6 696E7436 		.ascii	"int64\000"
 2402      3400
 2403              	.LASF42:
 2404 01dc 4144435F 		.ascii	"ADC_SAR_1_SetOffset\000"
 2404      5341525F 
 2404      315F5365 
 2404      744F6666 
 2404      73657400 
ARM GAS  C:\Users\sinow\AppData\Local\Temp\ccjMou1W.s 			page 61


 2405              	.LASF63:
 2406 01f0 4379496E 		.ascii	"CyIntSetPriority\000"
 2406      74536574 
 2406      5072696F 
 2406      72697479 
 2406      00
 2407              	.LASF19:
 2408 0201 666C6F61 		.ascii	"float\000"
 2408      7400
 2409              	.LASF54:
 2410 0207 4144435F 		.ascii	"ADC_SAR_1_initVar\000"
 2410      5341525F 
 2410      315F696E 
 2410      69745661 
 2410      7200
 2411              	.LASF32:
 2412 0219 706F7765 		.ascii	"power\000"
 2412      7200
 2413              	.LASF22:
 2414 021f 72656738 		.ascii	"reg8\000"
 2414      00
 2415              	.LASF67:
 2416 0224 433A5C55 		.ascii	"C:\\Users\\sinow\\Documents\\PSoC Creator\\Lab 5 - "
 2416      73657273 
 2416      5C73696E 
 2416      6F775C44 
 2416      6F63756D 
 2417 0252 46696E61 		.ascii	"Final Project\\Demo.cydsn\000"
 2417      6C205072 
 2417      6F6A6563 
 2417      745C4465 
 2417      6D6F2E63 
 2418              	.LASF59:
 2419 026b 43794861 		.ascii	"CyHalt\000"
 2419      6C7400
 2420              	.LASF4:
 2421 0272 756E7369 		.ascii	"unsigned char\000"
 2421      676E6564 
 2421      20636861 
 2421      7200
 2422              	.LASF47:
 2423 0280 4144435F 		.ascii	"ADC_SAR_1_CountsTo_mVolts\000"
 2423      5341525F 
 2423      315F436F 
 2423      756E7473 
 2423      546F5F6D 
 2424              	.LASF5:
 2425 029a 73686F72 		.ascii	"short int\000"
 2425      7420696E 
 2425      7400
 2426              	.LASF45:
 2427 02a4 61646347 		.ascii	"adcGain\000"
 2427      61696E00 
 2428              	.LASF28:
 2429 02ac 4144435F 		.ascii	"ADC_SAR_1_Enable\000"
 2429      5341525F 
 2429      315F456E 
ARM GAS  C:\Users\sinow\AppData\Local\Temp\ccjMou1W.s 			page 62


 2429      61626C65 
 2429      00
 2430              	.LASF46:
 2431 02bd 4144435F 		.ascii	"ADC_SAR_1_SetScaledGain\000"
 2431      5341525F 
 2431      315F5365 
 2431      74536361 
 2431      6C656447 
 2432              	.LASF65:
 2433 02d5 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 2433      43313120 
 2433      352E342E 
 2433      31203230 
 2433      31363036 
 2434 0308 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 2434      20726576 
 2434      6973696F 
 2434      6E203233 
 2434      37373135 
 2435 033b 67202D66 		.ascii	"g -ffunction-sections -ffat-lto-objects\000"
 2435      66756E63 
 2435      74696F6E 
 2435      2D736563 
 2435      74696F6E 
 2436              	.LASF41:
 2437 0363 4144435F 		.ascii	"ADC_SAR_1_GetResult16\000"
 2437      5341525F 
 2437      315F4765 
 2437      74526573 
 2437      756C7431 
 2438              	.LASF31:
 2439 0379 7265736F 		.ascii	"resolution\000"
 2439      6C757469 
 2439      6F6E00
 2440              	.LASF66:
 2441 0384 47656E65 		.ascii	"Generated_Source\\PSoC5\\ADC_SAR_1.c\000"
 2441      72617465 
 2441      645F536F 
 2441      75726365 
 2441      5C50536F 
 2442              	.LASF11:
 2443 03a7 63686172 		.ascii	"char\000"
 2443      00
 2444              	.LASF52:
 2445 03ac 4144435F 		.ascii	"ADC_SAR_1_CountsTo_Volts\000"
 2445      5341525F 
 2445      315F436F 
 2445      756E7473 
 2445      546F5F56 
 2446              	.LASF43:
 2447 03c5 6F666673 		.ascii	"offset\000"
 2447      657400
 2448              	.LASF37:
 2449 03cc 4144435F 		.ascii	"ADC_SAR_1_StopConvert\000"
 2449      5341525F 
 2449      315F5374 
 2449      6F70436F 
ARM GAS  C:\Users\sinow\AppData\Local\Temp\ccjMou1W.s 			page 63


 2449      6E766572 
 2450              	.LASF48:
 2451 03e2 61646343 		.ascii	"adcCounts\000"
 2451      6F756E74 
 2451      7300
 2452              	.LASF27:
 2453 03ec 656E6162 		.ascii	"enableInterrupts\000"
 2453      6C65496E 
 2453      74657272 
 2453      75707473 
 2453      00
 2454              	.LASF39:
 2455 03fd 73746174 		.ascii	"status\000"
 2455      757300
 2456              	.LASF40:
 2457 0404 4144435F 		.ascii	"ADC_SAR_1_IsEndConversion\000"
 2457      5341525F 
 2457      315F4973 
 2457      456E6443 
 2457      6F6E7665 
 2458              	.LASF30:
 2459 041e 4144435F 		.ascii	"ADC_SAR_1_SetPower\000"
 2459      5341525F 
 2459      315F5365 
 2459      74506F77 
 2459      657200
 2460              	.LASF44:
 2461 0431 4144435F 		.ascii	"ADC_SAR_1_SetGain\000"
 2461      5341525F 
 2461      315F5365 
 2461      74476169 
 2461      6E00
 2462              	.LASF16:
 2463 0443 696E7431 		.ascii	"int16\000"
 2463      3600
 2464              	.LASF57:
 2465 0449 4144435F 		.ascii	"ADC_SAR_1_countsPer10Volt\000"
 2465      5341525F 
 2465      315F636F 
 2465      756E7473 
 2465      50657231 
 2466              	.LASF36:
 2467 0463 4144435F 		.ascii	"ADC_SAR_1_StartConvert\000"
 2467      5341525F 
 2467      315F5374 
 2467      61727443 
 2467      6F6E7665 
 2468              	.LASF26:
 2469 047a 746D7052 		.ascii	"tmpReg\000"
 2469      656700
 2470              	.LASF58:
 2471 0481 4144435F 		.ascii	"ADC_SAR_1_shift\000"
 2471      5341525F 
 2471      315F7368 
 2471      69667400 
 2472              	.LASF29:
 2473 0491 4144435F 		.ascii	"ADC_SAR_1_Stop\000"
ARM GAS  C:\Users\sinow\AppData\Local\Temp\ccjMou1W.s 			page 64


 2473      5341525F 
 2473      315F5374 
 2473      6F7000
 2474              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
